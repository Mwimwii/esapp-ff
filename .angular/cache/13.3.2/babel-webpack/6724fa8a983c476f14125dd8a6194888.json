{"ast":null,"code":"import _inherits from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _createClass from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport * as i2 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport * as i12 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Component, ChangeDetectionStrategy, Optional, Inject, ViewChild, Output, Input, Injector, TemplateRef, Injectable, SkipSelf, ContentChild, NgModule } from '@angular/core';\nimport { Subject, fromEvent, defer } from 'rxjs';\nimport { takeUntil, filter, take, startWith } from 'rxjs/operators';\nimport { warn } from 'ng-zorro-antd/core/logger';\nimport { getElementOffset, isNotNil, isPromise, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i8 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i3 from 'ng-zorro-antd/core/config';\nimport * as i1$1 from 'ng-zorro-antd/i18n';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport * as i2$1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i3$1 from 'ng-zorro-antd/core/transition-patch';\nimport * as i4 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i7 from 'ng-zorro-antd/button';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport * as i13 from 'ng-zorro-antd/core/wave';\nimport * as i14 from 'ng-zorro-antd/pipes';\nimport { NzPipesModule } from 'ng-zorro-antd/pipes';\nimport { __awaiter, __rest, __decorate } from 'tslib';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i3$2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar _c0 = [\"nz-modal-close\", \"\"];\n\nfunction NzModalCloseComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var closeIcon_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", closeIcon_r1);\n  }\n}\n\nvar _c1 = [\"modalElement\"];\n\nfunction NzModalConfirmContainerComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function NzModalConfirmContainerComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onCloseClick();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NzModalConfirmContainerComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 17);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.config.nzTitle, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzModalConfirmContainerComponent_ng_template_12_Template(rf, ctx) {}\n\nfunction NzModalConfirmContainerComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 17);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r4.config.nzContent, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzModalConfirmContainerComponent_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function NzModalConfirmContainerComponent_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onCancel();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzLoading\", !!ctx_r5.config.nzCancelLoading)(\"disabled\", ctx_r5.config.nzCancelDisabled);\n    i0.ɵɵattribute(\"cdkFocusInitial\", ctx_r5.config.nzAutofocus === \"cancel\" || null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.config.nzCancelText || ctx_r5.locale.cancelText, \" \");\n  }\n}\n\nfunction NzModalConfirmContainerComponent_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function NzModalConfirmContainerComponent_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      var ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onOk();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r6.config.nzOkType)(\"nzLoading\", !!ctx_r6.config.nzOkLoading)(\"disabled\", ctx_r6.config.nzOkDisabled)(\"nzDanger\", ctx_r6.config.nzOkDanger);\n    i0.ɵɵattribute(\"cdkFocusInitial\", ctx_r6.config.nzAutofocus === \"ok\" || null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.config.nzOkText || ctx_r6.locale.okText, \" \");\n  }\n}\n\nvar _c2 = [\"nz-modal-title\", \"\"];\n\nfunction NzModalTitleComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.config.nzTitle, i0.ɵɵsanitizeHtml);\n  }\n}\n\nvar _c3 = [\"nz-modal-footer\", \"\"];\n\nfunction NzModalFooterComponent_ng_container_0_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r4.config.nzFooter, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_button_1_Template_button_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r9);\n      var button_r7 = restoredCtx.$implicit;\n      var ctx_r8 = i0.ɵɵnextContext(4);\n      return ctx_r8.onButtonClick(button_r7);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var button_r7 = ctx.$implicit;\n    var ctx_r6 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"hidden\", !ctx_r6.getButtonCallableProp(button_r7, \"show\"))(\"nzLoading\", ctx_r6.getButtonCallableProp(button_r7, \"loading\"))(\"disabled\", ctx_r6.getButtonCallableProp(button_r7, \"disabled\"))(\"nzType\", button_r7.type)(\"nzDanger\", button_r7.danger)(\"nzShape\", button_r7.shape)(\"nzSize\", button_r7.size)(\"nzGhost\", button_r7.ghost);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", button_r7.label, \" \");\n  }\n}\n\nfunction NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_button_1_Template, 2, 9, \"button\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.buttons);\n  }\n}\n\nfunction NzModalFooterComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzModalFooterComponent_ng_container_0_ng_container_1_div_1_Template, 1, 1, \"div\", 3);\n    i0.ɵɵtemplate(2, NzModalFooterComponent_ng_container_0_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.buttonsFooter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.buttonsFooter);\n  }\n}\n\nvar _c4 = function _c4(a0, a1) {\n  return {\n    $implicit: a0,\n    modalRef: a1\n  };\n};\n\nfunction NzModalFooterComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzModalFooterComponent_ng_container_0_ng_container_1_Template, 3, 2, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.config.nzFooter)(\"nzStringTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c4, ctx_r0.config.nzComponentParams, ctx_r0.modalRef));\n  }\n}\n\nfunction NzModalFooterComponent_ng_template_1_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function NzModalFooterComponent_ng_template_1_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      var ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.onCancel();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzLoading\", !!ctx_r10.config.nzCancelLoading)(\"disabled\", ctx_r10.config.nzCancelDisabled);\n    i0.ɵɵattribute(\"cdkFocusInitial\", ctx_r10.config.nzAutofocus === \"cancel\" || null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.config.nzCancelText || ctx_r10.locale.cancelText, \" \");\n  }\n}\n\nfunction NzModalFooterComponent_ng_template_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NzModalFooterComponent_ng_template_1_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onOk();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzType\", ctx_r11.config.nzOkType)(\"nzDanger\", ctx_r11.config.nzOkDanger)(\"nzLoading\", !!ctx_r11.config.nzOkLoading)(\"disabled\", ctx_r11.config.nzOkDisabled);\n    i0.ɵɵattribute(\"cdkFocusInitial\", ctx_r11.config.nzAutofocus === \"ok\" || null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.config.nzOkText || ctx_r11.locale.okText, \" \");\n  }\n}\n\nfunction NzModalFooterComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzModalFooterComponent_ng_template_1_button_0_Template, 2, 4, \"button\", 8);\n    i0.ɵɵtemplate(1, NzModalFooterComponent_ng_template_1_button_1_Template, 2, 6, \"button\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.config.nzCancelText !== null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.config.nzOkText !== null);\n  }\n}\n\nfunction NzModalContainerComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function NzModalContainerComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onCloseClick();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NzModalContainerComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 10);\n  }\n}\n\nfunction NzModalContainerComponent_ng_template_7_Template(rf, ctx) {}\n\nfunction NzModalContainerComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 11);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r4.config.nzContent, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzModalContainerComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"cancelTriggered\", function NzModalContainerComponent_div_9_Template_div_cancelTriggered_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onCloseClick();\n    })(\"okTriggered\", function NzModalContainerComponent_div_9_Template_div_okTriggered_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onOkClick();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"modalRef\", ctx_r5.modalRef);\n  }\n}\n\nvar noopFun = function noopFun() {\n  return void 0;\n};\n\nvar ModalOptions = /*#__PURE__*/_createClass(function ModalOptions() {\n  _classCallCheck(this, ModalOptions);\n\n  this.nzCentered = false;\n  this.nzClosable = true;\n  this.nzOkLoading = false;\n  this.nzOkDisabled = false;\n  this.nzCancelDisabled = false;\n  this.nzCancelLoading = false;\n  this.nzNoAnimation = false;\n  this.nzAutofocus = 'auto';\n  this.nzKeyboard = true;\n  this.nzZIndex = 1000;\n  this.nzWidth = 520;\n  this.nzCloseIcon = 'close';\n  this.nzOkType = 'primary';\n  this.nzOkDanger = false;\n  this.nzModalType = 'default';\n  this.nzOnCancel = noopFun;\n  this.nzOnOk = noopFun; // Confirm\n\n  this.nzIconType = 'question-circle';\n});\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar ZOOM_CLASS_NAME_MAP = {\n  enter: 'ant-zoom-enter',\n  enterActive: 'ant-zoom-enter-active',\n  leave: 'ant-zoom-leave',\n  leaveActive: 'ant-zoom-leave-active'\n};\nvar FADE_CLASS_NAME_MAP = {\n  enter: 'ant-fade-enter',\n  enterActive: 'ant-fade-enter-active',\n  leave: 'ant-fade-leave',\n  leaveActive: 'ant-fade-leave-active'\n};\nvar MODAL_MASK_CLASS_NAME = 'ant-modal-mask';\nvar NZ_CONFIG_MODULE_NAME = 'modal';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar nzModalAnimations = {\n  modalContainer: trigger('modalContainer', [state('void, exit', style({})), state('enter', style({})), transition('* => enter', animate('.24s', style({}))), transition('* => void, * => exit', animate('.2s', style({})))])\n};\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nfunction applyConfigDefaults(config, defaultOptions) {\n  return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\nfunction getValueWithConfig(userValue, configValue, defaultValue) {\n  return typeof userValue === 'undefined' ? typeof configValue === 'undefined' ? defaultValue : configValue : userValue;\n}\n/**\n * Assign the params into the content component instance.\n *\n * @deprecated Should use dependency injection to get the params for user\n * @breaking-change 14.0.0\n */\n\n\nfunction setContentInstanceParams(instance, params) {\n  Object.assign(instance, params);\n}\n\nfunction getConfigFromComponent(component) {\n  var nzCentered = component.nzCentered,\n      nzMask = component.nzMask,\n      nzMaskClosable = component.nzMaskClosable,\n      nzClosable = component.nzClosable,\n      nzOkLoading = component.nzOkLoading,\n      nzOkDisabled = component.nzOkDisabled,\n      nzCancelDisabled = component.nzCancelDisabled,\n      nzCancelLoading = component.nzCancelLoading,\n      nzKeyboard = component.nzKeyboard,\n      nzNoAnimation = component.nzNoAnimation,\n      nzContent = component.nzContent,\n      nzComponentParams = component.nzComponentParams,\n      nzFooter = component.nzFooter,\n      nzZIndex = component.nzZIndex,\n      nzWidth = component.nzWidth,\n      nzWrapClassName = component.nzWrapClassName,\n      nzClassName = component.nzClassName,\n      nzStyle = component.nzStyle,\n      nzTitle = component.nzTitle,\n      nzCloseIcon = component.nzCloseIcon,\n      nzMaskStyle = component.nzMaskStyle,\n      nzBodyStyle = component.nzBodyStyle,\n      nzOkText = component.nzOkText,\n      nzCancelText = component.nzCancelText,\n      nzOkType = component.nzOkType,\n      nzOkDanger = component.nzOkDanger,\n      nzIconType = component.nzIconType,\n      nzModalType = component.nzModalType,\n      nzOnOk = component.nzOnOk,\n      nzOnCancel = component.nzOnCancel,\n      nzAfterOpen = component.nzAfterOpen,\n      nzAfterClose = component.nzAfterClose,\n      nzCloseOnNavigation = component.nzCloseOnNavigation,\n      nzAutofocus = component.nzAutofocus;\n  return {\n    nzCentered: nzCentered,\n    nzMask: nzMask,\n    nzMaskClosable: nzMaskClosable,\n    nzClosable: nzClosable,\n    nzOkLoading: nzOkLoading,\n    nzOkDisabled: nzOkDisabled,\n    nzCancelDisabled: nzCancelDisabled,\n    nzCancelLoading: nzCancelLoading,\n    nzKeyboard: nzKeyboard,\n    nzNoAnimation: nzNoAnimation,\n    nzContent: nzContent,\n    nzComponentParams: nzComponentParams,\n    nzFooter: nzFooter,\n    nzZIndex: nzZIndex,\n    nzWidth: nzWidth,\n    nzWrapClassName: nzWrapClassName,\n    nzClassName: nzClassName,\n    nzStyle: nzStyle,\n    nzTitle: nzTitle,\n    nzCloseIcon: nzCloseIcon,\n    nzMaskStyle: nzMaskStyle,\n    nzBodyStyle: nzBodyStyle,\n    nzOkText: nzOkText,\n    nzCancelText: nzCancelText,\n    nzOkType: nzOkType,\n    nzOkDanger: nzOkDanger,\n    nzIconType: nzIconType,\n    nzModalType: nzModalType,\n    nzOnOk: nzOnOk,\n    nzOnCancel: nzOnCancel,\n    nzAfterOpen: nzAfterOpen,\n    nzAfterClose: nzAfterClose,\n    nzCloseOnNavigation: nzCloseOnNavigation,\n    nzAutofocus: nzAutofocus\n  };\n}\n\nfunction throwNzModalContentAlreadyAttachedError() {\n  throw Error('Attempting to attach modal content after content is already attached');\n}\n\nvar BaseModalContainerComponent = /*#__PURE__*/function (_BasePortalOutlet) {\n  _inherits(BaseModalContainerComponent, _BasePortalOutlet);\n\n  var _super = _createSuper(BaseModalContainerComponent);\n\n  function BaseModalContainerComponent(ngZone, host, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType) {\n    var _this;\n\n    _classCallCheck(this, BaseModalContainerComponent);\n\n    _this = _super.call(this);\n    _this.ngZone = ngZone;\n    _this.host = host;\n    _this.focusTrapFactory = focusTrapFactory;\n    _this.cdr = cdr;\n    _this.render = render;\n    _this.overlayRef = overlayRef;\n    _this.nzConfigService = nzConfigService;\n    _this.config = config;\n    _this.animationType = animationType;\n    _this.animationStateChanged = new EventEmitter();\n    _this.containerClick = new EventEmitter();\n    _this.cancelTriggered = new EventEmitter();\n    _this.okTriggered = new EventEmitter();\n    _this.state = 'enter';\n    _this.isStringContent = false;\n    _this.dir = 'ltr';\n    _this.elementFocusedBeforeModalWasOpened = null;\n    _this.mouseDown = false;\n    _this.oldMaskStyle = null;\n    _this.destroy$ = new Subject();\n    _this.document = document;\n    _this.dir = overlayRef.getDirection();\n    _this.isStringContent = typeof config.nzContent === 'string';\n\n    _this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(_this.destroy$)).subscribe(function () {\n      _this.updateMaskClassname();\n    });\n\n    return _this;\n  }\n\n  _createClass(BaseModalContainerComponent, [{\n    key: \"showMask\",\n    get: function get() {\n      var defaultConfig = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME) || {};\n      return !!getValueWithConfig(this.config.nzMask, defaultConfig.nzMask, true);\n    }\n  }, {\n    key: \"maskClosable\",\n    get: function get() {\n      var defaultConfig = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME) || {};\n      return !!getValueWithConfig(this.config.nzMaskClosable, defaultConfig.nzMaskClosable, true);\n    }\n  }, {\n    key: \"onContainerClick\",\n    value: function onContainerClick(e) {\n      if (e.target === e.currentTarget && !this.mouseDown && this.showMask && this.maskClosable) {\n        this.containerClick.emit();\n      }\n    }\n  }, {\n    key: \"onCloseClick\",\n    value: function onCloseClick() {\n      this.cancelTriggered.emit();\n    }\n  }, {\n    key: \"onOkClick\",\n    value: function onOkClick() {\n      this.okTriggered.emit();\n    }\n  }, {\n    key: \"attachComponentPortal\",\n    value: function attachComponentPortal(portal) {\n      if (this.portalOutlet.hasAttached()) {\n        throwNzModalContentAlreadyAttachedError();\n      }\n\n      this.savePreviouslyFocusedElement();\n      this.setZIndexForBackdrop();\n      return this.portalOutlet.attachComponentPortal(portal);\n    }\n  }, {\n    key: \"attachTemplatePortal\",\n    value: function attachTemplatePortal(portal) {\n      if (this.portalOutlet.hasAttached()) {\n        throwNzModalContentAlreadyAttachedError();\n      }\n\n      this.savePreviouslyFocusedElement();\n      this.setZIndexForBackdrop();\n      return this.portalOutlet.attachTemplatePortal(portal);\n    }\n  }, {\n    key: \"attachStringContent\",\n    value: function attachStringContent() {\n      this.savePreviouslyFocusedElement();\n      this.setZIndexForBackdrop();\n    }\n  }, {\n    key: \"getNativeElement\",\n    value: function getNativeElement() {\n      return this.host.nativeElement;\n    }\n  }, {\n    key: \"animationDisabled\",\n    value: function animationDisabled() {\n      return this.config.nzNoAnimation || this.animationType === 'NoopAnimations';\n    }\n  }, {\n    key: \"setModalTransformOrigin\",\n    value: function setModalTransformOrigin() {\n      var modalElement = this.modalElementRef.nativeElement;\n\n      if (this.elementFocusedBeforeModalWasOpened) {\n        var previouslyDOMRect = this.elementFocusedBeforeModalWasOpened.getBoundingClientRect();\n        var lastPosition = getElementOffset(this.elementFocusedBeforeModalWasOpened);\n        var x = lastPosition.left + previouslyDOMRect.width / 2;\n        var y = lastPosition.top + previouslyDOMRect.height / 2;\n        var transformOrigin = \"\".concat(x - modalElement.offsetLeft, \"px \").concat(y - modalElement.offsetTop, \"px 0px\");\n        this.render.setStyle(modalElement, 'transform-origin', transformOrigin);\n      }\n    }\n  }, {\n    key: \"savePreviouslyFocusedElement\",\n    value: function savePreviouslyFocusedElement() {\n      var _this2 = this;\n\n      if (!this.focusTrap) {\n        this.focusTrap = this.focusTrapFactory.create(this.host.nativeElement);\n      }\n\n      if (this.document) {\n        this.elementFocusedBeforeModalWasOpened = this.document.activeElement;\n\n        if (this.host.nativeElement.focus) {\n          this.ngZone.runOutsideAngular(function () {\n            return Promise.resolve().then(function () {\n              return _this2.host.nativeElement.focus();\n            });\n          });\n        }\n      }\n    }\n  }, {\n    key: \"trapFocus\",\n    value: function trapFocus() {\n      var element = this.host.nativeElement;\n\n      if (this.config.nzAutofocus) {\n        this.focusTrap.focusInitialElementWhenReady();\n      } else {\n        var activeElement = this.document.activeElement;\n\n        if (activeElement !== element && !element.contains(activeElement)) {\n          element.focus();\n        }\n      }\n    }\n  }, {\n    key: \"restoreFocus\",\n    value: function restoreFocus() {\n      var toFocus = this.elementFocusedBeforeModalWasOpened; // We need the extra check, because IE can set the `activeElement` to null in some cases.\n\n      if (toFocus && typeof toFocus.focus === 'function') {\n        var activeElement = this.document.activeElement;\n        var element = this.host.nativeElement;\n\n        if (!activeElement || activeElement === this.document.body || activeElement === element || element.contains(activeElement)) {\n          toFocus.focus();\n        }\n      }\n\n      if (this.focusTrap) {\n        this.focusTrap.destroy();\n      }\n    }\n  }, {\n    key: \"setEnterAnimationClass\",\n    value: function setEnterAnimationClass() {\n      if (this.animationDisabled()) {\n        return;\n      } // Make sure to set the `TransformOrigin` style before set the modelElement's class names\n\n\n      this.setModalTransformOrigin();\n      var modalElement = this.modalElementRef.nativeElement;\n      var backdropElement = this.overlayRef.backdropElement;\n      modalElement.classList.add(ZOOM_CLASS_NAME_MAP.enter);\n      modalElement.classList.add(ZOOM_CLASS_NAME_MAP.enterActive);\n\n      if (backdropElement) {\n        backdropElement.classList.add(FADE_CLASS_NAME_MAP.enter);\n        backdropElement.classList.add(FADE_CLASS_NAME_MAP.enterActive);\n      }\n    }\n  }, {\n    key: \"setExitAnimationClass\",\n    value: function setExitAnimationClass() {\n      var modalElement = this.modalElementRef.nativeElement;\n      modalElement.classList.add(ZOOM_CLASS_NAME_MAP.leave);\n      modalElement.classList.add(ZOOM_CLASS_NAME_MAP.leaveActive);\n      this.setMaskExitAnimationClass();\n    }\n  }, {\n    key: \"setMaskExitAnimationClass\",\n    value: function setMaskExitAnimationClass() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var backdropElement = this.overlayRef.backdropElement;\n\n      if (backdropElement) {\n        if (this.animationDisabled() || force) {\n          // https://github.com/angular/components/issues/18645\n          backdropElement.classList.remove(MODAL_MASK_CLASS_NAME);\n          return;\n        }\n\n        backdropElement.classList.add(FADE_CLASS_NAME_MAP.leave);\n        backdropElement.classList.add(FADE_CLASS_NAME_MAP.leaveActive);\n      }\n    }\n  }, {\n    key: \"cleanAnimationClass\",\n    value: function cleanAnimationClass() {\n      if (this.animationDisabled()) {\n        return;\n      }\n\n      var backdropElement = this.overlayRef.backdropElement;\n      var modalElement = this.modalElementRef.nativeElement;\n\n      if (backdropElement) {\n        backdropElement.classList.remove(FADE_CLASS_NAME_MAP.enter);\n        backdropElement.classList.remove(FADE_CLASS_NAME_MAP.enterActive);\n      }\n\n      modalElement.classList.remove(ZOOM_CLASS_NAME_MAP.enter);\n      modalElement.classList.remove(ZOOM_CLASS_NAME_MAP.enterActive);\n      modalElement.classList.remove(ZOOM_CLASS_NAME_MAP.leave);\n      modalElement.classList.remove(ZOOM_CLASS_NAME_MAP.leaveActive);\n    }\n  }, {\n    key: \"setZIndexForBackdrop\",\n    value: function setZIndexForBackdrop() {\n      var backdropElement = this.overlayRef.backdropElement;\n\n      if (backdropElement) {\n        if (isNotNil(this.config.nzZIndex)) {\n          this.render.setStyle(backdropElement, 'z-index', this.config.nzZIndex);\n        }\n      }\n    }\n  }, {\n    key: \"bindBackdropStyle\",\n    value: function bindBackdropStyle() {\n      var _this3 = this;\n\n      var backdropElement = this.overlayRef.backdropElement;\n\n      if (backdropElement) {\n        if (this.oldMaskStyle) {\n          var styles = this.oldMaskStyle;\n          Object.keys(styles).forEach(function (key) {\n            _this3.render.removeStyle(backdropElement, key);\n          });\n          this.oldMaskStyle = null;\n        }\n\n        this.setZIndexForBackdrop();\n\n        if (typeof this.config.nzMaskStyle === 'object' && Object.keys(this.config.nzMaskStyle).length) {\n          var _styles = Object.assign({}, this.config.nzMaskStyle);\n\n          Object.keys(_styles).forEach(function (key) {\n            _this3.render.setStyle(backdropElement, key, _styles[key]);\n          });\n          this.oldMaskStyle = _styles;\n        }\n      }\n    }\n  }, {\n    key: \"updateMaskClassname\",\n    value: function updateMaskClassname() {\n      var backdropElement = this.overlayRef.backdropElement;\n\n      if (backdropElement) {\n        if (this.showMask) {\n          backdropElement.classList.add(MODAL_MASK_CLASS_NAME);\n        } else {\n          backdropElement.classList.remove(MODAL_MASK_CLASS_NAME);\n        }\n      }\n    }\n  }, {\n    key: \"onAnimationDone\",\n    value: function onAnimationDone(event) {\n      if (event.toState === 'enter') {\n        this.trapFocus();\n      } else if (event.toState === 'exit') {\n        this.restoreFocus();\n      }\n\n      this.cleanAnimationClass();\n      this.animationStateChanged.emit(event);\n    }\n  }, {\n    key: \"onAnimationStart\",\n    value: function onAnimationStart(event) {\n      if (event.toState === 'enter') {\n        this.setEnterAnimationClass();\n        this.bindBackdropStyle();\n      } else if (event.toState === 'exit') {\n        this.setExitAnimationClass();\n      }\n\n      this.animationStateChanged.emit(event);\n    }\n  }, {\n    key: \"startExitAnimation\",\n    value: function startExitAnimation() {\n      this.state = 'exit';\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.setMaskExitAnimationClass(true);\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"setupMouseListeners\",\n    value: function setupMouseListeners(modalContainer) {\n      var _this4 = this;\n\n      this.ngZone.runOutsideAngular(function () {\n        fromEvent(_this4.host.nativeElement, 'mouseup').pipe(takeUntil(_this4.destroy$)).subscribe(function () {\n          if (_this4.mouseDown) {\n            setTimeout(function () {\n              _this4.mouseDown = false;\n            });\n          }\n        });\n        fromEvent(modalContainer.nativeElement, 'mousedown').pipe(takeUntil(_this4.destroy$)).subscribe(function () {\n          _this4.mouseDown = true;\n        });\n      });\n    }\n  }]);\n\n  return BaseModalContainerComponent;\n}(BasePortalOutlet);\n\nBaseModalContainerComponent.ɵfac = function BaseModalContainerComponent_Factory(t) {\n  i0.ɵɵinvalidFactory();\n};\n\nBaseModalContainerComponent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BaseModalContainerComponent,\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseModalContainerComponent, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.FocusTrapFactory\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i2.OverlayRef\n    }, {\n      type: i3.NzConfigService\n    }, {\n      type: ModalOptions\n    }, {\n      type: undefined\n    }, {\n      type: undefined\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzModalCloseComponent = /*#__PURE__*/_createClass(function NzModalCloseComponent(config) {\n  _classCallCheck(this, NzModalCloseComponent);\n\n  this.config = config;\n});\n\nNzModalCloseComponent.ɵfac = function NzModalCloseComponent_Factory(t) {\n  return new (t || NzModalCloseComponent)(i0.ɵɵdirectiveInject(ModalOptions));\n};\n\nNzModalCloseComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzModalCloseComponent,\n  selectors: [[\"button\", \"nz-modal-close\", \"\"]],\n  hostAttrs: [\"aria-label\", \"Close\", 1, \"ant-modal-close\"],\n  exportAs: [\"NzModalCloseBuiltin\"],\n  attrs: _c0,\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"ant-modal-close-x\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 1, \"ant-modal-close-icon\", 3, \"nzType\"]],\n  template: function NzModalCloseComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵtemplate(1, NzModalCloseComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.config.nzCloseIcon);\n    }\n  },\n  directives: [i2$1.NzStringTemplateOutletDirective, i3$1.ɵNzTransitionPatchDirective, i4.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzModalCloseComponent, [{\n    type: Component,\n    args: [{\n      selector: 'button[nz-modal-close]',\n      exportAs: 'NzModalCloseBuiltin',\n      template: \"\\n    <span class=\\\"ant-modal-close-x\\\">\\n      <ng-container *nzStringTemplateOutlet=\\\"config.nzCloseIcon; let closeIcon\\\">\\n        <i nz-icon [nzType]=\\\"closeIcon\\\" class=\\\"ant-modal-close-icon\\\"></i>\\n      </ng-container>\\n    </span>\\n  \",\n      host: {\n        class: 'ant-modal-close',\n        'aria-label': 'Close'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ModalOptions\n    }];\n  }, null);\n})();\n\nvar NzModalConfirmContainerComponent = /*#__PURE__*/function (_BaseModalContainerCo) {\n  _inherits(NzModalConfirmContainerComponent, _BaseModalContainerCo);\n\n  var _super2 = _createSuper(NzModalConfirmContainerComponent);\n\n  function NzModalConfirmContainerComponent(ngZone, i18n, host, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType) {\n    var _this5;\n\n    _classCallCheck(this, NzModalConfirmContainerComponent);\n\n    _this5 = _super2.call(this, ngZone, host, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType);\n    _this5.i18n = i18n;\n    _this5.config = config;\n    _this5.cancelTriggered = new EventEmitter();\n    _this5.okTriggered = new EventEmitter();\n\n    _this5.i18n.localeChange.pipe(takeUntil(_this5.destroy$)).subscribe(function () {\n      _this5.locale = _this5.i18n.getLocaleData('Modal');\n    });\n\n    return _this5;\n  }\n\n  _createClass(NzModalConfirmContainerComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.setupMouseListeners(this.modalElementRef);\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.cancelTriggered.emit();\n    }\n  }, {\n    key: \"onOk\",\n    value: function onOk() {\n      this.okTriggered.emit();\n    }\n  }]);\n\n  return NzModalConfirmContainerComponent;\n}(BaseModalContainerComponent);\n\nNzModalConfirmContainerComponent.ɵfac = function NzModalConfirmContainerComponent_Factory(t) {\n  return new (t || NzModalConfirmContainerComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.NzI18nService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusTrapFactory), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.OverlayRef), i0.ɵɵdirectiveInject(i3.NzConfigService), i0.ɵɵdirectiveInject(ModalOptions), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nNzModalConfirmContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzModalConfirmContainerComponent,\n  selectors: [[\"nz-modal-confirm-container\"]],\n  viewQuery: function NzModalConfirmContainerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.portalOutlet = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalElementRef = _t.first);\n    }\n  },\n  hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\"],\n  hostVars: 10,\n  hostBindings: function NzModalConfirmContainerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵsyntheticHostListener(\"@modalContainer.start\", function NzModalConfirmContainerComponent_animation_modalContainer_start_HostBindingHandler($event) {\n        return ctx.onAnimationStart($event);\n      })(\"@modalContainer.done\", function NzModalConfirmContainerComponent_animation_modalContainer_done_HostBindingHandler($event) {\n        return ctx.onAnimationDone($event);\n      });\n      i0.ɵɵlistener(\"click\", function NzModalConfirmContainerComponent_click_HostBindingHandler($event) {\n        return ctx.onContainerClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.config.nzNoAnimation)(\"@modalContainer\", ctx.state);\n      i0.ɵɵclassMap(ctx.config.nzWrapClassName ? \"ant-modal-wrap \" + ctx.config.nzWrapClassName : \"ant-modal-wrap\");\n      i0.ɵɵstyleProp(\"z-index\", ctx.config.nzZIndex);\n      i0.ɵɵclassProp(\"ant-modal-wrap-rtl\", ctx.dir === \"rtl\")(\"ant-modal-centered\", ctx.config.nzCentered);\n    }\n  },\n  outputs: {\n    cancelTriggered: \"cancelTriggered\",\n    okTriggered: \"okTriggered\"\n  },\n  exportAs: [\"nzModalConfirmContainer\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 17,\n  vars: 13,\n  consts: [[\"role\", \"document\", 1, \"ant-modal\", 3, \"ngClass\", \"ngStyle\"], [\"modalElement\", \"\"], [1, \"ant-modal-content\"], [\"nz-modal-close\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"ant-modal-body\", 3, \"ngStyle\"], [1, \"ant-modal-confirm-body-wrapper\"], [1, \"ant-modal-confirm-body\"], [\"nz-icon\", \"\", 3, \"nzType\"], [1, \"ant-modal-confirm-title\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-modal-confirm-content\"], [\"cdkPortalOutlet\", \"\"], [3, \"innerHTML\", 4, \"ngIf\"], [1, \"ant-modal-confirm-btns\"], [\"nz-button\", \"\", 3, \"nzLoading\", \"disabled\", \"click\", 4, \"ngIf\"], [\"nz-button\", \"\", 3, \"nzType\", \"nzLoading\", \"disabled\", \"nzDanger\", \"click\", 4, \"ngIf\"], [\"nz-modal-close\", \"\", 3, \"click\"], [3, \"innerHTML\"], [\"nz-button\", \"\", 3, \"nzLoading\", \"disabled\", \"click\"], [\"nz-button\", \"\", 3, \"nzType\", \"nzLoading\", \"disabled\", \"nzDanger\", \"click\"]],\n  template: function NzModalConfirmContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵpipe(2, \"nzToCssUnit\");\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, NzModalConfirmContainerComponent_button_4_Template, 1, 0, \"button\", 3);\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6);\n      i0.ɵɵelement(8, \"i\", 7);\n      i0.ɵɵelementStart(9, \"span\", 8);\n      i0.ɵɵtemplate(10, NzModalConfirmContainerComponent_ng_container_10_Template, 2, 1, \"ng-container\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 10);\n      i0.ɵɵtemplate(12, NzModalConfirmContainerComponent_ng_template_12_Template, 0, 0, \"ng-template\", 11);\n      i0.ɵɵtemplate(13, NzModalConfirmContainerComponent_div_13_Template, 1, 1, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 13);\n      i0.ɵɵtemplate(15, NzModalConfirmContainerComponent_button_15_Template, 2, 4, \"button\", 14);\n      i0.ɵɵtemplate(16, NzModalConfirmContainerComponent_button_16_Template, 2, 6, \"button\", 15);\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", i0.ɵɵpipeBind1(2, 11, ctx.config == null ? null : ctx.config.nzWidth));\n      i0.ɵɵproperty(\"ngClass\", ctx.config.nzClassName)(\"ngStyle\", ctx.config.nzStyle);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.nzClosable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx.config.nzBodyStyle);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"nzType\", ctx.config.nzIconType);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.config.nzTitle);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isStringContent);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.nzCancelText !== null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.nzOkText !== null);\n    }\n  },\n  directives: [NzModalCloseComponent, i7.NzButtonComponent, i8.NgClass, i8.NgStyle, i8.NgIf, i3$1.ɵNzTransitionPatchDirective, i4.NzIconDirective, i2$1.NzStringTemplateOutletDirective, i12.CdkPortalOutlet, i13.NzWaveDirective],\n  pipes: [i14.NzToCssUnitPipe],\n  encapsulation: 2,\n  data: {\n    animation: [nzModalAnimations.modalContainer]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzModalConfirmContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-modal-confirm-container',\n      exportAs: 'nzModalConfirmContainer',\n      template: \"\\n    <div\\n      #modalElement\\n      role=\\\"document\\\"\\n      class=\\\"ant-modal\\\"\\n      [ngClass]=\\\"config.nzClassName!\\\"\\n      [ngStyle]=\\\"config.nzStyle!\\\"\\n      [style.width]=\\\"config?.nzWidth! | nzToCssUnit\\\"\\n    >\\n      <div class=\\\"ant-modal-content\\\">\\n        <button *ngIf=\\\"config.nzClosable\\\" nz-modal-close (click)=\\\"onCloseClick()\\\"></button>\\n        <div class=\\\"ant-modal-body\\\" [ngStyle]=\\\"config.nzBodyStyle!\\\">\\n          <div class=\\\"ant-modal-confirm-body-wrapper\\\">\\n            <div class=\\\"ant-modal-confirm-body\\\">\\n              <i nz-icon [nzType]=\\\"config.nzIconType!\\\"></i>\\n              <span class=\\\"ant-modal-confirm-title\\\">\\n                <ng-container *nzStringTemplateOutlet=\\\"config.nzTitle\\\">\\n                  <span [innerHTML]=\\\"config.nzTitle\\\"></span>\\n                </ng-container>\\n              </span>\\n              <div class=\\\"ant-modal-confirm-content\\\">\\n                <ng-template cdkPortalOutlet></ng-template>\\n                <div *ngIf=\\\"isStringContent\\\" [innerHTML]=\\\"config.nzContent\\\"></div>\\n              </div>\\n            </div>\\n            <div class=\\\"ant-modal-confirm-btns\\\">\\n              <button\\n                *ngIf=\\\"config.nzCancelText !== null\\\"\\n                [attr.cdkFocusInitial]=\\\"config.nzAutofocus === 'cancel' || null\\\"\\n                nz-button\\n                (click)=\\\"onCancel()\\\"\\n                [nzLoading]=\\\"!!config.nzCancelLoading\\\"\\n                [disabled]=\\\"config.nzCancelDisabled\\\"\\n              >\\n                {{ config.nzCancelText || locale.cancelText }}\\n              </button>\\n              <button\\n                *ngIf=\\\"config.nzOkText !== null\\\"\\n                [attr.cdkFocusInitial]=\\\"config.nzAutofocus === 'ok' || null\\\"\\n                nz-button\\n                [nzType]=\\\"config.nzOkType!\\\"\\n                (click)=\\\"onOk()\\\"\\n                [nzLoading]=\\\"!!config.nzOkLoading\\\"\\n                [disabled]=\\\"config.nzOkDisabled\\\"\\n                [nzDanger]=\\\"config.nzOkDanger\\\"\\n              >\\n                {{ config.nzOkText || locale.okText }}\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  \",\n      animations: [nzModalAnimations.modalContainer],\n      // Using OnPush for modal caused footer can not to detect changes. we can fix it when 8.x.\n      changeDetection: ChangeDetectionStrategy.Default,\n      host: {\n        tabindex: '-1',\n        role: 'dialog',\n        '[class]': 'config.nzWrapClassName ? \"ant-modal-wrap \" + config.nzWrapClassName : \"ant-modal-wrap\"',\n        '[class.ant-modal-wrap-rtl]': \"dir === 'rtl'\",\n        '[class.ant-modal-centered]': 'config.nzCentered',\n        '[style.zIndex]': 'config.nzZIndex',\n        '[@.disabled]': 'config.nzNoAnimation',\n        '[@modalContainer]': 'state',\n        '(@modalContainer.start)': 'onAnimationStart($event)',\n        '(@modalContainer.done)': 'onAnimationDone($event)',\n        '(click)': 'onContainerClick($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i1$1.NzI18nService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.FocusTrapFactory\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i2.OverlayRef\n    }, {\n      type: i3.NzConfigService\n    }, {\n      type: ModalOptions\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: true\n      }]\n    }],\n    modalElementRef: [{\n      type: ViewChild,\n      args: ['modalElement', {\n        static: true\n      }]\n    }],\n    cancelTriggered: [{\n      type: Output\n    }],\n    okTriggered: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzModalTitleComponent = /*#__PURE__*/_createClass(function NzModalTitleComponent(config) {\n  _classCallCheck(this, NzModalTitleComponent);\n\n  this.config = config;\n});\n\nNzModalTitleComponent.ɵfac = function NzModalTitleComponent_Factory(t) {\n  return new (t || NzModalTitleComponent)(i0.ɵɵdirectiveInject(ModalOptions));\n};\n\nNzModalTitleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzModalTitleComponent,\n  selectors: [[\"div\", \"nz-modal-title\", \"\"]],\n  hostAttrs: [1, \"ant-modal-header\"],\n  exportAs: [\"NzModalTitleBuiltin\"],\n  attrs: _c2,\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"ant-modal-title\"], [4, \"nzStringTemplateOutlet\"], [3, \"innerHTML\"]],\n  template: function NzModalTitleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NzModalTitleComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.config.nzTitle);\n    }\n  },\n  directives: [i2$1.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzModalTitleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'div[nz-modal-title]',\n      exportAs: 'NzModalTitleBuiltin',\n      template: \"\\n    <div class=\\\"ant-modal-title\\\">\\n      <ng-container *nzStringTemplateOutlet=\\\"config.nzTitle\\\">\\n        <div [innerHTML]=\\\"config.nzTitle\\\"></div>\\n      </ng-container>\\n    </div>\\n  \",\n      host: {\n        class: 'ant-modal-header'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ModalOptions\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzModalFooterComponent = /*#__PURE__*/function () {\n  function NzModalFooterComponent(i18n, config) {\n    var _this6 = this;\n\n    _classCallCheck(this, NzModalFooterComponent);\n\n    this.i18n = i18n;\n    this.config = config;\n    this.buttonsFooter = false;\n    this.buttons = [];\n    this.cancelTriggered = new EventEmitter();\n    this.okTriggered = new EventEmitter();\n    this.destroy$ = new Subject();\n\n    if (Array.isArray(config.nzFooter)) {\n      this.buttonsFooter = true;\n      this.buttons = config.nzFooter.map(mergeDefaultOption);\n    }\n\n    this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(function () {\n      _this6.locale = _this6.i18n.getLocaleData('Modal');\n    });\n  }\n\n  _createClass(NzModalFooterComponent, [{\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.cancelTriggered.emit();\n    }\n  }, {\n    key: \"onOk\",\n    value: function onOk() {\n      this.okTriggered.emit();\n    }\n    /**\n     * Returns the value of the specified key.\n     * If it is a function, run and return the return value of the function.\n     */\n\n  }, {\n    key: \"getButtonCallableProp\",\n    value: function getButtonCallableProp(options, prop) {\n      var value = options[prop];\n      var componentInstance = this.modalRef.getContentComponent();\n      return typeof value === 'function' ? value.apply(options, componentInstance && [componentInstance]) : value;\n    }\n    /**\n     * Run function based on the type and set its `loading` prop if needed.\n     */\n\n  }, {\n    key: \"onButtonClick\",\n    value: function onButtonClick(options) {\n      var loading = this.getButtonCallableProp(options, 'loading');\n\n      if (!loading) {\n        var result = this.getButtonCallableProp(options, 'onClick');\n\n        if (options.autoLoading && isPromise(result)) {\n          options.loading = true;\n          result.then(function () {\n            return options.loading = false;\n          }).catch(function (e) {\n            options.loading = false;\n            throw e;\n          });\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzModalFooterComponent;\n}();\n\nNzModalFooterComponent.ɵfac = function NzModalFooterComponent_Factory(t) {\n  return new (t || NzModalFooterComponent)(i0.ɵɵdirectiveInject(i1$1.NzI18nService), i0.ɵɵdirectiveInject(ModalOptions));\n};\n\nNzModalFooterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzModalFooterComponent,\n  selectors: [[\"div\", \"nz-modal-footer\", \"\"]],\n  hostAttrs: [1, \"ant-modal-footer\"],\n  inputs: {\n    modalRef: \"modalRef\"\n  },\n  outputs: {\n    cancelTriggered: \"cancelTriggered\",\n    okTriggered: \"okTriggered\"\n  },\n  exportAs: [\"NzModalFooterBuiltin\"],\n  attrs: _c3,\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"defaultFooterButtons\", \"\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [3, \"innerHTML\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"innerHTML\"], [\"nz-button\", \"\", 3, \"hidden\", \"nzLoading\", \"disabled\", \"nzType\", \"nzDanger\", \"nzShape\", \"nzSize\", \"nzGhost\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"nz-button\", \"\", 3, \"hidden\", \"nzLoading\", \"disabled\", \"nzType\", \"nzDanger\", \"nzShape\", \"nzSize\", \"nzGhost\", \"click\"], [\"nz-button\", \"\", 3, \"nzLoading\", \"disabled\", \"click\", 4, \"ngIf\"], [\"nz-button\", \"\", 3, \"nzType\", \"nzDanger\", \"nzLoading\", \"disabled\", \"click\", 4, \"ngIf\"], [\"nz-button\", \"\", 3, \"nzLoading\", \"disabled\", \"click\"], [\"nz-button\", \"\", 3, \"nzType\", \"nzDanger\", \"nzLoading\", \"disabled\", \"click\"]],\n  template: function NzModalFooterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzModalFooterComponent_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NzModalFooterComponent_ng_template_1_Template, 2, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.config.nzFooter)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i7.NzButtonComponent, i8.NgIf, i2$1.NzStringTemplateOutletDirective, i8.NgForOf, i13.NzWaveDirective, i3$1.ɵNzTransitionPatchDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzModalFooterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'div[nz-modal-footer]',\n      exportAs: 'NzModalFooterBuiltin',\n      template: \"\\n    <ng-container *ngIf=\\\"config.nzFooter; else defaultFooterButtons\\\">\\n      <ng-container\\n        *nzStringTemplateOutlet=\\\"config.nzFooter; context: { $implicit: config.nzComponentParams, modalRef: modalRef }\\\"\\n      >\\n        <div *ngIf=\\\"!buttonsFooter\\\" [innerHTML]=\\\"config.nzFooter\\\"></div>\\n        <ng-container *ngIf=\\\"buttonsFooter\\\">\\n          <button\\n            *ngFor=\\\"let button of buttons\\\"\\n            nz-button\\n            (click)=\\\"onButtonClick(button)\\\"\\n            [hidden]=\\\"!getButtonCallableProp(button, 'show')\\\"\\n            [nzLoading]=\\\"getButtonCallableProp(button, 'loading')\\\"\\n            [disabled]=\\\"getButtonCallableProp(button, 'disabled')\\\"\\n            [nzType]=\\\"button.type!\\\"\\n            [nzDanger]=\\\"button.danger\\\"\\n            [nzShape]=\\\"button.shape!\\\"\\n            [nzSize]=\\\"button.size!\\\"\\n            [nzGhost]=\\\"button.ghost!\\\"\\n          >\\n            {{ button.label }}\\n          </button>\\n        </ng-container>\\n      </ng-container>\\n    </ng-container>\\n    <ng-template #defaultFooterButtons>\\n      <button\\n        *ngIf=\\\"config.nzCancelText !== null\\\"\\n        [attr.cdkFocusInitial]=\\\"config.nzAutofocus === 'cancel' || null\\\"\\n        nz-button\\n        (click)=\\\"onCancel()\\\"\\n        [nzLoading]=\\\"!!config.nzCancelLoading\\\"\\n        [disabled]=\\\"config.nzCancelDisabled\\\"\\n      >\\n        {{ config.nzCancelText || locale.cancelText }}\\n      </button>\\n      <button\\n        *ngIf=\\\"config.nzOkText !== null\\\"\\n        [attr.cdkFocusInitial]=\\\"config.nzAutofocus === 'ok' || null\\\"\\n        nz-button\\n        [nzType]=\\\"config.nzOkType!\\\"\\n        [nzDanger]=\\\"config.nzOkDanger\\\"\\n        (click)=\\\"onOk()\\\"\\n        [nzLoading]=\\\"!!config.nzOkLoading\\\"\\n        [disabled]=\\\"config.nzOkDisabled\\\"\\n      >\\n        {{ config.nzOkText || locale.okText }}\\n      </button>\\n    </ng-template>\\n  \",\n      host: {\n        class: 'ant-modal-footer'\n      },\n      changeDetection: ChangeDetectionStrategy.Default\n    }]\n  }], function () {\n    return [{\n      type: i1$1.NzI18nService\n    }, {\n      type: ModalOptions\n    }];\n  }, {\n    cancelTriggered: [{\n      type: Output\n    }],\n    okTriggered: [{\n      type: Output\n    }],\n    modalRef: [{\n      type: Input\n    }]\n  });\n})();\n\nfunction mergeDefaultOption(options) {\n  return Object.assign({\n    type: null,\n    size: 'default',\n    autoLoading: true,\n    show: true,\n    loading: false,\n    disabled: false\n  }, options);\n}\n\nvar NzModalContainerComponent = /*#__PURE__*/function (_BaseModalContainerCo2) {\n  _inherits(NzModalContainerComponent, _BaseModalContainerCo2);\n\n  var _super3 = _createSuper(NzModalContainerComponent);\n\n  function NzModalContainerComponent(ngZone, host, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType) {\n    var _this7;\n\n    _classCallCheck(this, NzModalContainerComponent);\n\n    _this7 = _super3.call(this, ngZone, host, focusTrapFactory, cdr, render, overlayRef, nzConfigService, config, document, animationType);\n    _this7.config = config;\n    return _this7;\n  }\n\n  _createClass(NzModalContainerComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.setupMouseListeners(this.modalElementRef);\n    }\n  }]);\n\n  return NzModalContainerComponent;\n}(BaseModalContainerComponent);\n\nNzModalContainerComponent.ɵfac = function NzModalContainerComponent_Factory(t) {\n  return new (t || NzModalContainerComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusTrapFactory), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.OverlayRef), i0.ɵɵdirectiveInject(i3.NzConfigService), i0.ɵɵdirectiveInject(ModalOptions), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nNzModalContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzModalContainerComponent,\n  selectors: [[\"nz-modal-container\"]],\n  viewQuery: function NzModalContainerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.portalOutlet = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalElementRef = _t.first);\n    }\n  },\n  hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\"],\n  hostVars: 10,\n  hostBindings: function NzModalContainerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵsyntheticHostListener(\"@modalContainer.start\", function NzModalContainerComponent_animation_modalContainer_start_HostBindingHandler($event) {\n        return ctx.onAnimationStart($event);\n      })(\"@modalContainer.done\", function NzModalContainerComponent_animation_modalContainer_done_HostBindingHandler($event) {\n        return ctx.onAnimationDone($event);\n      });\n      i0.ɵɵlistener(\"click\", function NzModalContainerComponent_click_HostBindingHandler($event) {\n        return ctx.onContainerClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.config.nzNoAnimation)(\"@modalContainer\", ctx.state);\n      i0.ɵɵclassMap(ctx.config.nzWrapClassName ? \"ant-modal-wrap \" + ctx.config.nzWrapClassName : \"ant-modal-wrap\");\n      i0.ɵɵstyleProp(\"z-index\", ctx.config.nzZIndex);\n      i0.ɵɵclassProp(\"ant-modal-wrap-rtl\", ctx.dir === \"rtl\")(\"ant-modal-centered\", ctx.config.nzCentered);\n    }\n  },\n  exportAs: [\"nzModalContainer\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 11,\n  consts: [[\"role\", \"document\", 1, \"ant-modal\", 3, \"ngClass\", \"ngStyle\"], [\"modalElement\", \"\"], [1, \"ant-modal-content\"], [\"nz-modal-close\", \"\", 3, \"click\", 4, \"ngIf\"], [\"nz-modal-title\", \"\", 4, \"ngIf\"], [1, \"ant-modal-body\", 3, \"ngStyle\"], [\"cdkPortalOutlet\", \"\"], [3, \"innerHTML\", 4, \"ngIf\"], [\"nz-modal-footer\", \"\", 3, \"modalRef\", \"cancelTriggered\", \"okTriggered\", 4, \"ngIf\"], [\"nz-modal-close\", \"\", 3, \"click\"], [\"nz-modal-title\", \"\"], [3, \"innerHTML\"], [\"nz-modal-footer\", \"\", 3, \"modalRef\", \"cancelTriggered\", \"okTriggered\"]],\n  template: function NzModalContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵpipe(2, \"nzToCssUnit\");\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, NzModalContainerComponent_button_4_Template, 1, 0, \"button\", 3);\n      i0.ɵɵtemplate(5, NzModalContainerComponent_div_5_Template, 1, 0, \"div\", 4);\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵtemplate(7, NzModalContainerComponent_ng_template_7_Template, 0, 0, \"ng-template\", 6);\n      i0.ɵɵtemplate(8, NzModalContainerComponent_div_8_Template, 1, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, NzModalContainerComponent_div_9_Template, 1, 1, \"div\", 8);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", i0.ɵɵpipeBind1(2, 9, ctx.config == null ? null : ctx.config.nzWidth));\n      i0.ɵɵproperty(\"ngClass\", ctx.config.nzClassName)(\"ngStyle\", ctx.config.nzStyle);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.nzClosable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.nzTitle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx.config.nzBodyStyle);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isStringContent);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.config.nzFooter !== null);\n    }\n  },\n  directives: [NzModalCloseComponent, NzModalTitleComponent, NzModalFooterComponent, i8.NgClass, i8.NgStyle, i8.NgIf, i12.CdkPortalOutlet],\n  pipes: [i14.NzToCssUnitPipe],\n  encapsulation: 2,\n  data: {\n    animation: [nzModalAnimations.modalContainer]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzModalContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-modal-container',\n      exportAs: 'nzModalContainer',\n      template: \"\\n    <div\\n      #modalElement\\n      role=\\\"document\\\"\\n      class=\\\"ant-modal\\\"\\n      [ngClass]=\\\"config.nzClassName!\\\"\\n      [ngStyle]=\\\"config.nzStyle!\\\"\\n      [style.width]=\\\"config?.nzWidth! | nzToCssUnit\\\"\\n    >\\n      <div class=\\\"ant-modal-content\\\">\\n        <button *ngIf=\\\"config.nzClosable\\\" nz-modal-close (click)=\\\"onCloseClick()\\\"></button>\\n        <div *ngIf=\\\"config.nzTitle\\\" nz-modal-title></div>\\n        <div class=\\\"ant-modal-body\\\" [ngStyle]=\\\"config.nzBodyStyle!\\\">\\n          <ng-template cdkPortalOutlet></ng-template>\\n          <div *ngIf=\\\"isStringContent\\\" [innerHTML]=\\\"config.nzContent\\\"></div>\\n        </div>\\n        <div\\n          *ngIf=\\\"config.nzFooter !== null\\\"\\n          nz-modal-footer\\n          [modalRef]=\\\"modalRef\\\"\\n          (cancelTriggered)=\\\"onCloseClick()\\\"\\n          (okTriggered)=\\\"onOkClick()\\\"\\n        ></div>\\n      </div>\\n    </div>\\n  \",\n      animations: [nzModalAnimations.modalContainer],\n      // Using OnPush for modal caused footer can not to detect changes. we can fix it when 8.x.\n      changeDetection: ChangeDetectionStrategy.Default,\n      host: {\n        tabindex: '-1',\n        role: 'dialog',\n        '[class]': 'config.nzWrapClassName ? \"ant-modal-wrap \" + config.nzWrapClassName : \"ant-modal-wrap\"',\n        '[class.ant-modal-wrap-rtl]': \"dir === 'rtl'\",\n        '[class.ant-modal-centered]': 'config.nzCentered',\n        '[style.zIndex]': 'config.nzZIndex',\n        '[@.disabled]': 'config.nzNoAnimation',\n        '[@modalContainer]': 'state',\n        '(@modalContainer.start)': 'onAnimationStart($event)',\n        '(@modalContainer.done)': 'onAnimationDone($event)',\n        '(click)': 'onContainerClick($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.FocusTrapFactory\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i2.OverlayRef\n    }, {\n      type: i3.NzConfigService\n    }, {\n      type: ModalOptions\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: true\n      }]\n    }],\n    modalElementRef: [{\n      type: ViewChild,\n      args: ['modalElement', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nvar NzModalRef = /*#__PURE__*/function () {\n  function NzModalRef(overlayRef, config, containerInstance) {\n    var _this8 = this;\n\n    _classCallCheck(this, NzModalRef);\n\n    this.overlayRef = overlayRef;\n    this.config = config;\n    this.containerInstance = containerInstance;\n    this.componentInstance = null;\n    this.state = 0\n    /* OPEN */\n    ;\n    this.afterClose = new Subject();\n    this.afterOpen = new Subject();\n    this.destroy$ = new Subject();\n    containerInstance.animationStateChanged.pipe(filter(function (event) {\n      return event.phaseName === 'done' && event.toState === 'enter';\n    }), take(1)).subscribe(function () {\n      _this8.afterOpen.next();\n\n      _this8.afterOpen.complete();\n\n      if (config.nzAfterOpen instanceof EventEmitter) {\n        config.nzAfterOpen.emit();\n      }\n    });\n    containerInstance.animationStateChanged.pipe(filter(function (event) {\n      return event.phaseName === 'done' && event.toState === 'exit';\n    }), take(1)).subscribe(function () {\n      clearTimeout(_this8.closeTimeout);\n\n      _this8._finishDialogClose();\n    });\n    containerInstance.containerClick.pipe(take(1), takeUntil(this.destroy$)).subscribe(function () {\n      var cancelable = !_this8.config.nzCancelLoading && !_this8.config.nzOkLoading;\n\n      if (cancelable) {\n        _this8.trigger(\"cancel\"\n        /* CANCEL */\n        );\n      }\n    });\n    overlayRef.keydownEvents().pipe(filter(function (event) {\n      return _this8.config.nzKeyboard && !_this8.config.nzCancelLoading && !_this8.config.nzOkLoading && event.keyCode === ESCAPE && !hasModifierKey(event);\n    })).subscribe(function (event) {\n      event.preventDefault();\n\n      _this8.trigger(\"cancel\"\n      /* CANCEL */\n      );\n    });\n    containerInstance.cancelTriggered.pipe(takeUntil(this.destroy$)).subscribe(function () {\n      return _this8.trigger(\"cancel\"\n      /* CANCEL */\n      );\n    });\n    containerInstance.okTriggered.pipe(takeUntil(this.destroy$)).subscribe(function () {\n      return _this8.trigger(\"ok\"\n      /* OK */\n      );\n    });\n    overlayRef.detachments().subscribe(function () {\n      _this8.afterClose.next(_this8.result);\n\n      _this8.afterClose.complete();\n\n      if (config.nzAfterClose instanceof EventEmitter) {\n        config.nzAfterClose.emit(_this8.result);\n      }\n\n      _this8.componentInstance = null;\n\n      _this8.overlayRef.dispose();\n    });\n  }\n\n  _createClass(NzModalRef, [{\n    key: \"getContentComponent\",\n    value: function getContentComponent() {\n      return this.componentInstance;\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement() {\n      return this.containerInstance.getNativeElement();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(result) {\n      this.close(result);\n    }\n  }, {\n    key: \"triggerOk\",\n    value: function triggerOk() {\n      return this.trigger(\"ok\"\n      /* OK */\n      );\n    }\n  }, {\n    key: \"triggerCancel\",\n    value: function triggerCancel() {\n      return this.trigger(\"cancel\"\n      /* CANCEL */\n      );\n    }\n  }, {\n    key: \"close\",\n    value: function close(result) {\n      var _this9 = this;\n\n      if (this.state !== 0\n      /* OPEN */\n      ) {\n        return;\n      }\n\n      this.result = result;\n      this.containerInstance.animationStateChanged.pipe(filter(function (event) {\n        return event.phaseName === 'start';\n      }), take(1)).subscribe(function (event) {\n        _this9.overlayRef.detachBackdrop();\n\n        _this9.closeTimeout = setTimeout(function () {\n          _this9._finishDialogClose();\n        }, event.totalTime + 100);\n      });\n      this.containerInstance.startExitAnimation();\n      this.state = 1\n      /* CLOSING */\n      ;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      Object.assign(this.config, config);\n      this.containerInstance.bindBackdropStyle();\n      this.containerInstance.cdr.markForCheck();\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.state;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n  }, {\n    key: \"getBackdropElement\",\n    value: function getBackdropElement() {\n      return this.overlayRef.backdropElement;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(action) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var trigger, loadingKey, loading, result, doClose;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                trigger = {\n                  ok: this.config.nzOnOk,\n                  cancel: this.config.nzOnCancel\n                }[action];\n                loadingKey = {\n                  ok: 'nzOkLoading',\n                  cancel: 'nzCancelLoading'\n                }[action];\n                loading = this.config[loadingKey];\n\n                if (!loading) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 5:\n                if (!(trigger instanceof EventEmitter)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                trigger.emit(this.getContentComponent());\n                _context.next = 25;\n                break;\n\n              case 9:\n                if (!(typeof trigger === 'function')) {\n                  _context.next = 25;\n                  break;\n                }\n\n                result = trigger(this.getContentComponent());\n\n                if (!isPromise(result)) {\n                  _context.next = 24;\n                  break;\n                }\n\n                this.config[loadingKey] = true;\n                doClose = false;\n                _context.prev = 14;\n                _context.next = 17;\n                return result;\n\n              case 17:\n                doClose = _context.sent;\n\n              case 18:\n                _context.prev = 18;\n                this.config[loadingKey] = false;\n                this.closeWhitResult(doClose);\n                return _context.finish(18);\n\n              case 22:\n                _context.next = 25;\n                break;\n\n              case 24:\n                this.closeWhitResult(result);\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[14,, 18, 22]]);\n      }));\n    }\n  }, {\n    key: \"closeWhitResult\",\n    value: function closeWhitResult(result) {\n      if (result !== false) {\n        this.close(result);\n      }\n    }\n  }, {\n    key: \"_finishDialogClose\",\n    value: function _finishDialogClose() {\n      this.state = 2\n      /* CLOSED */\n      ;\n      this.overlayRef.dispose();\n      this.destroy$.next();\n    }\n  }]);\n\n  return NzModalRef;\n}();\n\nvar NzModalService = /*#__PURE__*/function () {\n  function NzModalService(overlay, injector, nzConfigService, parentModal, directionality) {\n    var _this10 = this;\n\n    _classCallCheck(this, NzModalService);\n\n    this.overlay = overlay;\n    this.injector = injector;\n    this.nzConfigService = nzConfigService;\n    this.parentModal = parentModal;\n    this.directionality = directionality;\n    this.openModalsAtThisLevel = [];\n    this.afterAllClosedAtThisLevel = new Subject();\n    this.afterAllClose = defer(function () {\n      return _this10.openModals.length ? _this10._afterAllClosed : _this10._afterAllClosed.pipe(startWith(undefined));\n    });\n  }\n\n  _createClass(NzModalService, [{\n    key: \"openModals\",\n    get: function get() {\n      return this.parentModal ? this.parentModal.openModals : this.openModalsAtThisLevel;\n    }\n  }, {\n    key: \"_afterAllClosed\",\n    get: function get() {\n      var parent = this.parentModal;\n      return parent ? parent._afterAllClosed : this.afterAllClosedAtThisLevel;\n    }\n  }, {\n    key: \"create\",\n    value: function create(config) {\n      return this.open(config.nzContent, config);\n    }\n  }, {\n    key: \"closeAll\",\n    value: function closeAll() {\n      this.closeModals(this.openModals);\n    }\n  }, {\n    key: \"confirm\",\n    value: function confirm() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var confirmType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'confirm';\n\n      if ('nzFooter' in options) {\n        warn(\"The Confirm-Modal doesn't support \\\"nzFooter\\\", this property will be ignored.\");\n      }\n\n      if (!('nzWidth' in options)) {\n        options.nzWidth = 416;\n      }\n\n      if (!('nzMaskClosable' in options)) {\n        options.nzMaskClosable = false;\n      }\n\n      options.nzModalType = 'confirm';\n      options.nzClassName = \"ant-modal-confirm ant-modal-confirm-\".concat(confirmType, \" \").concat(options.nzClassName || '');\n      return this.create(options);\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.confirmFactory(options, 'info');\n    }\n  }, {\n    key: \"success\",\n    value: function success() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.confirmFactory(options, 'success');\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.confirmFactory(options, 'error');\n    }\n  }, {\n    key: \"warning\",\n    value: function warning() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.confirmFactory(options, 'warning');\n    }\n  }, {\n    key: \"open\",\n    value: function open(componentOrTemplateRef, config) {\n      var _this11 = this;\n\n      var configMerged = applyConfigDefaults(config || {}, new ModalOptions());\n      var overlayRef = this.createOverlay(configMerged);\n      var modalContainer = this.attachModalContainer(overlayRef, configMerged);\n      var modalRef = this.attachModalContent(componentOrTemplateRef, modalContainer, overlayRef, configMerged);\n      modalContainer.modalRef = modalRef;\n      this.openModals.push(modalRef);\n      modalRef.afterClose.subscribe(function () {\n        return _this11.removeOpenModal(modalRef);\n      });\n      return modalRef;\n    }\n  }, {\n    key: \"removeOpenModal\",\n    value: function removeOpenModal(modalRef) {\n      var index = this.openModals.indexOf(modalRef);\n\n      if (index > -1) {\n        this.openModals.splice(index, 1);\n\n        if (!this.openModals.length) {\n          this._afterAllClosed.next();\n        }\n      }\n    }\n  }, {\n    key: \"closeModals\",\n    value: function closeModals(dialogs) {\n      var i = dialogs.length;\n\n      while (i--) {\n        dialogs[i].close();\n\n        if (!this.openModals.length) {\n          this._afterAllClosed.next();\n        }\n      }\n    }\n  }, {\n    key: \"createOverlay\",\n    value: function createOverlay(config) {\n      var globalConfig = this.nzConfigService.getConfigForComponent(NZ_CONFIG_MODULE_NAME) || {};\n      var overlayConfig = new OverlayConfig({\n        hasBackdrop: true,\n        scrollStrategy: this.overlay.scrollStrategies.block(),\n        positionStrategy: this.overlay.position().global(),\n        disposeOnNavigation: getValueWithConfig(config.nzCloseOnNavigation, globalConfig.nzCloseOnNavigation, true),\n        direction: getValueWithConfig(config.nzDirection, globalConfig.nzDirection, this.directionality.value)\n      });\n\n      if (getValueWithConfig(config.nzMask, globalConfig.nzMask, true)) {\n        overlayConfig.backdropClass = MODAL_MASK_CLASS_NAME;\n      }\n\n      return this.overlay.create(overlayConfig);\n    }\n  }, {\n    key: \"attachModalContainer\",\n    value: function attachModalContainer(overlayRef, config) {\n      var userInjector = config && config.nzViewContainerRef && config.nzViewContainerRef.injector;\n      var injector = Injector.create({\n        parent: userInjector || this.injector,\n        providers: [{\n          provide: OverlayRef,\n          useValue: overlayRef\n        }, {\n          provide: ModalOptions,\n          useValue: config\n        }]\n      });\n      var ContainerComponent = config.nzModalType === 'confirm' ? // If the mode is `confirm`, use `NzModalConfirmContainerComponent`\n      NzModalConfirmContainerComponent : // If the mode is not `confirm`, use `NzModalContainerComponent`\n      NzModalContainerComponent;\n      var containerPortal = new ComponentPortal(ContainerComponent, config.nzViewContainerRef, injector);\n      var containerRef = overlayRef.attach(containerPortal);\n      return containerRef.instance;\n    }\n  }, {\n    key: \"attachModalContent\",\n    value: function attachModalContent(componentOrTemplateRef, modalContainer, overlayRef, config) {\n      var modalRef = new NzModalRef(overlayRef, config, modalContainer);\n\n      if (componentOrTemplateRef instanceof TemplateRef) {\n        modalContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n          $implicit: config.nzComponentParams,\n          modalRef: modalRef\n        }));\n      } else if (isNotNil(componentOrTemplateRef) && typeof componentOrTemplateRef !== 'string') {\n        var injector = this.createInjector(modalRef, config);\n        var contentRef = modalContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.nzViewContainerRef, injector));\n        setContentInstanceParams(contentRef.instance, config.nzComponentParams);\n        modalRef.componentInstance = contentRef.instance;\n      } else {\n        modalContainer.attachStringContent();\n      }\n\n      return modalRef;\n    }\n  }, {\n    key: \"createInjector\",\n    value: function createInjector(modalRef, config) {\n      var userInjector = config && config.nzViewContainerRef && config.nzViewContainerRef.injector;\n      return Injector.create({\n        parent: userInjector || this.injector,\n        providers: [{\n          provide: NzModalRef,\n          useValue: modalRef\n        }]\n      });\n    }\n  }, {\n    key: \"confirmFactory\",\n    value: function confirmFactory() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var confirmType = arguments.length > 1 ? arguments[1] : undefined;\n      var iconMap = {\n        info: 'info-circle',\n        success: 'check-circle',\n        error: 'close-circle',\n        warning: 'exclamation-circle'\n      };\n\n      if (!('nzIconType' in options)) {\n        options.nzIconType = iconMap[confirmType];\n      }\n\n      if (!('nzCancelText' in options)) {\n        // Remove the Cancel button if the user not specify a Cancel button\n        options.nzCancelText = null;\n      }\n\n      return this.confirm(options, confirmType);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.closeModals(this.openModalsAtThisLevel);\n      this.afterAllClosedAtThisLevel.complete();\n    }\n  }]);\n\n  return NzModalService;\n}();\n\nNzModalService.ɵfac = function NzModalService_Factory(t) {\n  return new (t || NzModalService)(i0.ɵɵinject(i2.Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i3.NzConfigService), i0.ɵɵinject(NzModalService, 12), i0.ɵɵinject(i3$2.Directionality, 8));\n};\n\nNzModalService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzModalService,\n  factory: NzModalService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzModalService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i2.Overlay\n    }, {\n      type: i0.Injector\n    }, {\n      type: i3.NzConfigService\n    }, {\n      type: NzModalService,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: i3$2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzModalContentDirective = /*#__PURE__*/_createClass(function NzModalContentDirective(templateRef) {\n  _classCallCheck(this, NzModalContentDirective);\n\n  this.templateRef = templateRef;\n});\n\nNzModalContentDirective.ɵfac = function NzModalContentDirective_Factory(t) {\n  return new (t || NzModalContentDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNzModalContentDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzModalContentDirective,\n  selectors: [[\"\", \"nzModalContent\", \"\"]],\n  exportAs: [\"nzModalContent\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzModalContentDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nzModalContent]',\n      exportAs: 'nzModalContent'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzModalFooterDirective = /*#__PURE__*/_createClass(function NzModalFooterDirective(nzModalRef, templateRef) {\n  _classCallCheck(this, NzModalFooterDirective);\n\n  this.nzModalRef = nzModalRef;\n  this.templateRef = templateRef;\n\n  if (this.nzModalRef) {\n    this.nzModalRef.updateConfig({\n      nzFooter: this.templateRef\n    });\n  }\n});\n\nNzModalFooterDirective.ɵfac = function NzModalFooterDirective_Factory(t) {\n  return new (t || NzModalFooterDirective)(i0.ɵɵdirectiveInject(NzModalRef, 8), i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNzModalFooterDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzModalFooterDirective,\n  selectors: [[\"\", \"nzModalFooter\", \"\"]],\n  exportAs: [\"nzModalFooter\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzModalFooterDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nzModalFooter]',\n      exportAs: 'nzModalFooter'\n    }]\n  }], function () {\n    return [{\n      type: NzModalRef,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzModalTitleDirective = /*#__PURE__*/_createClass(function NzModalTitleDirective(nzModalRef, templateRef) {\n  _classCallCheck(this, NzModalTitleDirective);\n\n  this.nzModalRef = nzModalRef;\n  this.templateRef = templateRef;\n\n  if (this.nzModalRef) {\n    this.nzModalRef.updateConfig({\n      nzTitle: this.templateRef\n    });\n  }\n});\n\nNzModalTitleDirective.ɵfac = function NzModalTitleDirective_Factory(t) {\n  return new (t || NzModalTitleDirective)(i0.ɵɵdirectiveInject(NzModalRef, 8), i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNzModalTitleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzModalTitleDirective,\n  selectors: [[\"\", \"nzModalTitle\", \"\"]],\n  exportAs: [\"nzModalTitle\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzModalTitleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nzModalTitle]',\n      exportAs: 'nzModalTitle'\n    }]\n  }], function () {\n    return [{\n      type: NzModalRef,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\nvar NzModalComponent = /*#__PURE__*/function () {\n  function NzModalComponent(cdr, modal, viewContainerRef) {\n    _classCallCheck(this, NzModalComponent);\n\n    this.cdr = cdr;\n    this.modal = modal;\n    this.viewContainerRef = viewContainerRef;\n    this.nzVisible = false;\n    this.nzClosable = true;\n    this.nzOkLoading = false;\n    this.nzOkDisabled = false;\n    this.nzCancelDisabled = false;\n    this.nzCancelLoading = false;\n    this.nzKeyboard = true;\n    this.nzNoAnimation = false;\n    this.nzCentered = false;\n    this.nzZIndex = 1000;\n    this.nzWidth = 520;\n    this.nzCloseIcon = 'close';\n    this.nzOkType = 'primary';\n    this.nzOkDanger = false;\n    this.nzIconType = 'question-circle'; // Confirm Modal ONLY\n\n    this.nzModalType = 'default';\n    this.nzAutofocus = 'auto'; // TODO(@hsuanxyz) Input will not be supported\n\n    this.nzOnOk = new EventEmitter(); // TODO(@hsuanxyz) Input will not be supported\n\n    this.nzOnCancel = new EventEmitter();\n    this.nzAfterOpen = new EventEmitter();\n    this.nzAfterClose = new EventEmitter();\n    this.nzVisibleChange = new EventEmitter();\n    this.modalRef = null;\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzModalComponent, [{\n    key: \"modalTitle\",\n    set: function set(value) {\n      if (value) {\n        this.setTitleWithTemplate(value);\n      }\n    }\n  }, {\n    key: \"modalFooter\",\n    set: function set(value) {\n      if (value) {\n        this.setFooterWithTemplate(value);\n      }\n    }\n  }, {\n    key: \"afterOpen\",\n    get: function get() {\n      // Observable alias for nzAfterOpen\n      return this.nzAfterOpen.asObservable();\n    }\n  }, {\n    key: \"afterClose\",\n    get: function get() {\n      // Observable alias for nzAfterClose\n      return this.nzAfterClose.asObservable();\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this12 = this;\n\n      if (!this.nzVisible) {\n        this.nzVisible = true;\n        this.nzVisibleChange.emit(true);\n      }\n\n      if (!this.modalRef) {\n        var config = this.getConfig();\n        this.modalRef = this.modal.create(config); // When the modal is implicitly closed (e.g. closeAll) the nzVisible needs to be set to the correct value and emit.\n\n        this.modalRef.afterClose.asObservable().pipe(takeUntil(this.destroy$)).subscribe(function () {\n          _this12.close();\n        });\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close(result) {\n      if (this.nzVisible) {\n        this.nzVisible = false;\n        this.nzVisibleChange.emit(false);\n      }\n\n      if (this.modalRef) {\n        this.modalRef.close(result);\n        this.modalRef = null;\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(result) {\n      this.close(result);\n    }\n  }, {\n    key: \"triggerOk\",\n    value: function triggerOk() {\n      var _a;\n\n      (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.triggerOk();\n    }\n  }, {\n    key: \"triggerCancel\",\n    value: function triggerCancel() {\n      var _a;\n\n      (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.triggerCancel();\n    }\n  }, {\n    key: \"getContentComponent\",\n    value: function getContentComponent() {\n      var _a;\n\n      return (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.getContentComponent();\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement() {\n      var _a;\n\n      return (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.getElement();\n    }\n  }, {\n    key: \"getModalRef\",\n    value: function getModalRef() {\n      return this.modalRef;\n    }\n  }, {\n    key: \"setTitleWithTemplate\",\n    value: function setTitleWithTemplate(templateRef) {\n      var _this13 = this;\n\n      this.nzTitle = templateRef;\n\n      if (this.modalRef) {\n        // If modalRef already created, set the title in next tick\n        Promise.resolve().then(function () {\n          _this13.modalRef.updateConfig({\n            nzTitle: _this13.nzTitle\n          });\n        });\n      }\n    }\n  }, {\n    key: \"setFooterWithTemplate\",\n    value: function setFooterWithTemplate(templateRef) {\n      var _this14 = this;\n\n      this.nzFooter = templateRef;\n\n      if (this.modalRef) {\n        // If modalRef already created, set the footer in next tick\n        Promise.resolve().then(function () {\n          _this14.modalRef.updateConfig({\n            nzFooter: _this14.nzFooter\n          });\n        });\n      }\n\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var componentConfig = getConfigFromComponent(this);\n      componentConfig.nzViewContainerRef = this.viewContainerRef;\n      componentConfig.nzContent = this.nzContent || this.contentFromContentChild;\n      return componentConfig;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzVisible = changes.nzVisible,\n          otherChanges = __rest(changes, [\"nzVisible\"]);\n\n      if (Object.keys(otherChanges).length && this.modalRef) {\n        this.modalRef.updateConfig(getConfigFromComponent(this));\n      }\n\n      if (nzVisible) {\n        if (this.nzVisible) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var _a;\n\n      (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a._finishDialogClose();\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzModalComponent;\n}();\n\nNzModalComponent.ɵfac = function NzModalComponent_Factory(t) {\n  return new (t || NzModalComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NzModalService), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\n\nNzModalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzModalComponent,\n  selectors: [[\"nz-modal\"]],\n  contentQueries: function NzModalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzModalTitleDirective, 7, TemplateRef);\n      i0.ɵɵcontentQuery(dirIndex, NzModalContentDirective, 7, TemplateRef);\n      i0.ɵɵcontentQuery(dirIndex, NzModalFooterDirective, 7, TemplateRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalTitle = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentFromContentChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalFooter = _t.first);\n    }\n  },\n  inputs: {\n    nzMask: \"nzMask\",\n    nzMaskClosable: \"nzMaskClosable\",\n    nzCloseOnNavigation: \"nzCloseOnNavigation\",\n    nzVisible: \"nzVisible\",\n    nzClosable: \"nzClosable\",\n    nzOkLoading: \"nzOkLoading\",\n    nzOkDisabled: \"nzOkDisabled\",\n    nzCancelDisabled: \"nzCancelDisabled\",\n    nzCancelLoading: \"nzCancelLoading\",\n    nzKeyboard: \"nzKeyboard\",\n    nzNoAnimation: \"nzNoAnimation\",\n    nzCentered: \"nzCentered\",\n    nzContent: \"nzContent\",\n    nzComponentParams: \"nzComponentParams\",\n    nzFooter: \"nzFooter\",\n    nzZIndex: \"nzZIndex\",\n    nzWidth: \"nzWidth\",\n    nzWrapClassName: \"nzWrapClassName\",\n    nzClassName: \"nzClassName\",\n    nzStyle: \"nzStyle\",\n    nzTitle: \"nzTitle\",\n    nzCloseIcon: \"nzCloseIcon\",\n    nzMaskStyle: \"nzMaskStyle\",\n    nzBodyStyle: \"nzBodyStyle\",\n    nzOkText: \"nzOkText\",\n    nzCancelText: \"nzCancelText\",\n    nzOkType: \"nzOkType\",\n    nzOkDanger: \"nzOkDanger\",\n    nzIconType: \"nzIconType\",\n    nzModalType: \"nzModalType\",\n    nzAutofocus: \"nzAutofocus\",\n    nzOnOk: \"nzOnOk\",\n    nzOnCancel: \"nzOnCancel\"\n  },\n  outputs: {\n    nzOnOk: \"nzOnOk\",\n    nzOnCancel: \"nzOnCancel\",\n    nzAfterOpen: \"nzAfterOpen\",\n    nzAfterClose: \"nzAfterClose\",\n    nzVisibleChange: \"nzVisibleChange\"\n  },\n  exportAs: [\"nzModal\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function NzModalComponent_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzMask\", void 0);\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzMaskClosable\", void 0);\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzCloseOnNavigation\", void 0);\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzVisible\", void 0);\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzClosable\", void 0);\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzOkLoading\", void 0);\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzOkDisabled\", void 0);\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzCancelDisabled\", void 0);\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzCancelLoading\", void 0);\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzKeyboard\", void 0);\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzNoAnimation\", void 0);\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzCentered\", void 0);\n\n__decorate([InputBoolean()], NzModalComponent.prototype, \"nzOkDanger\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzModalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-modal',\n      exportAs: 'nzModal',\n      template: \"\",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NzModalService\n    }, {\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    nzMask: [{\n      type: Input\n    }],\n    nzMaskClosable: [{\n      type: Input\n    }],\n    nzCloseOnNavigation: [{\n      type: Input\n    }],\n    nzVisible: [{\n      type: Input\n    }],\n    nzClosable: [{\n      type: Input\n    }],\n    nzOkLoading: [{\n      type: Input\n    }],\n    nzOkDisabled: [{\n      type: Input\n    }],\n    nzCancelDisabled: [{\n      type: Input\n    }],\n    nzCancelLoading: [{\n      type: Input\n    }],\n    nzKeyboard: [{\n      type: Input\n    }],\n    nzNoAnimation: [{\n      type: Input\n    }],\n    nzCentered: [{\n      type: Input\n    }],\n    nzContent: [{\n      type: Input\n    }],\n    nzComponentParams: [{\n      type: Input\n    }],\n    nzFooter: [{\n      type: Input\n    }],\n    nzZIndex: [{\n      type: Input\n    }],\n    nzWidth: [{\n      type: Input\n    }],\n    nzWrapClassName: [{\n      type: Input\n    }],\n    nzClassName: [{\n      type: Input\n    }],\n    nzStyle: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzCloseIcon: [{\n      type: Input\n    }],\n    nzMaskStyle: [{\n      type: Input\n    }],\n    nzBodyStyle: [{\n      type: Input\n    }],\n    nzOkText: [{\n      type: Input\n    }],\n    nzCancelText: [{\n      type: Input\n    }],\n    nzOkType: [{\n      type: Input\n    }],\n    nzOkDanger: [{\n      type: Input\n    }],\n    nzIconType: [{\n      type: Input\n    }],\n    nzModalType: [{\n      type: Input\n    }],\n    nzAutofocus: [{\n      type: Input\n    }],\n    nzOnOk: [{\n      type: Input\n    }, {\n      type: Output\n    }],\n    nzOnCancel: [{\n      type: Input\n    }, {\n      type: Output\n    }],\n    nzAfterOpen: [{\n      type: Output\n    }],\n    nzAfterClose: [{\n      type: Output\n    }],\n    nzVisibleChange: [{\n      type: Output\n    }],\n    modalTitle: [{\n      type: ContentChild,\n      args: [NzModalTitleDirective, {\n        static: true,\n        read: TemplateRef\n      }]\n    }],\n    contentFromContentChild: [{\n      type: ContentChild,\n      args: [NzModalContentDirective, {\n        static: true,\n        read: TemplateRef\n      }]\n    }],\n    modalFooter: [{\n      type: ContentChild,\n      args: [NzModalFooterDirective, {\n        static: true,\n        read: TemplateRef\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzModalModule = /*#__PURE__*/_createClass(function NzModalModule() {\n  _classCallCheck(this, NzModalModule);\n});\n\nNzModalModule.ɵfac = function NzModalModule_Factory(t) {\n  return new (t || NzModalModule)();\n};\n\nNzModalModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzModalModule,\n  declarations: [NzModalComponent, NzModalFooterDirective, NzModalContentDirective, NzModalCloseComponent, NzModalFooterComponent, NzModalTitleComponent, NzModalTitleDirective, NzModalContainerComponent, NzModalConfirmContainerComponent, NzModalComponent],\n  imports: [CommonModule, BidiModule, OverlayModule, NzOutletModule, PortalModule, NzI18nModule, NzButtonModule, NzIconModule, NzPipesModule, NzNoAnimationModule, NzPipesModule],\n  exports: [NzModalComponent, NzModalFooterDirective, NzModalContentDirective, NzModalTitleDirective]\n});\nNzModalModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [NzModalService],\n  imports: [[CommonModule, BidiModule, OverlayModule, NzOutletModule, PortalModule, NzI18nModule, NzButtonModule, NzIconModule, NzPipesModule, NzNoAnimationModule, NzPipesModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzModalModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, BidiModule, OverlayModule, NzOutletModule, PortalModule, NzI18nModule, NzButtonModule, NzIconModule, NzPipesModule, NzNoAnimationModule, NzPipesModule],\n      exports: [NzModalComponent, NzModalFooterDirective, NzModalContentDirective, NzModalTitleDirective],\n      providers: [NzModalService],\n      entryComponents: [NzModalContainerComponent, NzModalConfirmContainerComponent],\n      declarations: [NzModalComponent, NzModalFooterDirective, NzModalContentDirective, NzModalCloseComponent, NzModalFooterComponent, NzModalTitleComponent, NzModalTitleDirective, NzModalContainerComponent, NzModalConfirmContainerComponent, NzModalComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzModalLegacyAPI = /*#__PURE__*/_createClass(function NzModalLegacyAPI() {\n  _classCallCheck(this, NzModalLegacyAPI);\n});\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BaseModalContainerComponent, FADE_CLASS_NAME_MAP, MODAL_MASK_CLASS_NAME, ModalOptions, NZ_CONFIG_MODULE_NAME, NzModalCloseComponent, NzModalComponent, NzModalConfirmContainerComponent, NzModalContainerComponent, NzModalContentDirective, NzModalFooterComponent, NzModalFooterDirective, NzModalLegacyAPI, NzModalModule, NzModalRef, NzModalService, NzModalTitleComponent, NzModalTitleDirective, ZOOM_CLASS_NAME_MAP, applyConfigDefaults, getConfigFromComponent, getValueWithConfig, nzModalAnimations, setContentInstanceParams, throwNzModalContentAlreadyAttachedError }; //# sourceMappingURL=ng-zorro-antd-modal.mjs.map","map":null,"metadata":{},"sourceType":"module"}