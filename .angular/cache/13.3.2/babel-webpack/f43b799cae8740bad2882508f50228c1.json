{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Optional, Host, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { zoomBadgeMotion } from 'ng-zorro-antd/core/animation';\nimport * as i1$1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i3 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { ObserversModule } from '@angular/cdk/observers';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nfunction NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var p_r8 = ctx.$implicit;\n    var i_r5 = i0.ɵɵnextContext(2).index;\n    var ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"current\", p_r8 === ctx_r7.countArray[i_r5]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", p_r8, \" \");\n  }\n}\n\nfunction NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_p_1_Template, 2, 3, \"p\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.countSingleArray);\n  }\n}\n\nfunction NzBadgeSupComponent_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var i_r5 = ctx.index;\n    var ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"transform\", \"translateY(\" + -ctx_r3.countArray[i_r5] * 100 + \"%)\");\n    i0.ɵɵproperty(\"nzNoAnimation\", ctx_r3.noAnimation);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.nzDot && ctx_r3.countArray[i_r5] !== undefined);\n  }\n}\n\nfunction NzBadgeSupComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBadgeSupComponent_ng_container_0_span_1_Template, 2, 4, \"span\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.maxNumberArray);\n  }\n}\n\nfunction NzBadgeSupComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.nzOverflowCount, \"+\");\n  }\n}\n\nfunction NzBadgeComponent_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.nzText);\n  }\n}\n\nfunction NzBadgeComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 2);\n    i0.ɵɵelementStart(2, \"span\", 3);\n    i0.ɵɵtemplate(3, NzBadgeComponent_ng_container_0_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"ant-badge-status-dot ant-badge-status-\", ctx_r0.nzStatus || ctx_r0.presetColor, \"\");\n    i0.ɵɵstyleProp(\"background\", !ctx_r0.presetColor && ctx_r0.nzColor);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.nzStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzText);\n  }\n}\n\nfunction NzBadgeComponent_ng_container_2_nz_badge_sup_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-badge-sup\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzOffset\", ctx_r3.nzOffset)(\"nzTitle\", ctx_r3.nzTitle)(\"nzStyle\", ctx_r3.nzStyle)(\"nzDot\", ctx_r3.nzDot)(\"nzOverflowCount\", ctx_r3.nzOverflowCount)(\"disableAnimation\", !!(ctx_r3.nzStandalone || ctx_r3.nzStatus || ctx_r3.nzColor || (ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation)))(\"nzCount\", ctx_r3.nzCount)(\"noAnimation\", !!(ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation));\n  }\n}\n\nfunction NzBadgeComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBadgeComponent_ng_container_2_nz_badge_sup_1_Template, 1, 8, \"nz-badge-sup\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showSup);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nfunction NzRibbonComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.nzText);\n  }\n}\n\nvar badgePresetColors = ['pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime'];\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar NzBadgeSupComponent = /*#__PURE__*/function () {\n  function NzBadgeSupComponent() {\n    _classCallCheck(this, NzBadgeSupComponent);\n\n    this.nzStyle = null;\n    this.nzDot = false;\n    this.nzOverflowCount = 99;\n    this.disableAnimation = false;\n    this.noAnimation = false;\n    this.maxNumberArray = [];\n    this.countArray = [];\n    this.count = 0;\n    this.countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  }\n\n  _createClass(NzBadgeSupComponent, [{\n    key: \"generateMaxNumberArray\",\n    value: function generateMaxNumberArray() {\n      this.maxNumberArray = this.nzOverflowCount.toString().split('');\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.generateMaxNumberArray();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzOverflowCount = changes.nzOverflowCount,\n          nzCount = changes.nzCount;\n\n      if (nzCount && typeof nzCount.currentValue === 'number') {\n        this.count = Math.max(0, nzCount.currentValue);\n        this.countArray = this.count.toString().split('').map(function (item) {\n          return +item;\n        });\n      }\n\n      if (nzOverflowCount) {\n        this.generateMaxNumberArray();\n      }\n    }\n  }]);\n\n  return NzBadgeSupComponent;\n}();\n\nNzBadgeSupComponent.ɵfac = function NzBadgeSupComponent_Factory(t) {\n  return new (t || NzBadgeSupComponent)();\n};\n\nNzBadgeSupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBadgeSupComponent,\n  selectors: [[\"nz-badge-sup\"]],\n  hostAttrs: [1, \"ant-scroll-number\"],\n  hostVars: 15,\n  hostBindings: function NzBadgeSupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"title\", ctx.nzTitle === null ? \"\" : ctx.nzTitle || ctx.nzCount);\n      i0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.disableAnimation)(\"@zoomBadgeMotion\", undefined);\n      i0.ɵɵstyleMap(ctx.nzStyle);\n      i0.ɵɵstyleProp(\"right\", ctx.nzOffset && ctx.nzOffset[0] ? -ctx.nzOffset[0] : null, \"px\")(\"margin-top\", ctx.nzOffset && ctx.nzOffset[1] ? ctx.nzOffset[1] : null, \"px\");\n      i0.ɵɵclassProp(\"ant-badge-count\", !ctx.nzDot)(\"ant-badge-dot\", ctx.nzDot)(\"ant-badge-multiple-words\", ctx.countArray.length >= 2);\n    }\n  },\n  inputs: {\n    nzOffset: \"nzOffset\",\n    nzTitle: \"nzTitle\",\n    nzStyle: \"nzStyle\",\n    nzDot: \"nzDot\",\n    nzOverflowCount: \"nzOverflowCount\",\n    disableAnimation: \"disableAnimation\",\n    nzCount: \"nzCount\",\n    noAnimation: \"noAnimation\"\n  },\n  exportAs: [\"nzBadgeSup\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"overflowTemplate\", \"\"], [\"class\", \"ant-scroll-number-only\", 3, \"nzNoAnimation\", \"transform\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-scroll-number-only\", 3, \"nzNoAnimation\"], [4, \"ngIf\"], [\"class\", \"ant-scroll-number-only-unit\", 3, \"current\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-scroll-number-only-unit\"]],\n  template: function NzBadgeSupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzBadgeSupComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NzBadgeSupComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.count <= ctx.nzOverflowCount)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i1.NgIf, i1.NgForOf, i3.NzNoAnimationDirective],\n  encapsulation: 2,\n  data: {\n    animation: [zoomBadgeMotion]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBadgeSupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-badge-sup',\n      exportAs: 'nzBadgeSup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [zoomBadgeMotion],\n      template: \"\\n    <ng-container *ngIf=\\\"count <= nzOverflowCount; else overflowTemplate\\\">\\n      <span\\n        [nzNoAnimation]=\\\"noAnimation\\\"\\n        *ngFor=\\\"let n of maxNumberArray; let i = index\\\"\\n        class=\\\"ant-scroll-number-only\\\"\\n        [style.transform]=\\\"'translateY(' + -countArray[i] * 100 + '%)'\\\"\\n      >\\n        <ng-container *ngIf=\\\"!nzDot && countArray[i] !== undefined\\\">\\n          <p\\n            *ngFor=\\\"let p of countSingleArray\\\"\\n            class=\\\"ant-scroll-number-only-unit\\\"\\n            [class.current]=\\\"p === countArray[i]\\\"\\n          >\\n            {{ p }}\\n          </p>\\n        </ng-container>\\n      </span>\\n    </ng-container>\\n    <ng-template #overflowTemplate>{{ nzOverflowCount }}+</ng-template>\\n  \",\n      host: {\n        class: 'ant-scroll-number',\n        '[@.disabled]': \"disableAnimation\",\n        '[@zoomBadgeMotion]': '',\n        '[attr.title]': \"nzTitle === null ? '' : nzTitle || nzCount\",\n        '[style]': \"nzStyle\",\n        '[style.right.px]': \"nzOffset && nzOffset[0] ? -nzOffset[0] : null\",\n        '[style.margin-top.px]': \"nzOffset && nzOffset[1] ? nzOffset[1] : null\",\n        '[class.ant-badge-count]': \"!nzDot\",\n        '[class.ant-badge-dot]': \"nzDot\",\n        '[class.ant-badge-multiple-words]': \"countArray.length >= 2\"\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzOffset: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzStyle: [{\n      type: Input\n    }],\n    nzDot: [{\n      type: Input\n    }],\n    nzOverflowCount: [{\n      type: Input\n    }],\n    disableAnimation: [{\n      type: Input\n    }],\n    nzCount: [{\n      type: Input\n    }],\n    noAnimation: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NZ_CONFIG_MODULE_NAME = 'badge';\n\nvar NzBadgeComponent = /*#__PURE__*/function () {\n  function NzBadgeComponent(nzConfigService, renderer, cdr, elementRef, directionality, noAnimation) {\n    _classCallCheck(this, NzBadgeComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.elementRef = elementRef;\n    this.directionality = directionality;\n    this.noAnimation = noAnimation;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.showSup = false;\n    this.presetColor = null;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.nzShowZero = false;\n    this.nzShowDot = true;\n    this.nzStandalone = false;\n    this.nzDot = false;\n    this.nzOverflowCount = 99;\n    this.nzColor = undefined;\n    this.nzStyle = null;\n    this.nzText = null;\n  }\n\n  _createClass(NzBadgeComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      var _a;\n\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this.dir = direction;\n\n        _this.prepareBadgeForRtl();\n\n        _this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n      this.prepareBadgeForRtl();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzColor = changes.nzColor,\n          nzShowDot = changes.nzShowDot,\n          nzDot = changes.nzDot,\n          nzCount = changes.nzCount,\n          nzShowZero = changes.nzShowZero;\n\n      if (nzColor) {\n        this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n      }\n\n      if (nzShowDot || nzDot || nzCount || nzShowZero) {\n        this.showSup = this.nzShowDot && this.nzDot || this.nzCount > 0 || this.nzCount <= 0 && this.nzShowZero;\n      }\n    }\n  }, {\n    key: \"prepareBadgeForRtl\",\n    value: function prepareBadgeForRtl() {\n      if (this.isRtlLayout) {\n        this.renderer.addClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, 'ant-badge-rtl');\n      }\n    }\n  }, {\n    key: \"isRtlLayout\",\n    get: function get() {\n      return this.dir === 'rtl';\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzBadgeComponent;\n}();\n\nNzBadgeComponent.ɵfac = function NzBadgeComponent_Factory(t) {\n  return new (t || NzBadgeComponent)(i0.ɵɵdirectiveInject(i1$1.NzConfigService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i3.NzNoAnimationDirective, 9));\n};\n\nNzBadgeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBadgeComponent,\n  selectors: [[\"nz-badge\"]],\n  hostAttrs: [1, \"ant-badge\"],\n  hostVars: 4,\n  hostBindings: function NzBadgeComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-badge-status\", ctx.nzStatus)(\"ant-badge-not-a-wrapper\", !!(ctx.nzStandalone || ctx.nzStatus || ctx.nzColor));\n    }\n  },\n  inputs: {\n    nzShowZero: \"nzShowZero\",\n    nzShowDot: \"nzShowDot\",\n    nzStandalone: \"nzStandalone\",\n    nzDot: \"nzDot\",\n    nzOverflowCount: \"nzOverflowCount\",\n    nzColor: \"nzColor\",\n    nzStyle: \"nzStyle\",\n    nzText: \"nzText\",\n    nzTitle: \"nzTitle\",\n    nzStatus: \"nzStatus\",\n    nzCount: \"nzCount\",\n    nzOffset: \"nzOffset\"\n  },\n  exportAs: [\"nzBadge\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [3, \"ngStyle\"], [1, \"ant-badge-status-text\"], [3, \"nzOffset\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\", 4, \"ngIf\"], [3, \"nzOffset\", \"nzTitle\", \"nzStyle\", \"nzDot\", \"nzOverflowCount\", \"disableAnimation\", \"nzCount\", \"noAnimation\"]],\n  template: function NzBadgeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzBadgeComponent_ng_container_0_Template, 4, 7, \"ng-container\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵtemplate(2, NzBadgeComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.nzStatus || ctx.nzColor);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzCount);\n    }\n  },\n  directives: [NzBadgeSupComponent, i1.NgIf, i1.NgStyle, i6.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  data: {\n    animation: [zoomBadgeMotion]\n  },\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzShowZero\", void 0);\n\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzShowDot\", void 0);\n\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzStandalone\", void 0);\n\n__decorate([InputBoolean()], NzBadgeComponent.prototype, \"nzDot\", void 0);\n\n__decorate([WithConfig()], NzBadgeComponent.prototype, \"nzOverflowCount\", void 0);\n\n__decorate([WithConfig()], NzBadgeComponent.prototype, \"nzColor\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBadgeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-badge',\n      exportAs: 'nzBadge',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [zoomBadgeMotion],\n      template: \"\\n    <ng-container *ngIf=\\\"nzStatus || nzColor\\\">\\n      <span\\n        class=\\\"ant-badge-status-dot ant-badge-status-{{ nzStatus || presetColor }}\\\"\\n        [style.background]=\\\"!presetColor && nzColor\\\"\\n        [ngStyle]=\\\"nzStyle\\\"\\n      ></span>\\n      <span class=\\\"ant-badge-status-text\\\">\\n        <ng-container *nzStringTemplateOutlet=\\\"nzText\\\">{{ nzText }}</ng-container>\\n      </span>\\n    </ng-container>\\n    <ng-content></ng-content>\\n    <ng-container *nzStringTemplateOutlet=\\\"nzCount\\\">\\n      <nz-badge-sup\\n        *ngIf=\\\"showSup\\\"\\n        [nzOffset]=\\\"nzOffset\\\"\\n        [nzTitle]=\\\"nzTitle\\\"\\n        [nzStyle]=\\\"nzStyle\\\"\\n        [nzDot]=\\\"nzDot\\\"\\n        [nzOverflowCount]=\\\"nzOverflowCount\\\"\\n        [disableAnimation]=\\\"!!(nzStandalone || nzStatus || nzColor || noAnimation?.nzNoAnimation)\\\"\\n        [nzCount]=\\\"nzCount\\\"\\n        [noAnimation]=\\\"!!noAnimation?.nzNoAnimation\\\"\\n      ></nz-badge-sup>\\n    </ng-container>\\n  \",\n      host: {\n        class: 'ant-badge',\n        '[class.ant-badge-status]': 'nzStatus',\n        '[class.ant-badge-not-a-wrapper]': '!!(nzStandalone || nzStatus || nzColor)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1$1.NzConfigService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    nzShowZero: [{\n      type: Input\n    }],\n    nzShowDot: [{\n      type: Input\n    }],\n    nzStandalone: [{\n      type: Input\n    }],\n    nzDot: [{\n      type: Input\n    }],\n    nzOverflowCount: [{\n      type: Input\n    }],\n    nzColor: [{\n      type: Input\n    }],\n    nzStyle: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzStatus: [{\n      type: Input\n    }],\n    nzCount: [{\n      type: Input\n    }],\n    nzOffset: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzRibbonComponent = /*#__PURE__*/function () {\n  function NzRibbonComponent() {\n    _classCallCheck(this, NzRibbonComponent);\n\n    this.nzPlacement = 'end';\n    this.nzText = null;\n    this.presetColor = null;\n  }\n\n  _createClass(NzRibbonComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzColor = changes.nzColor;\n\n      if (nzColor) {\n        this.presetColor = this.nzColor && badgePresetColors.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\n      }\n    }\n  }]);\n\n  return NzRibbonComponent;\n}();\n\nNzRibbonComponent.ɵfac = function NzRibbonComponent_Factory(t) {\n  return new (t || NzRibbonComponent)();\n};\n\nNzRibbonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzRibbonComponent,\n  selectors: [[\"nz-ribbon\"]],\n  hostAttrs: [1, \"ant-ribbon-wrapper\"],\n  inputs: {\n    nzColor: \"nzColor\",\n    nzPlacement: \"nzPlacement\",\n    nzText: \"nzText\"\n  },\n  exportAs: [\"nzRibbon\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 11,\n  consts: [[1, \"ant-ribbon\"], [4, \"nzStringTemplateOutlet\"], [1, \"ant-ribbon-corner\"]],\n  template: function NzRibbonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵtemplate(2, NzRibbonComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵelement(3, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMap(ctx.presetColor && \"ant-ribbon-color-\" + ctx.presetColor);\n      i0.ɵɵstyleProp(\"background-color\", !ctx.presetColor && ctx.nzColor);\n      i0.ɵɵclassProp(\"ant-ribbon-placement-end\", ctx.nzPlacement === \"end\")(\"ant-ribbon-placement-start\", ctx.nzPlacement === \"start\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"color\", !ctx.presetColor && ctx.nzColor);\n    }\n  },\n  directives: [i6.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzRibbonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-ribbon',\n      exportAs: 'nzRibbon',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <ng-content></ng-content>\\n    <div\\n      class=\\\"ant-ribbon\\\"\\n      [class]=\\\"presetColor && 'ant-ribbon-color-' + presetColor\\\"\\n      [class.ant-ribbon-placement-end]=\\\"nzPlacement === 'end'\\\"\\n      [class.ant-ribbon-placement-start]=\\\"nzPlacement === 'start'\\\"\\n      [style.background-color]=\\\"!presetColor && nzColor\\\"\\n    >\\n      <ng-container *nzStringTemplateOutlet=\\\"nzText\\\">{{ nzText }}</ng-container>\\n      <div class=\\\"ant-ribbon-corner\\\" [style.color]=\\\"!presetColor && nzColor\\\"></div>\\n    </div>\\n  \",\n      host: {\n        class: 'ant-ribbon-wrapper'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzColor: [{\n      type: Input\n    }],\n    nzPlacement: [{\n      type: Input\n    }],\n    nzText: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzBadgeModule = /*#__PURE__*/_createClass(function NzBadgeModule() {\n  _classCallCheck(this, NzBadgeModule);\n});\n\nNzBadgeModule.ɵfac = function NzBadgeModule_Factory(t) {\n  return new (t || NzBadgeModule)();\n};\n\nNzBadgeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzBadgeModule,\n  declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent],\n  imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule],\n  exports: [NzBadgeComponent, NzRibbonComponent]\n});\nNzBadgeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBadgeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzBadgeComponent, NzBadgeSupComponent, NzRibbonComponent],\n      exports: [NzBadgeComponent, NzRibbonComponent],\n      imports: [BidiModule, CommonModule, ObserversModule, NzOutletModule, NzNoAnimationModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzBadgeComponent, NzBadgeModule, NzRibbonComponent }; //# sourceMappingURL=ng-zorro-antd-badge.mjs.map","map":null,"metadata":{},"sourceType":"module"}