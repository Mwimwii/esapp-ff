{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport * as i0 from '@angular/core';\nimport { Component, Input, Directive, Optional, Inject, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation, Output, ViewChild, ContentChildren, Host, Self, InjectionToken, TemplateRef, ContentChild, QueryList, NgModule } from '@angular/core';\nimport * as i1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport * as i9 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { fromEvent, Subscription, animationFrameScheduler, asapScheduler, Subject, of, merge } from 'rxjs';\nimport { takeUntil, auditTime, startWith, first, filter, delay } from 'rxjs/operators';\nimport * as i1$1 from 'ng-zorro-antd/dropdown';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport * as i7 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i5 from 'ng-zorro-antd/menu';\nimport * as i1$2 from '@angular/cdk/overlay';\nimport * as i2$1 from 'ng-zorro-antd/cdk/resize-observer';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { __decorate } from 'tslib';\nimport { InputBoolean, wrapIntoObservable } from 'ng-zorro-antd/core/util';\nimport * as i1$3 from '@angular/router';\nimport { NavigationEnd } from '@angular/router';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i1$4 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { PREFIX } from 'ng-zorro-antd/core/logger';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nfunction NzTabAddButtonComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var icon_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", icon_r1);\n  }\n}\n\nfunction NzTabNavOperationComponent_ul_5_li_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var item_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r5.tab.label, \" \");\n  }\n}\n\nvar _c0 = function _c0() {\n  return {\n    visible: false\n  };\n};\n\nfunction NzTabNavOperationComponent_ul_5_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 8);\n    i0.ɵɵlistener(\"click\", function NzTabNavOperationComponent_ul_5_li_1_Template_li_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r9);\n      var item_r5 = restoredCtx.$implicit;\n      var ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.onSelect(item_r5);\n    })(\"contextmenu\", function NzTabNavOperationComponent_ul_5_li_1_Template_li_contextmenu_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r9);\n      var item_r5 = restoredCtx.$implicit;\n      var ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.onContextmenu(item_r5, $event);\n    });\n    i0.ɵɵtemplate(1, NzTabNavOperationComponent_ul_5_li_1_ng_container_1_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r5 = ctx.$implicit;\n    i0.ɵɵclassProp(\"ant-tabs-dropdown-menu-item-disabled\", item_r5.disabled);\n    i0.ɵɵproperty(\"nzSelected\", item_r5.active)(\"nzDisabled\", item_r5.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", item_r5.tab.label)(\"nzStringTemplateOutletContext\", i0.ɵɵpureFunction0(6, _c0));\n  }\n}\n\nfunction NzTabNavOperationComponent_ul_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 6);\n    i0.ɵɵtemplate(1, NzTabNavOperationComponent_ul_5_li_1_Template, 2, 7, \"li\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.items);\n  }\n}\n\nfunction NzTabNavOperationComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function NzTabNavOperationComponent_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      var ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.addClicked.emit();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"addIcon\", ctx_r3.addIcon);\n  }\n}\n\nvar _c1 = function _c1() {\n  return {\n    minWidth: \"46px\"\n  };\n};\n\nvar _c2 = [\"navWarp\"];\nvar _c3 = [\"navList\"];\n\nfunction NzTabNavBarComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function NzTabNavBarComponent_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.addClicked.emit();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"addIcon\", ctx_r2.addIcon);\n  }\n}\n\nfunction NzTabNavBarComponent_div_8_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTabNavBarComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, NzTabNavBarComponent_div_8_ng_template_1_Template, 0, 0, \"ng-template\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.extraTemplate);\n  }\n}\n\nvar _c4 = [\"*\"];\nvar _c5 = [\"nz-tab-body\", \"\"];\n\nfunction NzTabBodyComponent_ng_container_0_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTabBodyComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTabBodyComponent_ng_container_0_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.content);\n  }\n}\n\nfunction NzTabCloseButtonComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var icon_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", icon_r1);\n  }\n}\n\nvar _c6 = [\"contentTemplate\"];\n\nfunction NzTabComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\n\nfunction NzTabComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n  }\n}\n\nvar _c7 = [[[\"\", \"nz-tab-link\", \"\"]], \"*\"];\nvar _c8 = [\"[nz-tab-link]\", \"*\"];\n\nfunction NzTabSetComponent_nz_tabs_nav_0_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var tab_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tab_r3.label);\n  }\n}\n\nfunction NzTabSetComponent_nz_tabs_nav_0_div_1_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function NzTabSetComponent_nz_tabs_nav_0_div_1_button_3_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var i_r4 = i0.ɵɵnextContext().index;\n      var ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.onClose(i_r4, $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tab_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"closeIcon\", tab_r3.nzCloseIcon);\n  }\n}\n\nvar _c9 = function _c9() {\n  return {\n    visible: true\n  };\n};\n\nfunction NzTabSetComponent_nz_tabs_nav_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function NzTabSetComponent_nz_tabs_nav_0_div_1_Template_div_click_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r13);\n      var tab_r3 = restoredCtx.$implicit;\n      var i_r4 = restoredCtx.index;\n      var ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.clickNavItem(tab_r3, i_r4, $event);\n    })(\"contextmenu\", function NzTabSetComponent_nz_tabs_nav_0_div_1_Template_div_contextmenu_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r13);\n      var tab_r3 = restoredCtx.$implicit;\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.contextmenuNavItem(tab_r3, $event);\n    });\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵtemplate(2, NzTabSetComponent_nz_tabs_nav_0_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 8);\n    i0.ɵɵtemplate(3, NzTabSetComponent_nz_tabs_nav_0_div_1_button_3_Template, 1, 1, \"button\", 9);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var tab_r3 = ctx.$implicit;\n    var i_r4 = ctx.index;\n    var ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"margin-right\", ctx_r2.position === \"horizontal\" ? ctx_r2.nzTabBarGutter : null, \"px\")(\"margin-bottom\", ctx_r2.position === \"vertical\" ? ctx_r2.nzTabBarGutter : null, \"px\");\n    i0.ɵɵclassProp(\"ant-tabs-tab-active\", ctx_r2.nzSelectedIndex === i_r4)(\"ant-tabs-tab-disabled\", tab_r3.nzDisabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", tab_r3.nzDisabled)(\"tab\", tab_r3)(\"active\", ctx_r2.nzSelectedIndex === i_r4);\n    i0.ɵɵattribute(\"tabIndex\", ctx_r2.getTabIndex(tab_r3, i_r4))(\"aria-disabled\", tab_r3.nzDisabled)(\"aria-selected\", ctx_r2.nzSelectedIndex === i_r4 && !ctx_r2.nzHideAll)(\"aria-controls\", ctx_r2.getTabContentId(i_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", tab_r3.label)(\"nzStringTemplateOutletContext\", i0.ɵɵpureFunction0(18, _c9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tab_r3.nzClosable && ctx_r2.closable && !tab_r3.nzDisabled);\n  }\n}\n\nfunction NzTabSetComponent_nz_tabs_nav_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-tabs-nav\", 4);\n    i0.ɵɵlistener(\"tabScroll\", function NzTabSetComponent_nz_tabs_nav_0_Template_nz_tabs_nav_tabScroll_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      var ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.nzTabListScroll.emit($event);\n    })(\"selectFocusedIndex\", function NzTabSetComponent_nz_tabs_nav_0_Template_nz_tabs_nav_selectFocusedIndex_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      var ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.setSelectedIndex($event);\n    })(\"addClicked\", function NzTabSetComponent_nz_tabs_nav_0_Template_nz_tabs_nav_addClicked_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      var ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.onAdd();\n    });\n    i0.ɵɵtemplate(1, NzTabSetComponent_nz_tabs_nav_0_div_1_Template, 4, 19, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.nzTabBarStyle)(\"selectedIndex\", ctx_r0.nzSelectedIndex || 0)(\"inkBarAnimated\", ctx_r0.inkBarAnimated)(\"addable\", ctx_r0.addable)(\"addIcon\", ctx_r0.nzAddIcon)(\"hideBar\", ctx_r0.nzHideAll)(\"position\", ctx_r0.position)(\"extraTemplate\", ctx_r0.nzTabBarExtraContent);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.tabs);\n  }\n}\n\nfunction NzTabSetComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 11);\n  }\n\n  if (rf & 2) {\n    var tab_r19 = ctx.$implicit;\n    var i_r20 = ctx.index;\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"active\", ctx_r1.nzSelectedIndex === i_r20 && !ctx_r1.nzHideAll)(\"content\", tab_r19.content)(\"forceRender\", tab_r19.nzForceRender)(\"tabPaneAnimated\", ctx_r1.tabPaneAnimated);\n  }\n}\n\nvar NzTabAddButtonComponent = /*#__PURE__*/function () {\n  function NzTabAddButtonComponent(elementRef) {\n    _classCallCheck(this, NzTabAddButtonComponent);\n\n    this.elementRef = elementRef;\n    this.addIcon = 'plus';\n    this.element = this.elementRef.nativeElement;\n  }\n\n  _createClass(NzTabAddButtonComponent, [{\n    key: \"getElementWidth\",\n    value: function getElementWidth() {\n      var _a;\n\n      return ((_a = this.element) === null || _a === void 0 ? void 0 : _a.offsetWidth) || 0;\n    }\n  }, {\n    key: \"getElementHeight\",\n    value: function getElementHeight() {\n      var _a;\n\n      return ((_a = this.element) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n    }\n  }]);\n\n  return NzTabAddButtonComponent;\n}();\n\nNzTabAddButtonComponent.ɵfac = function NzTabAddButtonComponent_Factory(t) {\n  return new (t || NzTabAddButtonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzTabAddButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTabAddButtonComponent,\n  selectors: [[\"nz-tab-add-button\"], [\"button\", \"nz-tab-add-button\", \"\"]],\n  hostAttrs: [\"aria-label\", \"Add tab\", \"type\", \"button\", 1, \"ant-tabs-nav-add\"],\n  inputs: {\n    addIcon: \"addIcon\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", \"nzTheme\", \"outline\", 3, \"nzType\"]],\n  template: function NzTabAddButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzTabAddButtonComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.addIcon);\n    }\n  },\n  directives: [i1.NzStringTemplateOutletDirective, i2.NzIconDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabAddButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tab-add-button, button[nz-tab-add-button]',\n      template: \"\\n    <ng-container *nzStringTemplateOutlet=\\\"addIcon; let icon\\\">\\n      <i nz-icon [nzType]=\\\"icon\\\" nzTheme=\\\"outline\\\"></i>\\n    </ng-container>\\n  \",\n      host: {\n        class: 'ant-tabs-nav-add',\n        'aria-label': 'Add tab',\n        type: 'button'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    addIcon: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTabsInkBarDirective = /*#__PURE__*/function () {\n  function NzTabsInkBarDirective(elementRef, ngZone, animationMode) {\n    _classCallCheck(this, NzTabsInkBarDirective);\n\n    this.elementRef = elementRef;\n    this.ngZone = ngZone;\n    this.animationMode = animationMode;\n    this.position = 'horizontal';\n    this.animated = true;\n  }\n\n  _createClass(NzTabsInkBarDirective, [{\n    key: \"_animated\",\n    get: function get() {\n      return this.animationMode !== 'NoopAnimations' && this.animated;\n    }\n  }, {\n    key: \"alignToElement\",\n    value: function alignToElement(element) {\n      var _this = this;\n\n      this.ngZone.runOutsideAngular(function () {\n        reqAnimFrame(function () {\n          return _this.setStyles(element);\n        });\n      });\n    }\n  }, {\n    key: \"setStyles\",\n    value: function setStyles(element) {\n      var inkBar = this.elementRef.nativeElement;\n\n      if (this.position === 'horizontal') {\n        inkBar.style.top = '';\n        inkBar.style.height = '';\n        inkBar.style.left = this.getLeftPosition(element);\n        inkBar.style.width = this.getElementWidth(element);\n      } else {\n        inkBar.style.left = '';\n        inkBar.style.width = '';\n        inkBar.style.top = this.getTopPosition(element);\n        inkBar.style.height = this.getElementHeight(element);\n      }\n    }\n  }, {\n    key: \"getLeftPosition\",\n    value: function getLeftPosition(element) {\n      return element ? \"\".concat(element.offsetLeft || 0, \"px\") : '0';\n    }\n  }, {\n    key: \"getElementWidth\",\n    value: function getElementWidth(element) {\n      return element ? \"\".concat(element.offsetWidth || 0, \"px\") : '0';\n    }\n  }, {\n    key: \"getTopPosition\",\n    value: function getTopPosition(element) {\n      return element ? \"\".concat(element.offsetTop || 0, \"px\") : '0';\n    }\n  }, {\n    key: \"getElementHeight\",\n    value: function getElementHeight(element) {\n      return element ? \"\".concat(element.offsetHeight || 0, \"px\") : '0';\n    }\n  }]);\n\n  return NzTabsInkBarDirective;\n}();\n\nNzTabsInkBarDirective.ɵfac = function NzTabsInkBarDirective_Factory(t) {\n  return new (t || NzTabsInkBarDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nNzTabsInkBarDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzTabsInkBarDirective,\n  selectors: [[\"nz-tabs-ink-bar\"], [\"\", \"nz-tabs-ink-bar\", \"\"]],\n  hostAttrs: [1, \"ant-tabs-ink-bar\"],\n  hostVars: 2,\n  hostBindings: function NzTabsInkBarDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-tabs-ink-bar-animated\", ctx._animated);\n    }\n  },\n  inputs: {\n    position: \"position\",\n    animated: \"animated\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabsInkBarDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'nz-tabs-ink-bar, [nz-tabs-ink-bar]',\n      host: {\n        class: 'ant-tabs-ink-bar',\n        '[class.ant-tabs-ink-bar-animated]': '_animated'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    position: [{\n      type: Input\n    }],\n    animated: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NzTabNavItemDirective = /*#__PURE__*/function () {\n  function NzTabNavItemDirective(elementRef) {\n    _classCallCheck(this, NzTabNavItemDirective);\n\n    this.elementRef = elementRef;\n    this.disabled = false;\n    this.active = false;\n    this.el = elementRef.nativeElement;\n    this.parentElement = this.el.parentElement;\n  }\n\n  _createClass(NzTabNavItemDirective, [{\n    key: \"focus\",\n    value: function focus() {\n      this.el.focus();\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this.parentElement.offsetWidth;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.parentElement.offsetHeight;\n    }\n  }, {\n    key: \"left\",\n    get: function get() {\n      return this.parentElement.offsetLeft;\n    }\n  }, {\n    key: \"top\",\n    get: function get() {\n      return this.parentElement.offsetTop;\n    }\n  }]);\n\n  return NzTabNavItemDirective;\n}();\n\nNzTabNavItemDirective.ɵfac = function NzTabNavItemDirective_Factory(t) {\n  return new (t || NzTabNavItemDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzTabNavItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzTabNavItemDirective,\n  selectors: [[\"\", \"nzTabNavItem\", \"\"]],\n  inputs: {\n    disabled: \"disabled\",\n    tab: \"tab\",\n    active: \"active\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabNavItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nzTabNavItem]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    tab: [{\n      type: Input\n    }],\n    active: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTabNavOperationComponent = /*#__PURE__*/function () {\n  function NzTabNavOperationComponent(cdr, elementRef) {\n    _classCallCheck(this, NzTabNavOperationComponent);\n\n    this.cdr = cdr;\n    this.elementRef = elementRef;\n    this.items = [];\n    this.addable = false;\n    this.addIcon = 'plus';\n    this.addClicked = new EventEmitter();\n    this.selected = new EventEmitter();\n    this.closeAnimationWaitTimeoutId = -1;\n    this.menuOpened = false;\n    this.element = this.elementRef.nativeElement;\n  }\n\n  _createClass(NzTabNavOperationComponent, [{\n    key: \"onSelect\",\n    value: function onSelect(item) {\n      if (!item.disabled) {\n        // ignore nzCanDeactivate\n        item.tab.nzClick.emit();\n        this.selected.emit(item);\n      }\n    }\n  }, {\n    key: \"onContextmenu\",\n    value: function onContextmenu(item, e) {\n      if (!item.disabled) {\n        item.tab.nzContextmenu.emit(e);\n      }\n    }\n  }, {\n    key: \"showItems\",\n    value: function showItems() {\n      clearTimeout(this.closeAnimationWaitTimeoutId);\n      this.menuOpened = true;\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"menuVisChange\",\n    value: function menuVisChange(visible) {\n      var _this2 = this;\n\n      if (!visible) {\n        this.closeAnimationWaitTimeoutId = setTimeout(function () {\n          _this2.menuOpened = false;\n\n          _this2.cdr.markForCheck();\n        }, 150);\n      }\n    }\n  }, {\n    key: \"getElementWidth\",\n    value: function getElementWidth() {\n      var _a;\n\n      return ((_a = this.element) === null || _a === void 0 ? void 0 : _a.offsetWidth) || 0;\n    }\n  }, {\n    key: \"getElementHeight\",\n    value: function getElementHeight() {\n      var _a;\n\n      return ((_a = this.element) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      clearTimeout(this.closeAnimationWaitTimeoutId);\n    }\n  }]);\n\n  return NzTabNavOperationComponent;\n}();\n\nNzTabNavOperationComponent.ɵfac = function NzTabNavOperationComponent_Factory(t) {\n  return new (t || NzTabNavOperationComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzTabNavOperationComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTabNavOperationComponent,\n  selectors: [[\"nz-tab-nav-operation\"]],\n  hostAttrs: [1, \"ant-tabs-nav-operations\"],\n  hostVars: 2,\n  hostBindings: function NzTabNavOperationComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-tabs-nav-operations-hidden\", ctx.items.length === 0);\n    }\n  },\n  inputs: {\n    items: \"items\",\n    addable: \"addable\",\n    addIcon: \"addIcon\"\n  },\n  outputs: {\n    addClicked: \"addClicked\",\n    selected: \"selected\"\n  },\n  exportAs: [\"nzTabNavOperation\"],\n  decls: 7,\n  vars: 6,\n  consts: [[\"nz-dropdown\", \"\", \"type\", \"button\", \"tabindex\", \"-1\", \"aria-hidden\", \"true\", \"nzOverlayClassName\", \"nz-tabs-dropdown\", 1, \"ant-tabs-nav-more\", 3, \"nzDropdownMenu\", \"nzOverlayStyle\", \"nzMatchWidthElement\", \"nzVisibleChange\", \"mouseenter\"], [\"dropdownTrigger\", \"nzDropdown\"], [\"nz-icon\", \"\", \"nzType\", \"ellipsis\"], [\"menu\", \"nzDropdownMenu\"], [\"nz-menu\", \"\", 4, \"ngIf\"], [\"nz-tab-add-button\", \"\", 3, \"addIcon\", \"click\", 4, \"ngIf\"], [\"nz-menu\", \"\"], [\"nz-menu-item\", \"\", \"class\", \"ant-tabs-dropdown-menu-item\", 3, \"ant-tabs-dropdown-menu-item-disabled\", \"nzSelected\", \"nzDisabled\", \"click\", \"contextmenu\", 4, \"ngFor\", \"ngForOf\"], [\"nz-menu-item\", \"\", 1, \"ant-tabs-dropdown-menu-item\", 3, \"nzSelected\", \"nzDisabled\", \"click\", \"contextmenu\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [\"nz-tab-add-button\", \"\", 3, \"addIcon\", \"click\"]],\n  template: function NzTabNavOperationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"nzVisibleChange\", function NzTabNavOperationComponent_Template_button_nzVisibleChange_0_listener($event) {\n        return ctx.menuVisChange($event);\n      })(\"mouseenter\", function NzTabNavOperationComponent_Template_button_mouseenter_0_listener() {\n        return ctx.showItems();\n      });\n      i0.ɵɵelement(2, \"i\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"nz-dropdown-menu\", null, 3);\n      i0.ɵɵtemplate(5, NzTabNavOperationComponent_ul_5_Template, 2, 1, \"ul\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, NzTabNavOperationComponent_button_6_Template, 1, 1, \"button\", 5);\n    }\n\n    if (rf & 2) {\n      var _r1 = i0.ɵɵreference(4);\n\n      i0.ɵɵproperty(\"nzDropdownMenu\", _r1)(\"nzOverlayStyle\", i0.ɵɵpureFunction0(5, _c1))(\"nzMatchWidthElement\", null);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.menuOpened);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.addable);\n    }\n  },\n  directives: [i1$1.NzDropdownMenuComponent, NzTabAddButtonComponent, i1$1.NzDropDownDirective, i2.NzIconDirective, i7.NgIf, i5.NzMenuDirective, i7.NgForOf, i5.NzMenuItemDirective, i1.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabNavOperationComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tab-nav-operation',\n      exportAs: 'nzTabNavOperation',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <button\\n      nz-dropdown\\n      class=\\\"ant-tabs-nav-more\\\"\\n      type=\\\"button\\\"\\n      tabindex=\\\"-1\\\"\\n      aria-hidden=\\\"true\\\"\\n      nzOverlayClassName=\\\"nz-tabs-dropdown\\\"\\n      #dropdownTrigger=\\\"nzDropdown\\\"\\n      [nzDropdownMenu]=\\\"menu\\\"\\n      [nzOverlayStyle]=\\\"{ minWidth: '46px' }\\\"\\n      [nzMatchWidthElement]=\\\"null\\\"\\n      (nzVisibleChange)=\\\"menuVisChange($event)\\\"\\n      (mouseenter)=\\\"showItems()\\\"\\n    >\\n      <i nz-icon nzType=\\\"ellipsis\\\"></i>\\n    </button>\\n    <nz-dropdown-menu #menu=\\\"nzDropdownMenu\\\">\\n      <ul nz-menu *ngIf=\\\"menuOpened\\\">\\n        <li\\n          nz-menu-item\\n          *ngFor=\\\"let item of items\\\"\\n          class=\\\"ant-tabs-dropdown-menu-item\\\"\\n          [class.ant-tabs-dropdown-menu-item-disabled]=\\\"item.disabled\\\"\\n          [nzSelected]=\\\"item.active\\\"\\n          [nzDisabled]=\\\"item.disabled\\\"\\n          (click)=\\\"onSelect(item)\\\"\\n          (contextmenu)=\\\"onContextmenu(item, $event)\\\"\\n        >\\n          <ng-container *nzStringTemplateOutlet=\\\"item.tab.label; context: { visible: false }\\\">\\n            {{ item.tab.label }}\\n          </ng-container>\\n        </li>\\n      </ul>\\n    </nz-dropdown-menu>\\n    <button *ngIf=\\\"addable\\\" nz-tab-add-button [addIcon]=\\\"addIcon\\\" (click)=\\\"addClicked.emit()\\\"></button>\\n  \",\n      host: {\n        class: 'ant-tabs-nav-operations',\n        '[class.ant-tabs-nav-operations-hidden]': 'items.length === 0'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    items: [{\n      type: Input\n    }],\n    addable: [{\n      type: Input\n    }],\n    addIcon: [{\n      type: Input\n    }],\n    addClicked: [{\n      type: Output\n    }],\n    selected: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar MIN_SWIPE_DISTANCE = 0.1;\nvar STOP_SWIPE_DISTANCE = 0.01;\nvar REFRESH_INTERVAL = 20;\nvar SPEED_OFF_MULTIPLE = Math.pow(0.995, REFRESH_INTERVAL);\n\nvar NzTabScrollListDirective = /*#__PURE__*/function () {\n  function NzTabScrollListDirective(ngZone, elementRef) {\n    var _this3 = this;\n\n    _classCallCheck(this, NzTabScrollListDirective);\n\n    this.ngZone = ngZone;\n    this.elementRef = elementRef;\n    this.lastWheelDirection = null;\n    this.lastWheelTimestamp = 0;\n    this.lastTimestamp = 0;\n    this.lastTimeDiff = 0;\n    this.lastMixedWheel = 0;\n    this.lastWheelPrevent = false;\n    this.touchPosition = null;\n    this.lastOffset = null;\n    this.motion = -1;\n\n    this.unsubscribe = function () {\n      return void 0;\n    };\n\n    this.offsetChange = new EventEmitter();\n    this.tabScroll = new EventEmitter();\n\n    this.onTouchEnd = function (e) {\n      if (!_this3.touchPosition) {\n        return;\n      }\n\n      var lastOffset = _this3.lastOffset;\n      var lastTimeDiff = _this3.lastTimeDiff;\n      _this3.lastOffset = _this3.touchPosition = null;\n\n      if (lastOffset) {\n        var distanceX = lastOffset.x / lastTimeDiff;\n        var distanceY = lastOffset.y / lastTimeDiff;\n        var absX = Math.abs(distanceX);\n        var absY = Math.abs(distanceY); // Skip swipe if low distance\n\n        if (Math.max(absX, absY) < MIN_SWIPE_DISTANCE) {\n          return;\n        }\n\n        var currentX = distanceX;\n        var currentY = distanceY;\n        _this3.motion = window.setInterval(function () {\n          if (Math.abs(currentX) < STOP_SWIPE_DISTANCE && Math.abs(currentY) < STOP_SWIPE_DISTANCE) {\n            window.clearInterval(_this3.motion);\n            return;\n          }\n\n          currentX *= SPEED_OFF_MULTIPLE;\n          currentY *= SPEED_OFF_MULTIPLE;\n\n          _this3.onOffset(currentX * REFRESH_INTERVAL, currentY * REFRESH_INTERVAL, e);\n        }, REFRESH_INTERVAL);\n      }\n    };\n\n    this.onTouchMove = function (e) {\n      if (!_this3.touchPosition) {\n        return;\n      }\n\n      e.preventDefault();\n      var _e$touches$ = e.touches[0],\n          screenX = _e$touches$.screenX,\n          screenY = _e$touches$.screenY;\n      var offsetX = screenX - _this3.touchPosition.x;\n      var offsetY = screenY - _this3.touchPosition.y;\n\n      _this3.onOffset(offsetX, offsetY, e);\n\n      var now = Date.now();\n      _this3.lastTimeDiff = now - _this3.lastTimestamp;\n      _this3.lastTimestamp = now;\n      _this3.lastOffset = {\n        x: offsetX,\n        y: offsetY\n      };\n      _this3.touchPosition = {\n        x: screenX,\n        y: screenY\n      };\n    };\n\n    this.onTouchStart = function (e) {\n      var _e$touches$2 = e.touches[0],\n          screenX = _e$touches$2.screenX,\n          screenY = _e$touches$2.screenY;\n      _this3.touchPosition = {\n        x: screenX,\n        y: screenY\n      };\n      window.clearInterval(_this3.motion);\n    };\n\n    this.onWheel = function (e) {\n      var deltaX = e.deltaX,\n          deltaY = e.deltaY;\n      var mixed;\n      var absX = Math.abs(deltaX);\n      var absY = Math.abs(deltaY);\n\n      if (absX === absY) {\n        mixed = _this3.lastWheelDirection === 'x' ? deltaX : deltaY;\n      } else if (absX > absY) {\n        mixed = deltaX;\n        _this3.lastWheelDirection = 'x';\n      } else {\n        mixed = deltaY;\n        _this3.lastWheelDirection = 'y';\n      } // Optimize mac touch scroll\n\n\n      var now = Date.now();\n      var absMixed = Math.abs(mixed);\n\n      if (now - _this3.lastWheelTimestamp > 100 || absMixed - _this3.lastMixedWheel > 10) {\n        _this3.lastWheelPrevent = false;\n      }\n\n      _this3.onOffset(-mixed, -mixed, e);\n\n      if (e.defaultPrevented || _this3.lastWheelPrevent) {\n        _this3.lastWheelPrevent = true;\n      }\n\n      _this3.lastWheelTimestamp = now;\n      _this3.lastMixedWheel = absMixed;\n    };\n  }\n\n  _createClass(NzTabScrollListDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this4 = this;\n\n      this.unsubscribe = this.ngZone.runOutsideAngular(function () {\n        var el = _this4.elementRef.nativeElement;\n        var wheel$ = fromEvent(el, 'wheel');\n        var touchstart$ = fromEvent(el, 'touchstart');\n        var touchmove$ = fromEvent(el, 'touchmove');\n        var touchend$ = fromEvent(el, 'touchend');\n        var subscription = new Subscription();\n        subscription.add(_this4.subscribeWrap('wheel', wheel$, _this4.onWheel));\n        subscription.add(_this4.subscribeWrap('touchstart', touchstart$, _this4.onTouchStart));\n        subscription.add(_this4.subscribeWrap('touchmove', touchmove$, _this4.onTouchMove));\n        subscription.add(_this4.subscribeWrap('touchend', touchend$, _this4.onTouchEnd));\n        return function () {\n          subscription.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: \"subscribeWrap\",\n    value: function subscribeWrap(type, observable, handler) {\n      var _this5 = this;\n\n      return observable.subscribe(function (event) {\n        _this5.tabScroll.emit({\n          type: type,\n          event: event\n        });\n\n        if (!event.defaultPrevented) {\n          handler(event);\n        }\n      });\n    }\n  }, {\n    key: \"onOffset\",\n    value: function onOffset(x, y, event) {\n      var _this6 = this;\n\n      this.ngZone.run(function () {\n        _this6.offsetChange.emit({\n          x: x,\n          y: y,\n          event: event\n        });\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unsubscribe();\n    }\n  }]);\n\n  return NzTabScrollListDirective;\n}();\n\nNzTabScrollListDirective.ɵfac = function NzTabScrollListDirective_Factory(t) {\n  return new (t || NzTabScrollListDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzTabScrollListDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzTabScrollListDirective,\n  selectors: [[\"\", \"nzTabScrollList\", \"\"]],\n  outputs: {\n    offsetChange: \"offsetChange\",\n    tabScroll: \"tabScroll\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabScrollListDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nzTabScrollList]'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    offsetChange: [{\n      type: Output\n    }],\n    tabScroll: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar RESIZE_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\nvar CSS_TRANSFORM_TIME = 150;\n\nvar NzTabNavBarComponent = /*#__PURE__*/function () {\n  function NzTabNavBarComponent(cdr, ngZone, viewportRuler, nzResizeObserver, dir) {\n    _classCallCheck(this, NzTabNavBarComponent);\n\n    this.cdr = cdr;\n    this.ngZone = ngZone;\n    this.viewportRuler = viewportRuler;\n    this.nzResizeObserver = nzResizeObserver;\n    this.dir = dir;\n    this.indexFocused = new EventEmitter();\n    this.selectFocusedIndex = new EventEmitter();\n    this.addClicked = new EventEmitter();\n    this.tabScroll = new EventEmitter();\n    this.position = 'horizontal';\n    this.addable = false;\n    this.hideBar = false;\n    this.addIcon = 'plus';\n    this.inkBarAnimated = true;\n    this.translate = null;\n    this.transformX = 0;\n    this.transformY = 0;\n    this.pingLeft = false;\n    this.pingRight = false;\n    this.pingTop = false;\n    this.pingBottom = false;\n    this.hiddenItems = [];\n    this.destroy$ = new Subject();\n    this._selectedIndex = 0;\n    this.wrapperWidth = 0;\n    this.wrapperHeight = 0;\n    this.scrollListWidth = 0;\n    this.scrollListHeight = 0;\n    this.operationWidth = 0;\n    this.operationHeight = 0;\n    this.addButtonWidth = 0;\n    this.addButtonHeight = 0;\n    this.selectedIndexChanged = false;\n    this.lockAnimationTimeoutId = -1;\n    this.cssTransformTimeWaitingId = -1;\n  }\n\n  _createClass(NzTabNavBarComponent, [{\n    key: \"selectedIndex\",\n    get: function get() {\n      return this._selectedIndex;\n    },\n    set: function set(value) {\n      var newValue = coerceNumberProperty(value);\n\n      if (this._selectedIndex !== newValue) {\n        this._selectedIndex = value;\n        this.selectedIndexChanged = true;\n\n        if (this.keyManager) {\n          this.keyManager.updateActiveItem(value);\n        }\n      }\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n\n  }, {\n    key: \"focusIndex\",\n    get: function get() {\n      return this.keyManager ? this.keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    ,\n    set: function set(value) {\n      if (!this.isValidIndex(value) || this.focusIndex === value || !this.keyManager) {\n        return;\n      }\n\n      this.keyManager.setActiveItem(value);\n    }\n  }, {\n    key: \"showAddButton\",\n    get: function get() {\n      return this.hiddenItems.length === 0 && this.addable;\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this7 = this;\n\n      var dirChange = this.dir ? this.dir.change : of(null);\n      var resize = this.viewportRuler.change(150);\n\n      var realign = function realign() {\n        _this7.updateScrollListPosition();\n\n        _this7.alignInkBarToSelectedTab();\n      };\n\n      this.keyManager = new FocusKeyManager(this.items).withHorizontalOrientation(this.getLayoutDirection()).withWrap();\n      this.keyManager.updateActiveItem(this.selectedIndex);\n      reqAnimFrame(realign);\n      merge(this.nzResizeObserver.observe(this.navWarpRef), this.nzResizeObserver.observe(this.navListRef)).pipe(takeUntil(this.destroy$), auditTime(16, RESIZE_SCHEDULER)).subscribe(function () {\n        realign();\n      });\n      merge(dirChange, resize, this.items.changes).pipe(takeUntil(this.destroy$)).subscribe(function () {\n        Promise.resolve().then(realign);\n\n        _this7.keyManager.withHorizontalOrientation(_this7.getLayoutDirection());\n      });\n      this.keyManager.change.pipe(takeUntil(this.destroy$)).subscribe(function (newFocusIndex) {\n        _this7.indexFocused.emit(newFocusIndex);\n\n        _this7.setTabFocus(newFocusIndex);\n\n        _this7.scrollToTab(_this7.keyManager.activeItem);\n      });\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      if (this.selectedIndexChanged) {\n        this.updateScrollListPosition();\n        this.alignInkBarToSelectedTab();\n        this.selectedIndexChanged = false;\n        this.cdr.markForCheck();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      clearTimeout(this.lockAnimationTimeoutId);\n      clearTimeout(this.cssTransformTimeWaitingId);\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"onSelectedFromMenu\",\n    value: function onSelectedFromMenu(tab) {\n      var tabIndex = this.items.toArray().findIndex(function (e) {\n        return e === tab;\n      });\n\n      if (tabIndex !== -1) {\n        this.keyManager.updateActiveItem(tabIndex);\n\n        if (this.focusIndex !== this.selectedIndex) {\n          this.selectFocusedIndex.emit(this.focusIndex);\n          this.scrollToTab(tab);\n        }\n      }\n    }\n  }, {\n    key: \"onOffsetChange\",\n    value: function onOffsetChange(e) {\n      if (this.position === 'horizontal') {\n        if (this.lockAnimationTimeoutId === -1) {\n          if (this.transformX >= 0 && e.x > 0) {\n            return;\n          }\n\n          if (this.transformX <= this.wrapperWidth - this.scrollListWidth && e.x < 0) {\n            return;\n          }\n        }\n\n        e.event.preventDefault();\n        this.transformX = this.clampTransformX(this.transformX + e.x);\n        this.setTransform(this.transformX, 0);\n      } else {\n        if (this.lockAnimationTimeoutId === -1) {\n          if (this.transformY >= 0 && e.y > 0) {\n            return;\n          }\n\n          if (this.transformY <= this.wrapperHeight - this.scrollListHeight && e.y < 0) {\n            return;\n          }\n        }\n\n        e.event.preventDefault();\n        this.transformY = this.clampTransformY(this.transformY + e.y);\n        this.setTransform(0, this.transformY);\n      }\n\n      this.lockAnimation();\n      this.setVisibleRange();\n      this.setPingStatus();\n    }\n  }, {\n    key: \"handleKeydown\",\n    value: function handleKeydown(event) {\n      var inNavigationList = this.navWarpRef.nativeElement.contains(event.target);\n\n      if (hasModifierKey(event) || !inNavigationList) {\n        return;\n      }\n\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n        case UP_ARROW:\n        case RIGHT_ARROW:\n        case DOWN_ARROW:\n          this.lockAnimation();\n          this.keyManager.onKeydown(event);\n          break;\n\n        case ENTER:\n        case SPACE:\n          if (this.focusIndex !== this.selectedIndex) {\n            this.selectFocusedIndex.emit(this.focusIndex);\n          }\n\n          break;\n\n        default:\n          this.keyManager.onKeydown(event);\n      }\n    }\n  }, {\n    key: \"isValidIndex\",\n    value: function isValidIndex(index) {\n      if (!this.items) {\n        return true;\n      }\n\n      var tab = this.items ? this.items.toArray()[index] : null;\n      return !!tab && !tab.disabled;\n    }\n  }, {\n    key: \"scrollToTab\",\n    value: function scrollToTab(tab) {\n      var _this8 = this;\n\n      if (!this.items.find(function (e) {\n        return e === tab;\n      })) {\n        return;\n      }\n\n      var tabs = this.items.toArray();\n\n      if (this.position === 'horizontal') {\n        var newTransform = this.transformX;\n\n        if (this.getLayoutDirection() === 'rtl') {\n          var right = tabs[0].left + tabs[0].width - tab.left - tab.width;\n\n          if (right < this.transformX) {\n            newTransform = right;\n          } else if (right + tab.width > this.transformX + this.wrapperWidth) {\n            newTransform = right + tab.width - this.wrapperWidth;\n          }\n        } else if (tab.left < -this.transformX) {\n          newTransform = -tab.left;\n        } else if (tab.left + tab.width > -this.transformX + this.wrapperWidth) {\n          newTransform = -(tab.left + tab.width - this.wrapperWidth);\n        }\n\n        this.transformX = newTransform;\n        this.transformY = 0;\n        this.setTransform(newTransform, 0);\n      } else {\n        var _newTransform = this.transformY;\n\n        if (tab.top < -this.transformY) {\n          _newTransform = -tab.top;\n        } else if (tab.top + tab.height > -this.transformY + this.wrapperHeight) {\n          _newTransform = -(tab.top + tab.height - this.wrapperHeight);\n        }\n\n        this.transformY = _newTransform;\n        this.transformX = 0;\n        this.setTransform(0, _newTransform);\n      }\n\n      clearTimeout(this.cssTransformTimeWaitingId);\n      this.cssTransformTimeWaitingId = setTimeout(function () {\n        _this8.setVisibleRange();\n      }, CSS_TRANSFORM_TIME);\n    }\n  }, {\n    key: \"lockAnimation\",\n    value: function lockAnimation() {\n      var _this9 = this;\n\n      if (this.lockAnimationTimeoutId === -1) {\n        this.ngZone.runOutsideAngular(function () {\n          _this9.navListRef.nativeElement.style.transition = 'none';\n          _this9.lockAnimationTimeoutId = setTimeout(function () {\n            _this9.navListRef.nativeElement.style.transition = '';\n            _this9.lockAnimationTimeoutId = -1;\n          }, CSS_TRANSFORM_TIME);\n        });\n      }\n    }\n  }, {\n    key: \"setTransform\",\n    value: function setTransform(x, y) {\n      this.navListRef.nativeElement.style.transform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n    }\n  }, {\n    key: \"clampTransformX\",\n    value: function clampTransformX(transform) {\n      var scrollWidth = this.wrapperWidth - this.scrollListWidth;\n\n      if (this.getLayoutDirection() === 'rtl') {\n        return Math.max(Math.min(scrollWidth, transform), 0);\n      } else {\n        return Math.min(Math.max(scrollWidth, transform), 0);\n      }\n    }\n  }, {\n    key: \"clampTransformY\",\n    value: function clampTransformY(transform) {\n      return Math.min(Math.max(this.wrapperHeight - this.scrollListHeight, transform), 0);\n    }\n  }, {\n    key: \"updateScrollListPosition\",\n    value: function updateScrollListPosition() {\n      this.resetSizes();\n      this.transformX = this.clampTransformX(this.transformX);\n      this.transformY = this.clampTransformY(this.transformY);\n      this.setVisibleRange();\n      this.setPingStatus();\n\n      if (this.keyManager) {\n        this.keyManager.updateActiveItem(this.keyManager.activeItemIndex);\n\n        if (this.keyManager.activeItem) {\n          this.scrollToTab(this.keyManager.activeItem);\n        }\n      }\n    }\n  }, {\n    key: \"resetSizes\",\n    value: function resetSizes() {\n      this.addButtonWidth = this.addBtnRef ? this.addBtnRef.getElementWidth() : 0;\n      this.addButtonHeight = this.addBtnRef ? this.addBtnRef.getElementHeight() : 0;\n      this.operationWidth = this.operationRef.getElementWidth();\n      this.operationHeight = this.operationRef.getElementHeight();\n      this.wrapperWidth = this.navWarpRef.nativeElement.offsetWidth || 0;\n      this.wrapperHeight = this.navWarpRef.nativeElement.offsetHeight || 0;\n      this.scrollListHeight = this.navListRef.nativeElement.offsetHeight || 0;\n      this.scrollListWidth = this.navListRef.nativeElement.offsetWidth || 0;\n    }\n  }, {\n    key: \"alignInkBarToSelectedTab\",\n    value: function alignInkBarToSelectedTab() {\n      var selectedItem = this.items && this.items.length ? this.items.toArray()[this.selectedIndex] : null;\n      var selectedItemElement = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n      if (selectedItemElement) {\n        /**\n         * .ant-tabs-nav-list - Target offset parent element\n         *   └──.ant-tabs-tab\n         *        └──.ant-tabs-tab-btn - Currently focused element\n         */\n        this.inkBar.alignToElement(selectedItemElement.parentElement);\n      }\n    }\n  }, {\n    key: \"setPingStatus\",\n    value: function setPingStatus() {\n      var ping = {\n        top: false,\n        right: false,\n        bottom: false,\n        left: false\n      };\n      var navWarp = this.navWarpRef.nativeElement;\n\n      if (this.position === 'horizontal') {\n        if (this.getLayoutDirection() === 'rtl') {\n          ping.right = this.transformX > 0;\n          ping.left = this.transformX + this.wrapperWidth < this.scrollListWidth;\n        } else {\n          ping.left = this.transformX < 0;\n          ping.right = -this.transformX + this.wrapperWidth < this.scrollListWidth;\n        }\n      } else {\n        ping.top = this.transformY < 0;\n        ping.bottom = -this.transformY + this.wrapperHeight < this.scrollListHeight;\n      }\n\n      Object.keys(ping).forEach(function (pos) {\n        var className = \"ant-tabs-nav-wrap-ping-\".concat(pos);\n\n        if (ping[pos]) {\n          navWarp.classList.add(className);\n        } else {\n          navWarp.classList.remove(className);\n        }\n      });\n    }\n  }, {\n    key: \"setVisibleRange\",\n    value: function setVisibleRange() {\n      var unit;\n      var position;\n      var transformSize;\n      var basicSize;\n      var tabContentSize;\n      var addSize;\n      var tabs = this.items.toArray();\n      var DEFAULT_SIZE = {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0,\n        right: 0\n      };\n\n      var getOffset = function getOffset(index) {\n        var offset;\n        var size = tabs[index] || DEFAULT_SIZE;\n\n        if (position === 'right') {\n          offset = tabs[0].left + tabs[0].width - tabs[index].left - tabs[index].width;\n        } else {\n          offset = size[position];\n        }\n\n        return offset;\n      };\n\n      if (this.position === 'horizontal') {\n        unit = 'width';\n        basicSize = this.wrapperWidth;\n        tabContentSize = this.scrollListWidth - (this.hiddenItems.length ? this.operationWidth : 0);\n        addSize = this.addButtonWidth;\n        transformSize = Math.abs(this.transformX);\n\n        if (this.getLayoutDirection() === 'rtl') {\n          position = 'right';\n          this.pingRight = this.transformX > 0;\n          this.pingLeft = this.transformX + this.wrapperWidth < this.scrollListWidth;\n        } else {\n          this.pingLeft = this.transformX < 0;\n          this.pingRight = -this.transformX + this.wrapperWidth < this.scrollListWidth;\n          position = 'left';\n        }\n      } else {\n        unit = 'height';\n        basicSize = this.wrapperHeight;\n        tabContentSize = this.scrollListHeight - (this.hiddenItems.length ? this.operationHeight : 0);\n        addSize = this.addButtonHeight;\n        position = 'top';\n        transformSize = -this.transformY;\n        this.pingTop = this.transformY < 0;\n        this.pingBottom = -this.transformY + this.wrapperHeight < this.scrollListHeight;\n      }\n\n      var mergedBasicSize = basicSize;\n\n      if (tabContentSize + addSize > basicSize) {\n        mergedBasicSize = basicSize - addSize;\n      }\n\n      if (!tabs.length) {\n        this.hiddenItems = [];\n        this.cdr.markForCheck();\n        return;\n      }\n\n      var len = tabs.length;\n      var endIndex = len;\n\n      for (var i = 0; i < len; i += 1) {\n        var offset = getOffset(i);\n        var size = tabs[i] || DEFAULT_SIZE;\n\n        if (offset + size[unit] > transformSize + mergedBasicSize) {\n          endIndex = i - 1;\n          break;\n        }\n      }\n\n      var startIndex = 0;\n\n      for (var _i = len - 1; _i >= 0; _i -= 1) {\n        var _offset = getOffset(_i);\n\n        if (_offset < transformSize) {\n          startIndex = _i + 1;\n          break;\n        }\n      }\n\n      var startHiddenTabs = tabs.slice(0, startIndex);\n      var endHiddenTabs = tabs.slice(endIndex + 1);\n      this.hiddenItems = [].concat(_toConsumableArray(startHiddenTabs), _toConsumableArray(endHiddenTabs));\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"getLayoutDirection\",\n    value: function getLayoutDirection() {\n      return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n  }, {\n    key: \"setTabFocus\",\n    value: function setTabFocus(_tabIndex) {}\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var position = changes.position; // The first will be aligning in ngAfterViewInit\n\n      if (position && !position.isFirstChange()) {\n        this.alignInkBarToSelectedTab();\n        this.lockAnimation();\n        this.updateScrollListPosition();\n      }\n    }\n  }]);\n\n  return NzTabNavBarComponent;\n}();\n\nNzTabNavBarComponent.ɵfac = function NzTabNavBarComponent_Factory(t) {\n  return new (t || NzTabNavBarComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$2.ViewportRuler), i0.ɵɵdirectiveInject(i2$1.NzResizeObserver), i0.ɵɵdirectiveInject(i3.Directionality, 8));\n};\n\nNzTabNavBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTabNavBarComponent,\n  selectors: [[\"nz-tabs-nav\"]],\n  contentQueries: function NzTabNavBarComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzTabNavItemDirective, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  viewQuery: function NzTabNavBarComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c2, 7);\n      i0.ɵɵviewQuery(_c3, 7);\n      i0.ɵɵviewQuery(NzTabNavOperationComponent, 7);\n      i0.ɵɵviewQuery(NzTabAddButtonComponent, 5);\n      i0.ɵɵviewQuery(NzTabsInkBarDirective, 7);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.navWarpRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.navListRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.operationRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addBtnRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inkBar = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"tablist\", 1, \"ant-tabs-nav\"],\n  hostBindings: function NzTabNavBarComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function NzTabNavBarComponent_keydown_HostBindingHandler($event) {\n        return ctx.handleKeydown($event);\n      });\n    }\n  },\n  inputs: {\n    position: \"position\",\n    addable: \"addable\",\n    hideBar: \"hideBar\",\n    addIcon: \"addIcon\",\n    inkBarAnimated: \"inkBarAnimated\",\n    extraTemplate: \"extraTemplate\",\n    selectedIndex: \"selectedIndex\"\n  },\n  outputs: {\n    indexFocused: \"indexFocused\",\n    selectFocusedIndex: \"selectFocusedIndex\",\n    addClicked: \"addClicked\",\n    tabScroll: \"tabScroll\"\n  },\n  exportAs: [\"nzTabsNav\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c4,\n  decls: 9,\n  vars: 16,\n  consts: [[1, \"ant-tabs-nav-wrap\"], [\"navWarp\", \"\"], [\"nzTabScrollList\", \"\", 1, \"ant-tabs-nav-list\", 3, \"offsetChange\", \"tabScroll\"], [\"navList\", \"\"], [\"nz-tab-add-button\", \"\", 3, \"addIcon\", \"click\", 4, \"ngIf\"], [\"nz-tabs-ink-bar\", \"\", 3, \"hidden\", \"position\", \"animated\"], [3, \"addIcon\", \"addable\", \"items\", \"addClicked\", \"selected\"], [\"class\", \"ant-tabs-extra-content\", 4, \"ngIf\"], [\"nz-tab-add-button\", \"\", 3, \"addIcon\", \"click\"], [1, \"ant-tabs-extra-content\"], [3, \"ngTemplateOutlet\"]],\n  template: function NzTabNavBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2, 3);\n      i0.ɵɵlistener(\"offsetChange\", function NzTabNavBarComponent_Template_div_offsetChange_2_listener($event) {\n        return ctx.onOffsetChange($event);\n      })(\"tabScroll\", function NzTabNavBarComponent_Template_div_tabScroll_2_listener($event) {\n        return ctx.tabScroll.emit($event);\n      });\n      i0.ɵɵprojection(4);\n      i0.ɵɵtemplate(5, NzTabNavBarComponent_button_5_Template, 1, 1, \"button\", 4);\n      i0.ɵɵelement(6, \"div\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"nz-tab-nav-operation\", 6);\n      i0.ɵɵlistener(\"addClicked\", function NzTabNavBarComponent_Template_nz_tab_nav_operation_addClicked_7_listener() {\n        return ctx.addClicked.emit();\n      })(\"selected\", function NzTabNavBarComponent_Template_nz_tab_nav_operation_selected_7_listener($event) {\n        return ctx.onSelectedFromMenu($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, NzTabNavBarComponent_div_8_Template, 2, 1, \"div\", 7);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-tabs-nav-wrap-ping-left\", ctx.pingLeft)(\"ant-tabs-nav-wrap-ping-right\", ctx.pingRight)(\"ant-tabs-nav-wrap-ping-top\", ctx.pingTop)(\"ant-tabs-nav-wrap-ping-bottom\", ctx.pingBottom);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAddButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", ctx.hideBar)(\"position\", ctx.position)(\"animated\", ctx.inkBarAnimated);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"addIcon\", ctx.addIcon)(\"addable\", ctx.addable)(\"items\", ctx.hiddenItems);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.extraTemplate);\n    }\n  },\n  directives: [NzTabAddButtonComponent, NzTabNavOperationComponent, NzTabScrollListDirective, i7.NgIf, NzTabsInkBarDirective, i7.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabNavBarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tabs-nav',\n      exportAs: 'nzTabsNav',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div\\n      class=\\\"ant-tabs-nav-wrap\\\"\\n      [class.ant-tabs-nav-wrap-ping-left]=\\\"pingLeft\\\"\\n      [class.ant-tabs-nav-wrap-ping-right]=\\\"pingRight\\\"\\n      [class.ant-tabs-nav-wrap-ping-top]=\\\"pingTop\\\"\\n      [class.ant-tabs-nav-wrap-ping-bottom]=\\\"pingBottom\\\"\\n      #navWarp\\n    >\\n      <div\\n        class=\\\"ant-tabs-nav-list\\\"\\n        #navList\\n        nzTabScrollList\\n        (offsetChange)=\\\"onOffsetChange($event)\\\"\\n        (tabScroll)=\\\"tabScroll.emit($event)\\\"\\n      >\\n        <ng-content></ng-content>\\n        <button *ngIf=\\\"showAddButton\\\" nz-tab-add-button [addIcon]=\\\"addIcon\\\" (click)=\\\"addClicked.emit()\\\"></button>\\n        <div nz-tabs-ink-bar [hidden]=\\\"hideBar\\\" [position]=\\\"position\\\" [animated]=\\\"inkBarAnimated\\\"></div>\\n      </div>\\n    </div>\\n    <nz-tab-nav-operation\\n      (addClicked)=\\\"addClicked.emit()\\\"\\n      (selected)=\\\"onSelectedFromMenu($event)\\\"\\n      [addIcon]=\\\"addIcon\\\"\\n      [addable]=\\\"addable\\\"\\n      [items]=\\\"hiddenItems\\\"\\n    ></nz-tab-nav-operation>\\n    <div class=\\\"ant-tabs-extra-content\\\" *ngIf=\\\"extraTemplate\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"extraTemplate\\\"></ng-template>\\n    </div>\\n  \",\n      host: {\n        role: 'tablist',\n        class: 'ant-tabs-nav',\n        '(keydown)': 'handleKeydown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1$2.ViewportRuler\n    }, {\n      type: i2$1.NzResizeObserver\n    }, {\n      type: i3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    indexFocused: [{\n      type: Output\n    }],\n    selectFocusedIndex: [{\n      type: Output\n    }],\n    addClicked: [{\n      type: Output\n    }],\n    tabScroll: [{\n      type: Output\n    }],\n    position: [{\n      type: Input\n    }],\n    addable: [{\n      type: Input\n    }],\n    hideBar: [{\n      type: Input\n    }],\n    addIcon: [{\n      type: Input\n    }],\n    inkBarAnimated: [{\n      type: Input\n    }],\n    extraTemplate: [{\n      type: Input\n    }],\n    selectedIndex: [{\n      type: Input\n    }],\n    navWarpRef: [{\n      type: ViewChild,\n      args: ['navWarp', {\n        static: true\n      }]\n    }],\n    navListRef: [{\n      type: ViewChild,\n      args: ['navList', {\n        static: true\n      }]\n    }],\n    operationRef: [{\n      type: ViewChild,\n      args: [NzTabNavOperationComponent, {\n        static: true\n      }]\n    }],\n    addBtnRef: [{\n      type: ViewChild,\n      args: [NzTabAddButtonComponent, {\n        static: false\n      }]\n    }],\n    inkBar: [{\n      type: ViewChild,\n      args: [NzTabsInkBarDirective, {\n        static: true\n      }]\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [NzTabNavItemDirective, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTabBodyComponent = /*#__PURE__*/_createClass(function NzTabBodyComponent() {\n  _classCallCheck(this, NzTabBodyComponent);\n\n  this.content = null;\n  this.active = false;\n  this.tabPaneAnimated = true;\n  this.forceRender = false;\n});\n\nNzTabBodyComponent.ɵfac = function NzTabBodyComponent_Factory(t) {\n  return new (t || NzTabBodyComponent)();\n};\n\nNzTabBodyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTabBodyComponent,\n  selectors: [[\"\", \"nz-tab-body\", \"\"]],\n  hostAttrs: [1, \"ant-tabs-tabpane\"],\n  hostVars: 12,\n  hostBindings: function NzTabBodyComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.active ? 0 : -1)(\"aria-hidden\", !ctx.active);\n      i0.ɵɵstyleProp(\"visibility\", ctx.tabPaneAnimated ? ctx.active ? null : \"hidden\" : null)(\"height\", ctx.tabPaneAnimated ? ctx.active ? null : 0 : null)(\"overflow-y\", ctx.tabPaneAnimated ? ctx.active ? null : \"none\" : null)(\"display\", !ctx.tabPaneAnimated ? ctx.active ? null : \"none\" : null);\n      i0.ɵɵclassProp(\"ant-tabs-tabpane-active\", ctx.active);\n    }\n  },\n  inputs: {\n    content: \"content\",\n    active: \"active\",\n    tabPaneAnimated: \"tabPaneAnimated\",\n    forceRender: \"forceRender\"\n  },\n  exportAs: [\"nzTabBody\"],\n  attrs: _c5,\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function NzTabBodyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzTabBodyComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.active || ctx.forceRender);\n    }\n  },\n  directives: [i7.NgIf, i7.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabBodyComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-tab-body]',\n      exportAs: 'nzTabBody',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <ng-container *ngIf=\\\"active || forceRender\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"content\\\"></ng-template>\\n    </ng-container>\\n  \",\n      host: {\n        class: 'ant-tabs-tabpane',\n        '[class.ant-tabs-tabpane-active]': 'active',\n        '[attr.tabindex]': 'active ? 0 : -1',\n        '[attr.aria-hidden]': '!active',\n        '[style.visibility]': 'tabPaneAnimated ? active ? null : \"hidden\" : null',\n        '[style.height]': 'tabPaneAnimated ? active ? null : 0 : null',\n        '[style.overflow-y]': 'tabPaneAnimated ? active ? null : \"none\" : null',\n        '[style.display]': '!tabPaneAnimated ? active ? null : \"none\" : null'\n      }\n    }]\n  }], null, {\n    content: [{\n      type: Input\n    }],\n    active: [{\n      type: Input\n    }],\n    tabPaneAnimated: [{\n      type: Input\n    }],\n    forceRender: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTabCloseButtonComponent = /*#__PURE__*/_createClass(function NzTabCloseButtonComponent() {\n  _classCallCheck(this, NzTabCloseButtonComponent);\n\n  this.closeIcon = 'close';\n});\n\nNzTabCloseButtonComponent.ɵfac = function NzTabCloseButtonComponent_Factory(t) {\n  return new (t || NzTabCloseButtonComponent)();\n};\n\nNzTabCloseButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTabCloseButtonComponent,\n  selectors: [[\"nz-tab-close-button\"], [\"button\", \"nz-tab-close-button\", \"\"]],\n  hostAttrs: [\"aria-label\", \"Close tab\", \"type\", \"button\", 1, \"ant-tabs-tab-remove\"],\n  inputs: {\n    closeIcon: \"closeIcon\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", \"nzTheme\", \"outline\", 3, \"nzType\"]],\n  template: function NzTabCloseButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzTabCloseButtonComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.closeIcon);\n    }\n  },\n  directives: [i1.NzStringTemplateOutletDirective, i2.NzIconDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabCloseButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tab-close-button, button[nz-tab-close-button]',\n      template: \"\\n    <ng-container *nzStringTemplateOutlet=\\\"closeIcon; let icon\\\">\\n      <i nz-icon [nzType]=\\\"icon\\\" nzTheme=\\\"outline\\\"></i>\\n    </ng-container>\\n  \",\n      host: {\n        class: 'ant-tabs-tab-remove',\n        'aria-label': 'Close tab',\n        type: 'button'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    closeIcon: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Fix https://github.com/angular/angular/issues/8563\n */\n\n\nvar NzTabLinkTemplateDirective = /*#__PURE__*/_createClass(function NzTabLinkTemplateDirective(templateRef) {\n  _classCallCheck(this, NzTabLinkTemplateDirective);\n\n  this.templateRef = templateRef;\n});\n\nNzTabLinkTemplateDirective.ɵfac = function NzTabLinkTemplateDirective_Factory(t) {\n  return new (t || NzTabLinkTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef, 1));\n};\n\nNzTabLinkTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzTabLinkTemplateDirective,\n  selectors: [[\"ng-template\", \"nzTabLink\", \"\"]],\n  exportAs: [\"nzTabLinkTemplate\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabLinkTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[nzTabLink]',\n      exportAs: 'nzTabLinkTemplate'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef,\n      decorators: [{\n        type: Host\n      }]\n    }];\n  }, null);\n})();\n/**\n * This component is for catching `routerLink` directive.\n */\n\n\nvar NzTabLinkDirective = /*#__PURE__*/_createClass(function NzTabLinkDirective(elementRef, routerLink, routerLinkWithHref) {\n  _classCallCheck(this, NzTabLinkDirective);\n\n  this.elementRef = elementRef;\n  this.routerLink = routerLink;\n  this.routerLinkWithHref = routerLinkWithHref;\n});\n\nNzTabLinkDirective.ɵfac = function NzTabLinkDirective_Factory(t) {\n  return new (t || NzTabLinkDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$3.RouterLink, 10), i0.ɵɵdirectiveInject(i1$3.RouterLinkWithHref, 10));\n};\n\nNzTabLinkDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzTabLinkDirective,\n  selectors: [[\"a\", \"nz-tab-link\", \"\"]],\n  exportAs: [\"nzTabLink\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabLinkDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'a[nz-tab-link]',\n      exportAs: 'nzTabLink'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1$3.RouterLink,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: i1$3.RouterLinkWithHref,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n\n\nvar NzTabDirective = /*#__PURE__*/_createClass(function NzTabDirective() {\n  _classCallCheck(this, NzTabDirective);\n});\n\nNzTabDirective.ɵfac = function NzTabDirective_Factory(t) {\n  return new (t || NzTabDirective)();\n};\n\nNzTabDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzTabDirective,\n  selectors: [[\"\", \"nz-tab\", \"\"]],\n  exportAs: [\"nzTab\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-tab]',\n      exportAs: 'nzTab'\n    }]\n  }], null, null);\n})();\n/**\n * Used to provide a tab set to a tab without causing a circular dependency.\n */\n\n\nvar NZ_TAB_SET = new InjectionToken('NZ_TAB_SET');\n\nvar NzTabComponent = /*#__PURE__*/function () {\n  function NzTabComponent(closestTabSet) {\n    _classCallCheck(this, NzTabComponent);\n\n    this.closestTabSet = closestTabSet;\n    this.nzTitle = '';\n    this.nzClosable = false;\n    this.nzCloseIcon = 'close';\n    this.nzDisabled = false;\n    this.nzForceRender = false;\n    this.nzSelect = new EventEmitter();\n    this.nzDeselect = new EventEmitter();\n    this.nzClick = new EventEmitter();\n    this.nzContextmenu = new EventEmitter();\n    this.template = null;\n    this.isActive = false;\n    this.position = null;\n    this.origin = null;\n    this.stateChanges = new Subject();\n  }\n\n  _createClass(NzTabComponent, [{\n    key: \"content\",\n    get: function get() {\n      return this.template || this.contentTemplate;\n    }\n  }, {\n    key: \"label\",\n    get: function get() {\n      var _a;\n\n      return this.nzTitle || ((_a = this.nzTabLinkTemplateDirective) === null || _a === void 0 ? void 0 : _a.templateRef);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzTitle = changes.nzTitle,\n          nzDisabled = changes.nzDisabled,\n          nzForceRender = changes.nzForceRender;\n\n      if (nzTitle || nzDisabled || nzForceRender) {\n        this.stateChanges.next();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.stateChanges.complete();\n    }\n  }]);\n\n  return NzTabComponent;\n}();\n\nNzTabComponent.ɵfac = function NzTabComponent_Factory(t) {\n  return new (t || NzTabComponent)(i0.ɵɵdirectiveInject(NZ_TAB_SET));\n};\n\nNzTabComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTabComponent,\n  selectors: [[\"nz-tab\"]],\n  contentQueries: function NzTabComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzTabLinkTemplateDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, NzTabDirective, 5, TemplateRef);\n      i0.ɵɵcontentQuery(dirIndex, NzTabLinkDirective, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzTabLinkTemplateDirective = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.linkDirective = _t.first);\n    }\n  },\n  viewQuery: function NzTabComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c6, 7);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    }\n  },\n  inputs: {\n    nzTitle: \"nzTitle\",\n    nzClosable: \"nzClosable\",\n    nzCloseIcon: \"nzCloseIcon\",\n    nzDisabled: \"nzDisabled\",\n    nzForceRender: \"nzForceRender\"\n  },\n  outputs: {\n    nzSelect: \"nzSelect\",\n    nzDeselect: \"nzDeselect\",\n    nzClick: \"nzClick\",\n    nzContextmenu: \"nzContextmenu\"\n  },\n  exportAs: [\"nzTab\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c8,\n  decls: 4,\n  vars: 0,\n  consts: [[\"tabLinkTemplate\", \"\"], [\"contentTemplate\", \"\"]],\n  template: function NzTabComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c7);\n      i0.ɵɵtemplate(0, NzTabComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, NzTabComponent_ng_template_2_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzTabComponent.prototype, \"nzClosable\", void 0);\n\n__decorate([InputBoolean()], NzTabComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean()], NzTabComponent.prototype, \"nzForceRender\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tab',\n      exportAs: 'nzTab',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <ng-template #tabLinkTemplate>\\n      <ng-content select=\\\"[nz-tab-link]\\\"></ng-content>\\n    </ng-template>\\n    <ng-template #contentTemplate><ng-content></ng-content></ng-template>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NZ_TAB_SET]\n      }]\n    }];\n  }, {\n    nzTitle: [{\n      type: Input\n    }],\n    nzClosable: [{\n      type: Input\n    }],\n    nzCloseIcon: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzForceRender: [{\n      type: Input\n    }],\n    nzSelect: [{\n      type: Output\n    }],\n    nzDeselect: [{\n      type: Output\n    }],\n    nzClick: [{\n      type: Output\n    }],\n    nzContextmenu: [{\n      type: Output\n    }],\n    nzTabLinkTemplateDirective: [{\n      type: ContentChild,\n      args: [NzTabLinkTemplateDirective, {\n        static: false\n      }]\n    }],\n    template: [{\n      type: ContentChild,\n      args: [NzTabDirective, {\n        static: false,\n        read: TemplateRef\n      }]\n    }],\n    linkDirective: [{\n      type: ContentChild,\n      args: [NzTabLinkDirective, {\n        static: false\n      }]\n    }],\n    contentTemplate: [{\n      type: ViewChild,\n      args: ['contentTemplate', {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTabChangeEvent = /*#__PURE__*/_createClass(function NzTabChangeEvent() {\n  _classCallCheck(this, NzTabChangeEvent);\n});\n\nvar NZ_CONFIG_MODULE_NAME = 'tabs';\nvar nextId = 0;\n\nvar NzTabSetComponent = /*#__PURE__*/function () {\n  function NzTabSetComponent(nzConfigService, ngZone, cdr, directionality, router) {\n    _classCallCheck(this, NzTabSetComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.ngZone = ngZone;\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this.router = router;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzTabPosition = 'top';\n    this.nzCanDeactivate = null;\n    this.nzAddIcon = 'plus';\n    this.nzTabBarStyle = null;\n    this.nzType = 'line';\n    this.nzSize = 'default';\n    this.nzAnimated = true;\n    this.nzTabBarGutter = undefined;\n    this.nzHideAdd = false;\n    this.nzCentered = false;\n    this.nzHideAll = false;\n    this.nzLinkRouter = false;\n    this.nzLinkExact = true;\n    this.nzSelectChange = new EventEmitter(true);\n    this.nzSelectedIndexChange = new EventEmitter();\n    this.nzTabListScroll = new EventEmitter();\n    this.nzClose = new EventEmitter();\n    this.nzAdd = new EventEmitter(); // Pick up only direct descendants under ivy rendering engine\n    // We filter out only the tabs that belong to this tab set in `tabs`.\n\n    this.allTabs = new QueryList(); // All the direct tabs for this tab set\n\n    this.tabs = new QueryList();\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.indexToSelect = 0;\n    this.selectedIndex = null;\n    this.tabLabelSubscription = Subscription.EMPTY;\n    this.tabsSubscription = Subscription.EMPTY;\n    this.canDeactivateSubscription = Subscription.EMPTY;\n    this.tabSetId = nextId++;\n  }\n\n  _createClass(NzTabSetComponent, [{\n    key: \"nzSelectedIndex\",\n    get: function get() {\n      return this.selectedIndex;\n    },\n    set: function set(value) {\n      this.indexToSelect = coerceNumberProperty(value, null);\n    }\n  }, {\n    key: \"position\",\n    get: function get() {\n      return ['top', 'bottom'].indexOf(this.nzTabPosition) === -1 ? 'vertical' : 'horizontal';\n    }\n  }, {\n    key: \"addable\",\n    get: function get() {\n      return this.nzType === 'editable-card' && !this.nzHideAdd;\n    }\n  }, {\n    key: \"closable\",\n    get: function get() {\n      return this.nzType === 'editable-card';\n    }\n  }, {\n    key: \"line\",\n    get: function get() {\n      return this.nzType === 'line';\n    }\n  }, {\n    key: \"inkBarAnimated\",\n    get: function get() {\n      return this.line && (typeof this.nzAnimated === 'boolean' ? this.nzAnimated : this.nzAnimated.inkBar);\n    }\n  }, {\n    key: \"tabPaneAnimated\",\n    get: function get() {\n      return this.position === 'horizontal' && this.line && (typeof this.nzAnimated === 'boolean' ? this.nzAnimated : this.nzAnimated.tabPane);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this10 = this;\n\n      var _a;\n\n      this.dir = this.directionality.value;\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this10.dir = direction;\n\n        _this10.cdr.detectChanges();\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      this.tabs.destroy();\n      this.tabLabelSubscription.unsubscribe();\n      this.tabsSubscription.unsubscribe();\n      this.canDeactivateSubscription.unsubscribe();\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this11 = this;\n\n      this.ngZone.runOutsideAngular(function () {\n        Promise.resolve().then(function () {\n          return _this11.setUpRouter();\n        });\n      });\n      this.subscribeToTabLabels();\n      this.subscribeToAllTabChanges(); // Subscribe to changes in the amount of tabs, in order to be\n      // able to re-render the content as new tabs are added or removed.\n\n      this.tabsSubscription = this.tabs.changes.subscribe(function () {\n        var indexToSelect = _this11.clampTabIndex(_this11.indexToSelect); // Maintain the previously-selected tab if a new tab is added or removed and there is no\n        // explicit change that selects a different tab.\n\n\n        if (indexToSelect === _this11.selectedIndex) {\n          var tabs = _this11.tabs.toArray();\n\n          for (var i = 0; i < tabs.length; i++) {\n            if (tabs[i].isActive) {\n              // Assign both to the `indexToSelect` and `selectedIndex` so we don't fire a changed\n              // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n              // adding a tab within the `nzSelectedIndexChange` event.\n              _this11.indexToSelect = _this11.selectedIndex = i;\n              break;\n            }\n          }\n        }\n\n        _this11.subscribeToTabLabels();\n\n        _this11.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      var _this12 = this;\n\n      // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n      // the amount of tabs changes before the actual change detection runs.\n      var indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect); // If there is a change in selected index, emit a change event. Should not trigger if\n      // the selected index has not yet been initialized.\n\n      if (this.selectedIndex !== indexToSelect) {\n        var isFirstRun = this.selectedIndex == null;\n\n        if (!isFirstRun) {\n          this.nzSelectChange.emit(this.createChangeEvent(indexToSelect));\n        } // Changing these values after change detection has run\n        // since the checked content may contain references to them.\n\n\n        Promise.resolve().then(function () {\n          _this12.tabs.forEach(function (tab, index) {\n            return tab.isActive = index === indexToSelect;\n          });\n\n          if (!isFirstRun) {\n            _this12.nzSelectedIndexChange.emit(indexToSelect);\n          }\n        });\n      } // Setup the position for each tab and optionally setup an origin on the next selected tab.\n\n\n      this.tabs.forEach(function (tab, index) {\n        tab.position = index - indexToSelect; // If there is already a selected tab, then set up an origin for the next selected tab\n        // if it doesn't have one already.\n\n        if (_this12.selectedIndex != null && tab.position === 0 && !tab.origin) {\n          tab.origin = indexToSelect - _this12.selectedIndex;\n        }\n      });\n\n      if (this.selectedIndex !== indexToSelect) {\n        this.selectedIndex = indexToSelect;\n        this.cdr.markForCheck();\n      }\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(index, e) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.nzClose.emit({\n        index: index\n      });\n    }\n  }, {\n    key: \"onAdd\",\n    value: function onAdd() {\n      this.nzAdd.emit();\n    }\n  }, {\n    key: \"clampTabIndex\",\n    value: function clampTabIndex(index) {\n      return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n  }, {\n    key: \"createChangeEvent\",\n    value: function createChangeEvent(index) {\n      var event = new NzTabChangeEvent();\n      event.index = index;\n\n      if (this.tabs && this.tabs.length) {\n        event.tab = this.tabs.toArray()[index];\n        this.tabs.forEach(function (tab, i) {\n          if (i !== index) {\n            tab.nzDeselect.emit();\n          }\n        });\n        event.tab.nzSelect.emit();\n      }\n\n      return event;\n    }\n  }, {\n    key: \"subscribeToTabLabels\",\n    value: function subscribeToTabLabels() {\n      var _this13 = this;\n\n      if (this.tabLabelSubscription) {\n        this.tabLabelSubscription.unsubscribe();\n      }\n\n      this.tabLabelSubscription = merge.apply(void 0, _toConsumableArray(this.tabs.map(function (tab) {\n        return tab.stateChanges;\n      }))).subscribe(function () {\n        return _this13.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"subscribeToAllTabChanges\",\n    value: function subscribeToAllTabChanges() {\n      var _this14 = this;\n\n      this.allTabs.changes.pipe(startWith(this.allTabs)).subscribe(function (tabs) {\n        _this14.tabs.reset(tabs.filter(function (tab) {\n          return tab.closestTabSet === _this14;\n        }));\n\n        _this14.tabs.notifyOnChanges();\n      });\n    }\n  }, {\n    key: \"canDeactivateFun\",\n    value: function canDeactivateFun(pre, next) {\n      if (typeof this.nzCanDeactivate === 'function') {\n        var observable = wrapIntoObservable(this.nzCanDeactivate(pre, next));\n        return observable.pipe(first(), takeUntil(this.destroy$));\n      } else {\n        return of(true);\n      }\n    }\n  }, {\n    key: \"clickNavItem\",\n    value: function clickNavItem(tab, index, e) {\n      if (!tab.nzDisabled) {\n        // ignore nzCanDeactivate\n        tab.nzClick.emit();\n\n        if (!this.isRouterLinkClickEvent(index, e)) {\n          this.setSelectedIndex(index);\n        }\n      }\n    }\n  }, {\n    key: \"isRouterLinkClickEvent\",\n    value: function isRouterLinkClickEvent(index, event) {\n      var _a, _b;\n\n      var target = event.target;\n\n      if (this.nzLinkRouter) {\n        return !!((_b = (_a = this.tabs.toArray()[index]) === null || _a === void 0 ? void 0 : _a.linkDirective) === null || _b === void 0 ? void 0 : _b.elementRef.nativeElement.contains(target));\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"contextmenuNavItem\",\n    value: function contextmenuNavItem(tab, e) {\n      if (!tab.nzDisabled) {\n        // ignore nzCanDeactivate\n        tab.nzContextmenu.emit(e);\n      }\n    }\n  }, {\n    key: \"setSelectedIndex\",\n    value: function setSelectedIndex(index) {\n      var _this15 = this;\n\n      this.canDeactivateSubscription.unsubscribe();\n      this.canDeactivateSubscription = this.canDeactivateFun(this.selectedIndex, index).subscribe(function (can) {\n        if (can) {\n          _this15.nzSelectedIndex = index;\n          _this15.tabNavBarRef.focusIndex = index;\n\n          _this15.cdr.markForCheck();\n        }\n      });\n    }\n  }, {\n    key: \"getTabIndex\",\n    value: function getTabIndex(tab, index) {\n      if (tab.nzDisabled) {\n        return null;\n      }\n\n      return this.selectedIndex === index ? 0 : -1;\n    }\n  }, {\n    key: \"getTabContentId\",\n    value: function getTabContentId(i) {\n      return \"nz-tabs-\".concat(this.tabSetId, \"-tab-\").concat(i);\n    }\n  }, {\n    key: \"setUpRouter\",\n    value: function setUpRouter() {\n      var _this16 = this;\n\n      if (this.nzLinkRouter) {\n        if (!this.router) {\n          throw new Error(\"\".concat(PREFIX, \" you should import 'RouterModule' if you want to use 'nzLinkRouter'!\"));\n        }\n\n        this.router.events.pipe(takeUntil(this.destroy$), filter(function (e) {\n          return e instanceof NavigationEnd;\n        }), startWith(true), delay(0)).subscribe(function () {\n          _this16.updateRouterActive();\n\n          _this16.cdr.markForCheck();\n        });\n      }\n    }\n  }, {\n    key: \"updateRouterActive\",\n    value: function updateRouterActive() {\n      if (this.router.navigated) {\n        var index = this.findShouldActiveTabIndex();\n\n        if (index !== this.selectedIndex) {\n          this.setSelectedIndex(index);\n        }\n\n        this.nzHideAll = index === -1;\n      }\n    }\n  }, {\n    key: \"findShouldActiveTabIndex\",\n    value: function findShouldActiveTabIndex() {\n      var tabs = this.tabs.toArray();\n      var isActive = this.isLinkActive(this.router);\n      return tabs.findIndex(function (tab) {\n        var c = tab.linkDirective;\n        return c ? isActive(c.routerLink) || isActive(c.routerLinkWithHref) : false;\n      });\n    }\n  }, {\n    key: \"isLinkActive\",\n    value: function isLinkActive(router) {\n      var _this17 = this;\n\n      return function (link) {\n        return link ? router.isActive(link.urlTree || '', {\n          paths: _this17.nzLinkExact ? 'exact' : 'subset',\n          queryParams: _this17.nzLinkExact ? 'exact' : 'subset',\n          fragment: 'ignored',\n          matrixParams: 'ignored'\n        }) : false;\n      };\n    }\n  }, {\n    key: \"getTabContentMarginValue\",\n    value: function getTabContentMarginValue() {\n      return -(this.nzSelectedIndex || 0) * 100;\n    }\n  }, {\n    key: \"getTabContentMarginLeft\",\n    value: function getTabContentMarginLeft() {\n      if (this.tabPaneAnimated) {\n        if (this.dir !== 'rtl') {\n          return \"\".concat(this.getTabContentMarginValue(), \"%\");\n        }\n      }\n\n      return '';\n    }\n  }, {\n    key: \"getTabContentMarginRight\",\n    value: function getTabContentMarginRight() {\n      if (this.tabPaneAnimated) {\n        if (this.dir === 'rtl') {\n          return \"\".concat(this.getTabContentMarginValue(), \"%\");\n        }\n      }\n\n      return '';\n    }\n  }]);\n\n  return NzTabSetComponent;\n}();\n\nNzTabSetComponent.ɵfac = function NzTabSetComponent_Factory(t) {\n  return new (t || NzTabSetComponent)(i0.ɵɵdirectiveInject(i1$4.NzConfigService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.Directionality, 8), i0.ɵɵdirectiveInject(i1$3.Router, 8));\n};\n\nNzTabSetComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTabSetComponent,\n  selectors: [[\"nz-tabset\"]],\n  contentQueries: function NzTabSetComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzTabComponent, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.allTabs = _t);\n    }\n  },\n  viewQuery: function NzTabSetComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(NzTabNavBarComponent, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tabNavBarRef = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-tabs\"],\n  hostVars: 24,\n  hostBindings: function NzTabSetComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-tabs-card\", ctx.nzType === \"card\" || ctx.nzType === \"editable-card\")(\"ant-tabs-editable\", ctx.nzType === \"editable-card\")(\"ant-tabs-editable-card\", ctx.nzType === \"editable-card\")(\"ant-tabs-centered\", ctx.nzCentered)(\"ant-tabs-rtl\", ctx.dir === \"rtl\")(\"ant-tabs-top\", ctx.nzTabPosition === \"top\")(\"ant-tabs-bottom\", ctx.nzTabPosition === \"bottom\")(\"ant-tabs-left\", ctx.nzTabPosition === \"left\")(\"ant-tabs-right\", ctx.nzTabPosition === \"right\")(\"ant-tabs-default\", ctx.nzSize === \"default\")(\"ant-tabs-small\", ctx.nzSize === \"small\")(\"ant-tabs-large\", ctx.nzSize === \"large\");\n    }\n  },\n  inputs: {\n    nzSelectedIndex: \"nzSelectedIndex\",\n    nzTabPosition: \"nzTabPosition\",\n    nzTabBarExtraContent: \"nzTabBarExtraContent\",\n    nzCanDeactivate: \"nzCanDeactivate\",\n    nzAddIcon: \"nzAddIcon\",\n    nzTabBarStyle: \"nzTabBarStyle\",\n    nzType: \"nzType\",\n    nzSize: \"nzSize\",\n    nzAnimated: \"nzAnimated\",\n    nzTabBarGutter: \"nzTabBarGutter\",\n    nzHideAdd: \"nzHideAdd\",\n    nzCentered: \"nzCentered\",\n    nzHideAll: \"nzHideAll\",\n    nzLinkRouter: \"nzLinkRouter\",\n    nzLinkExact: \"nzLinkExact\"\n  },\n  outputs: {\n    nzSelectChange: \"nzSelectChange\",\n    nzSelectedIndexChange: \"nzSelectedIndexChange\",\n    nzTabListScroll: \"nzTabListScroll\",\n    nzClose: \"nzClose\",\n    nzAdd: \"nzAdd\"\n  },\n  exportAs: [\"nzTabset\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NZ_TAB_SET,\n    useExisting: NzTabSetComponent\n  }])],\n  decls: 4,\n  vars: 16,\n  consts: [[3, \"ngStyle\", \"selectedIndex\", \"inkBarAnimated\", \"addable\", \"addIcon\", \"hideBar\", \"position\", \"extraTemplate\", \"tabScroll\", \"selectFocusedIndex\", \"addClicked\", 4, \"ngIf\"], [1, \"ant-tabs-content-holder\"], [1, \"ant-tabs-content\"], [\"nz-tab-body\", \"\", 3, \"active\", \"content\", \"forceRender\", \"tabPaneAnimated\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngStyle\", \"selectedIndex\", \"inkBarAnimated\", \"addable\", \"addIcon\", \"hideBar\", \"position\", \"extraTemplate\", \"tabScroll\", \"selectFocusedIndex\", \"addClicked\"], [\"class\", \"ant-tabs-tab\", 3, \"margin-right\", \"margin-bottom\", \"ant-tabs-tab-active\", \"ant-tabs-tab-disabled\", \"click\", \"contextmenu\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-tabs-tab\", 3, \"click\", \"contextmenu\"], [\"role\", \"tab\", \"nzTabNavItem\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"ant-tabs-tab-btn\", 3, \"disabled\", \"tab\", \"active\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [\"nz-tab-close-button\", \"\", 3, \"closeIcon\", \"click\", 4, \"ngIf\"], [\"nz-tab-close-button\", \"\", 3, \"closeIcon\", \"click\"], [\"nz-tab-body\", \"\", 3, \"active\", \"content\", \"forceRender\", \"tabPaneAnimated\"]],\n  template: function NzTabSetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzTabSetComponent_nz_tabs_nav_0_Template, 2, 9, \"nz-tabs-nav\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, NzTabSetComponent_div_3_Template, 1, 4, \"div\", 3);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.tabs.length || ctx.addable);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"margin-left\", ctx.getTabContentMarginLeft())(\"margin-right\", ctx.getTabContentMarginRight());\n      i0.ɵɵclassProp(\"ant-tabs-content-top\", ctx.nzTabPosition === \"top\")(\"ant-tabs-content-bottom\", ctx.nzTabPosition === \"bottom\")(\"ant-tabs-content-left\", ctx.nzTabPosition === \"left\")(\"ant-tabs-content-right\", ctx.nzTabPosition === \"right\")(\"ant-tabs-content-animated\", ctx.tabPaneAnimated);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n    }\n  },\n  directives: [NzTabNavBarComponent, NzTabCloseButtonComponent, NzTabBodyComponent, i7.NgIf, i7.NgStyle, i7.NgForOf, NzTabNavItemDirective, i9.CdkMonitorFocus, i1.NzStringTemplateOutletDirective],\n  encapsulation: 2\n});\n\n__decorate([WithConfig()], NzTabSetComponent.prototype, \"nzType\", void 0);\n\n__decorate([WithConfig()], NzTabSetComponent.prototype, \"nzSize\", void 0);\n\n__decorate([WithConfig()], NzTabSetComponent.prototype, \"nzAnimated\", void 0);\n\n__decorate([WithConfig()], NzTabSetComponent.prototype, \"nzTabBarGutter\", void 0);\n\n__decorate([InputBoolean()], NzTabSetComponent.prototype, \"nzHideAdd\", void 0);\n\n__decorate([InputBoolean()], NzTabSetComponent.prototype, \"nzCentered\", void 0);\n\n__decorate([InputBoolean()], NzTabSetComponent.prototype, \"nzHideAll\", void 0);\n\n__decorate([InputBoolean()], NzTabSetComponent.prototype, \"nzLinkRouter\", void 0);\n\n__decorate([InputBoolean()], NzTabSetComponent.prototype, \"nzLinkExact\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabSetComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tabset',\n      exportAs: 'nzTabset',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [{\n        provide: NZ_TAB_SET,\n        useExisting: NzTabSetComponent\n      }],\n      template: \"\\n    <nz-tabs-nav\\n      *ngIf=\\\"tabs.length || addable\\\"\\n      [ngStyle]=\\\"nzTabBarStyle\\\"\\n      [selectedIndex]=\\\"nzSelectedIndex || 0\\\"\\n      [inkBarAnimated]=\\\"inkBarAnimated\\\"\\n      [addable]=\\\"addable\\\"\\n      [addIcon]=\\\"nzAddIcon\\\"\\n      [hideBar]=\\\"nzHideAll\\\"\\n      [position]=\\\"position\\\"\\n      [extraTemplate]=\\\"nzTabBarExtraContent\\\"\\n      (tabScroll)=\\\"nzTabListScroll.emit($event)\\\"\\n      (selectFocusedIndex)=\\\"setSelectedIndex($event)\\\"\\n      (addClicked)=\\\"onAdd()\\\"\\n    >\\n      <div\\n        class=\\\"ant-tabs-tab\\\"\\n        [style.margin-right.px]=\\\"position === 'horizontal' ? nzTabBarGutter : null\\\"\\n        [style.margin-bottom.px]=\\\"position === 'vertical' ? nzTabBarGutter : null\\\"\\n        [class.ant-tabs-tab-active]=\\\"nzSelectedIndex === i\\\"\\n        [class.ant-tabs-tab-disabled]=\\\"tab.nzDisabled\\\"\\n        (click)=\\\"clickNavItem(tab, i, $event)\\\"\\n        (contextmenu)=\\\"contextmenuNavItem(tab, $event)\\\"\\n        *ngFor=\\\"let tab of tabs; let i = index\\\"\\n      >\\n        <div\\n          role=\\\"tab\\\"\\n          [attr.tabIndex]=\\\"getTabIndex(tab, i)\\\"\\n          [attr.aria-disabled]=\\\"tab.nzDisabled\\\"\\n          [attr.aria-selected]=\\\"nzSelectedIndex === i && !nzHideAll\\\"\\n          [attr.aria-controls]=\\\"getTabContentId(i)\\\"\\n          [disabled]=\\\"tab.nzDisabled\\\"\\n          [tab]=\\\"tab\\\"\\n          [active]=\\\"nzSelectedIndex === i\\\"\\n          class=\\\"ant-tabs-tab-btn\\\"\\n          nzTabNavItem\\n          cdkMonitorElementFocus\\n        >\\n          <ng-container *nzStringTemplateOutlet=\\\"tab.label; context: { visible: true }\\\">{{ tab.label }}</ng-container>\\n          <button\\n            nz-tab-close-button\\n            *ngIf=\\\"tab.nzClosable && closable && !tab.nzDisabled\\\"\\n            [closeIcon]=\\\"tab.nzCloseIcon\\\"\\n            (click)=\\\"onClose(i, $event)\\\"\\n          ></button>\\n        </div>\\n      </div>\\n    </nz-tabs-nav>\\n    <div class=\\\"ant-tabs-content-holder\\\">\\n      <div\\n        class=\\\"ant-tabs-content\\\"\\n        [class.ant-tabs-content-top]=\\\"nzTabPosition === 'top'\\\"\\n        [class.ant-tabs-content-bottom]=\\\"nzTabPosition === 'bottom'\\\"\\n        [class.ant-tabs-content-left]=\\\"nzTabPosition === 'left'\\\"\\n        [class.ant-tabs-content-right]=\\\"nzTabPosition === 'right'\\\"\\n        [class.ant-tabs-content-animated]=\\\"tabPaneAnimated\\\"\\n        [style.margin-left]=\\\"getTabContentMarginLeft()\\\"\\n        [style.margin-right]=\\\"getTabContentMarginRight()\\\"\\n      >\\n        <div\\n          nz-tab-body\\n          *ngFor=\\\"let tab of tabs; let i = index\\\"\\n          [active]=\\\"nzSelectedIndex === i && !nzHideAll\\\"\\n          [content]=\\\"tab.content\\\"\\n          [forceRender]=\\\"tab.nzForceRender\\\"\\n          [tabPaneAnimated]=\\\"tabPaneAnimated\\\"\\n        ></div>\\n      </div>\\n    </div>\\n  \",\n      host: {\n        class: 'ant-tabs',\n        '[class.ant-tabs-card]': \"nzType === 'card' || nzType === 'editable-card'\",\n        '[class.ant-tabs-editable]': \"nzType === 'editable-card'\",\n        '[class.ant-tabs-editable-card]': \"nzType === 'editable-card'\",\n        '[class.ant-tabs-centered]': \"nzCentered\",\n        '[class.ant-tabs-rtl]': \"dir === 'rtl'\",\n        '[class.ant-tabs-top]': \"nzTabPosition === 'top'\",\n        '[class.ant-tabs-bottom]': \"nzTabPosition === 'bottom'\",\n        '[class.ant-tabs-left]': \"nzTabPosition === 'left'\",\n        '[class.ant-tabs-right]': \"nzTabPosition === 'right'\",\n        '[class.ant-tabs-default]': \"nzSize === 'default'\",\n        '[class.ant-tabs-small]': \"nzSize === 'small'\",\n        '[class.ant-tabs-large]': \"nzSize === 'large'\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1$4.NzConfigService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i1$3.Router,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzSelectedIndex: [{\n      type: Input\n    }],\n    nzTabPosition: [{\n      type: Input\n    }],\n    nzTabBarExtraContent: [{\n      type: Input\n    }],\n    nzCanDeactivate: [{\n      type: Input\n    }],\n    nzAddIcon: [{\n      type: Input\n    }],\n    nzTabBarStyle: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzAnimated: [{\n      type: Input\n    }],\n    nzTabBarGutter: [{\n      type: Input\n    }],\n    nzHideAdd: [{\n      type: Input\n    }],\n    nzCentered: [{\n      type: Input\n    }],\n    nzHideAll: [{\n      type: Input\n    }],\n    nzLinkRouter: [{\n      type: Input\n    }],\n    nzLinkExact: [{\n      type: Input\n    }],\n    nzSelectChange: [{\n      type: Output\n    }],\n    nzSelectedIndexChange: [{\n      type: Output\n    }],\n    nzTabListScroll: [{\n      type: Output\n    }],\n    nzClose: [{\n      type: Output\n    }],\n    nzAdd: [{\n      type: Output\n    }],\n    allTabs: [{\n      type: ContentChildren,\n      args: [NzTabComponent, {\n        descendants: true\n      }]\n    }],\n    tabNavBarRef: [{\n      type: ViewChild,\n      args: [NzTabNavBarComponent, {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar DIRECTIVES = [NzTabSetComponent, NzTabComponent, NzTabNavBarComponent, NzTabNavItemDirective, NzTabsInkBarDirective, NzTabScrollListDirective, NzTabNavOperationComponent, NzTabAddButtonComponent, NzTabCloseButtonComponent, NzTabDirective, NzTabBodyComponent, NzTabLinkDirective, NzTabLinkTemplateDirective];\n\nvar NzTabsModule = /*#__PURE__*/_createClass(function NzTabsModule() {\n  _classCallCheck(this, NzTabsModule);\n});\n\nNzTabsModule.ɵfac = function NzTabsModule_Factory(t) {\n  return new (t || NzTabsModule)();\n};\n\nNzTabsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzTabsModule,\n  declarations: [NzTabSetComponent, NzTabComponent, NzTabNavBarComponent, NzTabNavItemDirective, NzTabsInkBarDirective, NzTabScrollListDirective, NzTabNavOperationComponent, NzTabAddButtonComponent, NzTabCloseButtonComponent, NzTabDirective, NzTabBodyComponent, NzTabLinkDirective, NzTabLinkTemplateDirective],\n  imports: [BidiModule, CommonModule, ObserversModule, NzIconModule, NzOutletModule, PlatformModule, A11yModule, CdkScrollableModule, NzDropDownModule],\n  exports: [NzTabSetComponent, NzTabComponent, NzTabNavBarComponent, NzTabNavItemDirective, NzTabsInkBarDirective, NzTabScrollListDirective, NzTabNavOperationComponent, NzTabAddButtonComponent, NzTabCloseButtonComponent, NzTabDirective, NzTabBodyComponent, NzTabLinkDirective, NzTabLinkTemplateDirective]\n});\nNzTabsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, ObserversModule, NzIconModule, NzOutletModule, PlatformModule, A11yModule, CdkScrollableModule, NzDropDownModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTabsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DIRECTIVES],\n      exports: [DIRECTIVES],\n      imports: [BidiModule, CommonModule, ObserversModule, NzIconModule, NzOutletModule, PlatformModule, A11yModule, CdkScrollableModule, NzDropDownModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NZ_TAB_SET, NzTabChangeEvent, NzTabComponent, NzTabDirective, NzTabLinkDirective, NzTabLinkTemplateDirective, NzTabSetComponent, NzTabsModule, NzTabAddButtonComponent as ɵNzTabAddButtonComponent, NzTabBodyComponent as ɵNzTabBodyComponent, NzTabCloseButtonComponent as ɵNzTabCloseButtonComponent, NzTabNavBarComponent as ɵNzTabNavBarComponent, NzTabNavItemDirective as ɵNzTabNavItemDirective, NzTabNavOperationComponent as ɵNzTabNavOperationComponent, NzTabScrollListDirective as ɵNzTabScrollListDirective, NzTabsInkBarDirective as ɵNzTabsInkBarDirective }; //# sourceMappingURL=ng-zorro-antd-tabs.mjs.map","map":null,"metadata":{},"sourceType":"module"}