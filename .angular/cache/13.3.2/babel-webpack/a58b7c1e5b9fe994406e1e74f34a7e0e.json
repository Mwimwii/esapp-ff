{"ast":null,"code":"import { ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { select, Store } from '@ngrx/store';\nimport * as Reducers from 'src/app/store/reducers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\n\nvar AuthGuard =\n/** @class */\nfunction () {\n  function AuthGuard(store, router) {\n    var _this = this;\n\n    this.store = store;\n    this.router = router;\n    this.store.pipe(select(Reducers.getUser)).subscribe(function (state) {\n      _this.authorized = state.authorized;\n    });\n  }\n\n  AuthGuard.prototype.canActivate = function (next, state) {\n    if (environment.authenticated) {\n      // skip guard checking on demo environment serve/build, remove it in your app\n      return true;\n    }\n\n    if (this.authorized) {\n      return true;\n    }\n\n    this.router.navigate(['auth/login'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n    return false;\n  };\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n}();\n\nexport { AuthGuard };","map":null,"metadata":{},"sourceType":"module"}