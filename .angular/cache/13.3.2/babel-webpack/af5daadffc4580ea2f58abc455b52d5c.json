{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, Optional, Input, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, ReplaySubject, timer } from 'rxjs';\nimport { startWith, distinctUntilChanged, switchMap, debounce, takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputNumber, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { ObserversModule } from '@angular/cdk/observers';\n\nfunction NzSpinComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵelement(1, \"i\", 4)(2, \"i\", 4)(3, \"i\", 4)(4, \"i\", 4);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NzSpinComponent_div_2_ng_template_2_Template(rf, ctx) {}\n\nfunction NzSpinComponent_div_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.nzTip);\n  }\n}\n\nfunction NzSpinComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵtemplate(2, NzSpinComponent_div_2_ng_template_2_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵtemplate(3, NzSpinComponent_div_2_div_3_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n\n    var _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ant-spin-rtl\", ctx_r2.dir === \"rtl\")(\"ant-spin-spinning\", ctx_r2.isLoading)(\"ant-spin-lg\", ctx_r2.nzSize === \"large\")(\"ant-spin-sm\", ctx_r2.nzSize === \"small\")(\"ant-spin-show-text\", ctx_r2.nzTip);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.nzIndicator || _r0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.nzTip);\n  }\n}\n\nfunction NzSpinComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-spin-blur\", ctx_r3.isLoading);\n  }\n}\n\nvar _c0 = [\"*\"];\nvar NZ_CONFIG_MODULE_NAME = 'spin';\n\nvar NzSpinComponent = /*#__PURE__*/function () {\n  function NzSpinComponent(nzConfigService, cdr, directionality) {\n    _classCallCheck(this, NzSpinComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzIndicator = null;\n    this.nzSize = 'default';\n    this.nzTip = null;\n    this.nzDelay = 0;\n    this.nzSimple = false;\n    this.nzSpinning = true;\n    this.destroy$ = new Subject();\n    this.spinning$ = new BehaviorSubject(this.nzSpinning);\n    this.delay$ = new ReplaySubject(1);\n    this.isLoading = false;\n    this.dir = 'ltr';\n  }\n\n  _createClass(NzSpinComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      var _a;\n\n      var loading$ = this.delay$.pipe(startWith(this.nzDelay), distinctUntilChanged(), switchMap(function (delay) {\n        if (delay === 0) {\n          return _this.spinning$;\n        }\n\n        return _this.spinning$.pipe(debounce(function (spinning) {\n          return timer(spinning ? delay : 0);\n        }));\n      }), takeUntil(this.destroy$));\n      loading$.subscribe(function (loading) {\n        _this.isLoading = loading;\n\n        _this.cdr.markForCheck();\n      });\n      this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(function () {\n        return _this.cdr.markForCheck();\n      });\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this.dir = direction;\n\n        _this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzSpinning = changes.nzSpinning,\n          nzDelay = changes.nzDelay;\n\n      if (nzSpinning) {\n        this.spinning$.next(this.nzSpinning);\n      }\n\n      if (nzDelay) {\n        this.delay$.next(this.nzDelay);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzSpinComponent;\n}();\n\nNzSpinComponent.ɵfac = function NzSpinComponent_Factory(t) {\n  return new (t || NzSpinComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Directionality, 8));\n};\n\nNzSpinComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSpinComponent,\n  selectors: [[\"nz-spin\"]],\n  hostVars: 2,\n  hostBindings: function NzSpinComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-spin-nested-loading\", !ctx.nzSimple);\n    }\n  },\n  inputs: {\n    nzIndicator: \"nzIndicator\",\n    nzSize: \"nzSize\",\n    nzTip: \"nzTip\",\n    nzDelay: \"nzDelay\",\n    nzSimple: \"nzSimple\",\n    nzSpinning: \"nzSpinning\"\n  },\n  exportAs: [\"nzSpin\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 2,\n  consts: [[\"defaultTemplate\", \"\"], [4, \"ngIf\"], [\"class\", \"ant-spin-container\", 3, \"ant-spin-blur\", 4, \"ngIf\"], [1, \"ant-spin-dot\", \"ant-spin-dot-spin\"], [1, \"ant-spin-dot-item\"], [1, \"ant-spin\"], [3, \"ngTemplateOutlet\"], [\"class\", \"ant-spin-text\", 4, \"ngIf\"], [1, \"ant-spin-text\"], [1, \"ant-spin-container\"]],\n  template: function NzSpinComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzSpinComponent_ng_template_0_Template, 5, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, NzSpinComponent_div_2_Template, 4, 12, \"div\", 1);\n      i0.ɵɵtemplate(3, NzSpinComponent_div_3_Template, 2, 2, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.nzSimple);\n    }\n  },\n  directives: [i3.NgIf, i3.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n__decorate([WithConfig()], NzSpinComponent.prototype, \"nzIndicator\", void 0);\n\n__decorate([InputNumber()], NzSpinComponent.prototype, \"nzDelay\", void 0);\n\n__decorate([InputBoolean()], NzSpinComponent.prototype, \"nzSimple\", void 0);\n\n__decorate([InputBoolean()], NzSpinComponent.prototype, \"nzSpinning\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpinComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-spin',\n      exportAs: 'nzSpin',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-template #defaultTemplate>\\n      <span class=\\\"ant-spin-dot ant-spin-dot-spin\\\">\\n        <i class=\\\"ant-spin-dot-item\\\"></i>\\n        <i class=\\\"ant-spin-dot-item\\\"></i>\\n        <i class=\\\"ant-spin-dot-item\\\"></i>\\n        <i class=\\\"ant-spin-dot-item\\\"></i>\\n      </span>\\n    </ng-template>\\n    <div *ngIf=\\\"isLoading\\\">\\n      <div\\n        class=\\\"ant-spin\\\"\\n        [class.ant-spin-rtl]=\\\"dir === 'rtl'\\\"\\n        [class.ant-spin-spinning]=\\\"isLoading\\\"\\n        [class.ant-spin-lg]=\\\"nzSize === 'large'\\\"\\n        [class.ant-spin-sm]=\\\"nzSize === 'small'\\\"\\n        [class.ant-spin-show-text]=\\\"nzTip\\\"\\n      >\\n        <ng-template [ngTemplateOutlet]=\\\"nzIndicator || defaultTemplate\\\"></ng-template>\\n        <div class=\\\"ant-spin-text\\\" *ngIf=\\\"nzTip\\\">{{ nzTip }}</div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"!nzSimple\\\" class=\\\"ant-spin-container\\\" [class.ant-spin-blur]=\\\"isLoading\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \",\n      host: {\n        '[class.ant-spin-nested-loading]': '!nzSimple'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1.NzConfigService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzIndicator: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzTip: [{\n      type: Input\n    }],\n    nzDelay: [{\n      type: Input\n    }],\n    nzSimple: [{\n      type: Input\n    }],\n    nzSpinning: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzSpinModule = /*#__PURE__*/_createClass(function NzSpinModule() {\n  _classCallCheck(this, NzSpinModule);\n});\n\nNzSpinModule.ɵfac = function NzSpinModule_Factory(t) {\n  return new (t || NzSpinModule)();\n};\n\nNzSpinModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzSpinModule,\n  declarations: [NzSpinComponent],\n  imports: [BidiModule, CommonModule, ObserversModule],\n  exports: [NzSpinComponent]\n});\nNzSpinModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, ObserversModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpinModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzSpinComponent],\n      declarations: [NzSpinComponent],\n      imports: [BidiModule, CommonModule, ObserversModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzSpinComponent, NzSpinModule }; //# sourceMappingURL=ng-zorro-antd-spin.mjs.map","map":null,"metadata":{},"sourceType":"module"}