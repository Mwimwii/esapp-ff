{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment.dev';\nimport { EnumsService } from './services/enums/enums.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./services/enums/enums.service\";\nexport let EsappRequestHandlerService = /*#__PURE__*/(() => {\n  class EsappRequestHandlerService {\n    constructor(http, standards) {\n      this.http = http;\n      this.standards = standards;\n      this.environment = environment;\n      this.auth = btoa(this.standards.standards.testUserName + ':' + this.standards.standards.testUserPassword);\n    } // Get the json data and return\n\n\n    getDataUnauthenticated(slug) {\n      const url = this.environment.apiUrl + slug;\n      const data = this.http.get(url);\n      return data;\n    } //create a post request that takes one parameter\n\n\n    postDataUnAuthenticated(slug, data) {\n      const url = this.environment.apiUrl + slug;\n      const body = JSON.stringify(data);\n      const headers = new Headers({\n        'Content-Type': 'application/json'\n      });\n      const options = {\n        headers\n      };\n      return this.http.post(url, body);\n    } // Get the json data and return\n\n\n    getDataAuthenticated(slug) {\n      const url = this.environment.apiUrl + slug;\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          Authorization: 'Basic ' + this.auth\n        })\n      };\n      const data = this.http.get(url, httpOptions);\n      return data;\n    }\n\n    getPDF(slug) {\n      const url = this.environment.apiUrl + slug;\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: 'Basic ' + this.auth,\n        responseType: 'blob'\n      });\n      return this.http.get(url, {\n        headers: headers,\n        responseType: 'blob'\n      });\n    } //create a post request that takes one parameter\n\n\n    postDataAuthenticated(slug, data) {\n      const url = this.environment.apiUrl + slug;\n      const body = JSON.stringify(data);\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          Authorization: 'Basic ' + this.auth\n        })\n      };\n      return this.http.post(url, body, httpOptions);\n    }\n\n  }\n\n  EsappRequestHandlerService.ɵfac = function EsappRequestHandlerService_Factory(t) {\n    return new (t || EsappRequestHandlerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.EnumsService));\n  };\n\n  EsappRequestHandlerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EsappRequestHandlerService,\n    factory: EsappRequestHandlerService.ɵfac,\n    providedIn: 'root'\n  });\n  return EsappRequestHandlerService;\n})();","map":null,"metadata":{},"sourceType":"module"}