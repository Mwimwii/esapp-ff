{"ast":null,"code":"import _get from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\get.js\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\nimport _inherits from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport * as i4 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, ContentChildren, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\nimport * as i3 from 'ng-zorro-antd/core/services';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar _c0 = [\"slickList\"];\nvar _c1 = [\"slickTrack\"];\n\nfunction NzCarouselComponent_ul_6_li_1_ng_template_1_Template(rf, ctx) {}\n\nvar _c2 = function _c2(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NzCarouselComponent_ul_6_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 9);\n    i0.ɵɵlistener(\"click\", function NzCarouselComponent_ul_6_li_1_Template_li_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r10);\n      var i_r7 = restoredCtx.index;\n      var ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.onLiClick(i_r7);\n    });\n    i0.ɵɵtemplate(1, NzCarouselComponent_ul_6_li_1_ng_template_1_Template, 0, 0, \"ng-template\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var i_r7 = ctx.index;\n    var ctx_r5 = i0.ɵɵnextContext(2);\n\n    var _r3 = i0.ɵɵreference(8);\n\n    i0.ɵɵclassProp(\"slick-active\", i_r7 === ctx_r5.activeIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.nzDotRender || _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c2, i_r7));\n  }\n}\n\nfunction NzCarouselComponent_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 7);\n    i0.ɵɵtemplate(1, NzCarouselComponent_ul_6_li_1_Template, 2, 6, \"li\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"slick-dots-top\", ctx_r2.nzDotPosition === \"top\")(\"slick-dots-bottom\", ctx_r2.nzDotPosition === \"bottom\")(\"slick-dots-left\", ctx_r2.nzDotPosition === \"left\")(\"slick-dots-right\", ctx_r2.nzDotPosition === \"right\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.carouselContents);\n  }\n}\n\nfunction NzCarouselComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var index_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(index_r11 + 1);\n  }\n}\n\nvar _c3 = [\"*\"];\n\nvar NzCarouselContentDirective = /*#__PURE__*/function () {\n  function NzCarouselContentDirective(elementRef, renderer) {\n    _classCallCheck(this, NzCarouselContentDirective);\n\n    this.renderer = renderer;\n    this._active = false;\n    this.el = elementRef.nativeElement;\n    this.renderer.addClass(elementRef.nativeElement, 'slick-slide');\n  }\n\n  _createClass(NzCarouselContentDirective, [{\n    key: \"isActive\",\n    get: function get() {\n      return this._active;\n    },\n    set: function set(value) {\n      this._active = value;\n\n      if (this.isActive) {\n        this.renderer.addClass(this.el, 'slick-active');\n      } else {\n        this.renderer.removeClass(this.el, 'slick-active');\n      }\n    }\n  }]);\n\n  return NzCarouselContentDirective;\n}();\n\nNzCarouselContentDirective.ɵfac = function NzCarouselContentDirective_Factory(t) {\n  return new (t || NzCarouselContentDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nNzCarouselContentDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzCarouselContentDirective,\n  selectors: [[\"\", \"nz-carousel-content\", \"\"]],\n  exportAs: [\"nzCarouselContent\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCarouselContentDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-carousel-content]',\n      exportAs: 'nzCarouselContent'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzCarouselBaseStrategy = /*#__PURE__*/function () {\n  function NzCarouselBaseStrategy(carouselComponent, cdr, renderer, platform, options) {\n    _classCallCheck(this, NzCarouselBaseStrategy);\n\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.platform = platform;\n    this.options = options;\n    this.carouselComponent = carouselComponent;\n  }\n\n  _createClass(NzCarouselBaseStrategy, [{\n    key: \"maxIndex\",\n    get: function get() {\n      return this.length - 1;\n    }\n  }, {\n    key: \"firstEl\",\n    get: function get() {\n      return this.contents[0].el;\n    }\n  }, {\n    key: \"lastEl\",\n    get: function get() {\n      return this.contents[this.maxIndex].el;\n    }\n    /**\n     * Initialize dragging sequences.\n     *\n     * @param contents\n     */\n\n  }, {\n    key: \"withCarouselContents\",\n    value: function withCarouselContents(contents) {\n      var _this = this;\n\n      var carousel = this.carouselComponent;\n      this.slickListEl = carousel.slickListEl;\n      this.slickTrackEl = carousel.slickTrackEl;\n      this.contents = (contents === null || contents === void 0 ? void 0 : contents.toArray()) || [];\n      this.length = this.contents.length;\n\n      if (this.platform.isBrowser) {\n        var rect = carousel.el.getBoundingClientRect();\n        this.unitWidth = rect.width;\n        this.unitHeight = rect.height;\n      } else {\n        // Since we cannot call getBoundingClientRect in server, we just hide all items except for the first one.\n        contents === null || contents === void 0 ? void 0 : contents.forEach(function (content, index) {\n          if (index === 0) {\n            _this.renderer.setStyle(content.el, 'width', '100%');\n          } else {\n            _this.renderer.setStyle(content.el, 'display', 'none');\n          }\n        });\n      }\n    }\n    /**\n     * When user drag the carousel component.\n     *\n     * @optional\n     */\n\n  }, {\n    key: \"dragging\",\n    value: function dragging(_vector) {}\n    /**\n     * Destroy a scroll strategy.\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {}\n  }, {\n    key: \"getFromToInBoundary\",\n    value: function getFromToInBoundary(f, t) {\n      var length = this.maxIndex + 1;\n      return {\n        from: (f + length) % length,\n        to: (t + length) % length\n      };\n    }\n  }]);\n\n  return NzCarouselBaseStrategy;\n}();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzCarouselOpacityStrategy = /*#__PURE__*/function (_NzCarouselBaseStrate) {\n  _inherits(NzCarouselOpacityStrategy, _NzCarouselBaseStrate);\n\n  var _super = _createSuper(NzCarouselOpacityStrategy);\n\n  function NzCarouselOpacityStrategy() {\n    _classCallCheck(this, NzCarouselOpacityStrategy);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NzCarouselOpacityStrategy, [{\n    key: \"withCarouselContents\",\n    value: function withCarouselContents(contents) {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(NzCarouselOpacityStrategy.prototype), \"withCarouselContents\", this).call(this, contents);\n\n      if (this.contents) {\n        this.slickTrackEl.style.width = \"\".concat(this.length * this.unitWidth, \"px\");\n        this.contents.forEach(function (content, i) {\n          _this2.renderer.setStyle(content.el, 'opacity', _this2.carouselComponent.activeIndex === i ? '1' : '0');\n\n          _this2.renderer.setStyle(content.el, 'position', 'relative');\n\n          _this2.renderer.setStyle(content.el, 'width', \"\".concat(_this2.unitWidth, \"px\"));\n\n          _this2.renderer.setStyle(content.el, 'left', \"\".concat(-_this2.unitWidth * i, \"px\"));\n\n          _this2.renderer.setStyle(content.el, 'transition', ['opacity 500ms ease 0s', 'visibility 500ms ease 0s']);\n        });\n      }\n    }\n  }, {\n    key: \"switch\",\n    value: function _switch(_f, _t) {\n      var _this3 = this;\n\n      var _this$getFromToInBoun = this.getFromToInBoundary(_f, _t),\n          t = _this$getFromToInBoun.to;\n\n      var complete$ = new Subject();\n      this.contents.forEach(function (content, i) {\n        _this3.renderer.setStyle(content.el, 'opacity', t === i ? '1' : '0');\n      });\n      setTimeout(function () {\n        complete$.next();\n        complete$.complete();\n      }, this.carouselComponent.nzTransitionSpeed);\n      return complete$;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var _this4 = this;\n\n      this.contents.forEach(function (content) {\n        _this4.renderer.setStyle(content.el, 'transition', null);\n\n        _this4.renderer.setStyle(content.el, 'opacity', null);\n\n        _this4.renderer.setStyle(content.el, 'width', null);\n\n        _this4.renderer.setStyle(content.el, 'left', null);\n      });\n\n      _get(_getPrototypeOf(NzCarouselOpacityStrategy.prototype), \"dispose\", this).call(this);\n    }\n  }]);\n\n  return NzCarouselOpacityStrategy;\n}(NzCarouselBaseStrategy);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzCarouselTransformStrategy = /*#__PURE__*/function (_NzCarouselBaseStrate2) {\n  _inherits(NzCarouselTransformStrategy, _NzCarouselBaseStrate2);\n\n  var _super2 = _createSuper(NzCarouselTransformStrategy);\n\n  function NzCarouselTransformStrategy(carouselComponent, cdr, renderer, platform, options) {\n    var _this5;\n\n    _classCallCheck(this, NzCarouselTransformStrategy);\n\n    _this5 = _super2.call(this, carouselComponent, cdr, renderer, platform, options);\n    _this5.isDragging = false;\n    _this5.isTransitioning = false;\n    return _this5;\n  }\n\n  _createClass(NzCarouselTransformStrategy, [{\n    key: \"vertical\",\n    get: function get() {\n      return this.carouselComponent.vertical;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(NzCarouselTransformStrategy.prototype), \"dispose\", this).call(this);\n\n      this.renderer.setStyle(this.slickTrackEl, 'transform', null);\n    }\n  }, {\n    key: \"withCarouselContents\",\n    value: function withCarouselContents(contents) {\n      var _this6 = this;\n\n      _get(_getPrototypeOf(NzCarouselTransformStrategy.prototype), \"withCarouselContents\", this).call(this, contents);\n\n      var carousel = this.carouselComponent;\n      var activeIndex = carousel.activeIndex; // We only do when we are in browser.\n\n      if (this.platform.isBrowser && this.contents.length) {\n        this.renderer.setStyle(this.slickListEl, 'height', \"\".concat(this.unitHeight, \"px\"));\n\n        if (this.vertical) {\n          this.renderer.setStyle(this.slickTrackEl, 'width', \"\".concat(this.unitWidth, \"px\"));\n          this.renderer.setStyle(this.slickTrackEl, 'height', \"\".concat(this.length * this.unitHeight, \"px\"));\n          this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(0, \".concat(-activeIndex * this.unitHeight, \"px, 0)\"));\n        } else {\n          this.renderer.setStyle(this.slickTrackEl, 'height', \"\".concat(this.unitHeight, \"px\"));\n          this.renderer.setStyle(this.slickTrackEl, 'width', \"\".concat(this.length * this.unitWidth, \"px\"));\n          this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(\".concat(-activeIndex * this.unitWidth, \"px, 0, 0)\"));\n        }\n\n        this.contents.forEach(function (content) {\n          _this6.renderer.setStyle(content.el, 'position', 'relative');\n\n          _this6.renderer.setStyle(content.el, 'width', \"\".concat(_this6.unitWidth, \"px\"));\n\n          _this6.renderer.setStyle(content.el, 'height', \"\".concat(_this6.unitHeight, \"px\"));\n        });\n      }\n    }\n  }, {\n    key: \"switch\",\n    value: function _switch(_f, _t) {\n      var _this7 = this;\n\n      var _this$getFromToInBoun2 = this.getFromToInBoundary(_f, _t),\n          t = _this$getFromToInBoun2.to;\n\n      var complete$ = new Subject();\n      this.renderer.setStyle(this.slickTrackEl, 'transition', \"transform \".concat(this.carouselComponent.nzTransitionSpeed, \"ms ease\"));\n\n      if (this.vertical) {\n        this.verticalTransform(_f, _t);\n      } else {\n        this.horizontalTransform(_f, _t);\n      }\n\n      this.isTransitioning = true;\n      this.isDragging = false; // TODO@wendellhu95: use transitionEnd event instead of setTimeout\n\n      setTimeout(function () {\n        _this7.renderer.setStyle(_this7.slickTrackEl, 'transition', null);\n\n        _this7.contents.forEach(function (content) {\n          _this7.renderer.setStyle(content.el, _this7.vertical ? 'top' : 'left', null);\n        });\n\n        if (_this7.vertical) {\n          _this7.renderer.setStyle(_this7.slickTrackEl, 'transform', \"translate3d(0, \".concat(-t * _this7.unitHeight, \"px, 0)\"));\n        } else {\n          _this7.renderer.setStyle(_this7.slickTrackEl, 'transform', \"translate3d(\".concat(-t * _this7.unitWidth, \"px, 0, 0)\"));\n        }\n\n        _this7.isTransitioning = false;\n        complete$.next();\n        complete$.complete();\n      }, this.carouselComponent.nzTransitionSpeed);\n      return complete$.asObservable();\n    }\n  }, {\n    key: \"dragging\",\n    value: function dragging(_vector) {\n      if (this.isTransitioning) {\n        return;\n      }\n\n      var activeIndex = this.carouselComponent.activeIndex;\n\n      if (this.carouselComponent.vertical) {\n        if (!this.isDragging && this.length > 2) {\n          if (activeIndex === this.maxIndex) {\n            this.prepareVerticalContext(true);\n          } else if (activeIndex === 0) {\n            this.prepareVerticalContext(false);\n          }\n        }\n\n        this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(0, \".concat(-activeIndex * this.unitHeight + _vector.x, \"px, 0)\"));\n      } else {\n        if (!this.isDragging && this.length > 2) {\n          if (activeIndex === this.maxIndex) {\n            this.prepareHorizontalContext(true);\n          } else if (activeIndex === 0) {\n            this.prepareHorizontalContext(false);\n          }\n        }\n\n        this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(\".concat(-activeIndex * this.unitWidth + _vector.x, \"px, 0, 0)\"));\n      }\n\n      this.isDragging = true;\n    }\n  }, {\n    key: \"verticalTransform\",\n    value: function verticalTransform(_f, _t) {\n      var _this$getFromToInBoun3 = this.getFromToInBoundary(_f, _t),\n          f = _this$getFromToInBoun3.from,\n          t = _this$getFromToInBoun3.to;\n\n      var needToAdjust = this.length > 2 && _t !== t;\n\n      if (needToAdjust) {\n        this.prepareVerticalContext(t < f);\n        this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(0, \".concat(-_t * this.unitHeight, \"px, 0)\"));\n      } else {\n        this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(0, \".concat(-t * this.unitHeight, \"px, 0\"));\n      }\n    }\n  }, {\n    key: \"horizontalTransform\",\n    value: function horizontalTransform(_f, _t) {\n      var _this$getFromToInBoun4 = this.getFromToInBoundary(_f, _t),\n          f = _this$getFromToInBoun4.from,\n          t = _this$getFromToInBoun4.to;\n\n      var needToAdjust = this.length > 2 && _t !== t;\n\n      if (needToAdjust) {\n        this.prepareHorizontalContext(t < f);\n        this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(\".concat(-_t * this.unitWidth, \"px, 0, 0)\"));\n      } else {\n        this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(\".concat(-t * this.unitWidth, \"px, 0, 0\"));\n      }\n    }\n  }, {\n    key: \"prepareVerticalContext\",\n    value: function prepareVerticalContext(lastToFirst) {\n      if (lastToFirst) {\n        this.renderer.setStyle(this.firstEl, 'top', \"\".concat(this.length * this.unitHeight, \"px\"));\n        this.renderer.setStyle(this.lastEl, 'top', null);\n      } else {\n        this.renderer.setStyle(this.firstEl, 'top', null);\n        this.renderer.setStyle(this.lastEl, 'top', \"\".concat(-this.unitHeight * this.length, \"px\"));\n      }\n    }\n  }, {\n    key: \"prepareHorizontalContext\",\n    value: function prepareHorizontalContext(lastToFirst) {\n      if (lastToFirst) {\n        this.renderer.setStyle(this.firstEl, 'left', \"\".concat(this.length * this.unitWidth, \"px\"));\n        this.renderer.setStyle(this.lastEl, 'left', null);\n      } else {\n        this.renderer.setStyle(this.firstEl, 'left', null);\n        this.renderer.setStyle(this.lastEl, 'left', \"\".concat(-this.unitWidth * this.length, \"px\"));\n      }\n    }\n  }]);\n\n  return NzCarouselTransformStrategy;\n}(NzCarouselBaseStrategy);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NZ_CAROUSEL_CUSTOM_STRATEGIES = new InjectionToken('nz-carousel-custom-strategies');\nvar NZ_CONFIG_MODULE_NAME = 'carousel';\n\nvar NzCarouselComponent = /*#__PURE__*/function () {\n  function NzCarouselComponent(elementRef, nzConfigService, ngZone, renderer, cdr, platform, resizeService, nzDragService, directionality, customStrategies) {\n    var _this8 = this;\n\n    _classCallCheck(this, NzCarouselComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.platform = platform;\n    this.resizeService = resizeService;\n    this.nzDragService = nzDragService;\n    this.directionality = directionality;\n    this.customStrategies = customStrategies;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzEffect = 'scrollx';\n    this.nzEnableSwipe = true;\n    this.nzDots = true;\n    this.nzAutoPlay = false;\n    this.nzAutoPlaySpeed = 3000;\n    this.nzTransitionSpeed = 500;\n    /**\n     * this property is passed directly to an NzCarouselBaseStrategy\n     */\n\n    this.nzStrategyOptions = undefined;\n    this._dotPosition = 'bottom';\n    this.nzBeforeChange = new EventEmitter();\n    this.nzAfterChange = new EventEmitter();\n    this.activeIndex = 0;\n    this.vertical = false;\n    this.transitionInProgress = null;\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    this.gestureRect = null;\n    this.pointerDelta = null;\n    this.isTransiting = false;\n    this.isDragging = false;\n\n    this.onLiClick = function (index) {\n      if (_this8.dir === 'rtl') {\n        _this8.goTo(_this8.carouselContents.length - 1 - index);\n      } else {\n        _this8.goTo(index);\n      }\n    };\n    /**\n     * Drag carousel.\n     */\n\n\n    this.pointerDown = function (event) {\n      if (!_this8.isDragging && !_this8.isTransiting && _this8.nzEnableSwipe) {\n        _this8.clearScheduledTransition();\n\n        _this8.gestureRect = _this8.slickListEl.getBoundingClientRect();\n\n        _this8.nzDragService.requestDraggingSequence(event).subscribe(function (delta) {\n          var _a;\n\n          _this8.pointerDelta = delta;\n          _this8.isDragging = true;\n          (_a = _this8.strategy) === null || _a === void 0 ? void 0 : _a.dragging(_this8.pointerDelta);\n        }, function () {}, function () {\n          if (_this8.nzEnableSwipe && _this8.isDragging) {\n            var xDelta = _this8.pointerDelta ? _this8.pointerDelta.x : 0; // Switch to another slide if delta is bigger than third of the width.\n\n            if (Math.abs(xDelta) > _this8.gestureRect.width / 3) {\n              _this8.goTo(xDelta > 0 ? _this8.activeIndex - 1 : _this8.activeIndex + 1);\n            } else {\n              _this8.goTo(_this8.activeIndex);\n            }\n\n            _this8.gestureRect = null;\n            _this8.pointerDelta = null;\n          }\n\n          _this8.isDragging = false;\n        });\n      }\n    };\n\n    this.nzDotPosition = 'bottom';\n    this.renderer.addClass(elementRef.nativeElement, 'ant-carousel');\n    this.el = elementRef.nativeElement;\n  }\n\n  _createClass(NzCarouselComponent, [{\n    key: \"nzDotPosition\",\n    get: function get() {\n      return this._dotPosition;\n    },\n    set: function set(value) {\n      this._dotPosition = value;\n\n      if (value === 'left' || value === 'right') {\n        this.vertical = true;\n      } else {\n        this.vertical = false;\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this9 = this;\n\n      this.slickListEl = this.slickList.nativeElement;\n      this.slickTrackEl = this.slickTrack.nativeElement;\n      this.dir = this.directionality.value;\n      this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this9.dir = direction;\n\n        _this9.markContentActive(_this9.activeIndex);\n\n        _this9.cdr.detectChanges();\n      });\n      this.ngZone.runOutsideAngular(function () {\n        fromEvent(_this9.slickListEl, 'keydown').pipe(takeUntil(_this9.destroy$)).subscribe(function (event) {\n          var keyCode = event.keyCode;\n\n          if (keyCode !== LEFT_ARROW && keyCode !== RIGHT_ARROW) {\n            return;\n          }\n\n          event.preventDefault();\n\n          _this9.ngZone.run(function () {\n            if (keyCode === LEFT_ARROW) {\n              _this9.pre();\n            } else {\n              _this9.next();\n            }\n\n            _this9.cdr.markForCheck();\n          });\n        });\n      });\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this.markContentActive(0);\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this10 = this;\n\n      this.carouselContents.changes.subscribe(function () {\n        _this10.markContentActive(0);\n\n        _this10.layout();\n      });\n      this.resizeService.subscribe().pipe(takeUntil(this.destroy$)).subscribe(function () {\n        _this10.layout();\n      });\n      this.switchStrategy();\n      this.markContentActive(0);\n      this.layout(); // If embedded in an entry component, it may do initial render at an inappropriate time.\n      // ngZone.onStable won't do this trick\n      // TODO: need to change this.\n\n      Promise.resolve().then(function () {\n        _this10.layout();\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzEffect = changes.nzEffect,\n          nzDotPosition = changes.nzDotPosition;\n\n      if (nzEffect && !nzEffect.isFirstChange()) {\n        this.switchStrategy();\n        this.markContentActive(0);\n        this.layout();\n      }\n\n      if (nzDotPosition && !nzDotPosition.isFirstChange()) {\n        this.switchStrategy();\n        this.markContentActive(0);\n        this.layout();\n      }\n\n      if (!this.nzAutoPlay || !this.nzAutoPlaySpeed) {\n        this.clearScheduledTransition();\n      } else {\n        this.scheduleNextTransition();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.clearScheduledTransition();\n\n      if (this.strategy) {\n        this.strategy.dispose();\n      }\n\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.goTo(this.activeIndex + 1);\n    }\n  }, {\n    key: \"pre\",\n    value: function pre() {\n      this.goTo(this.activeIndex - 1);\n    }\n  }, {\n    key: \"goTo\",\n    value: function goTo(index) {\n      var _this11 = this;\n\n      if (this.carouselContents && this.carouselContents.length && !this.isTransiting) {\n        var length = this.carouselContents.length;\n        var from = this.activeIndex;\n        var to = (index + length) % length;\n        this.isTransiting = true;\n        this.nzBeforeChange.emit({\n          from: from,\n          to: to\n        });\n        this.strategy.switch(this.activeIndex, index).subscribe(function () {\n          _this11.scheduleNextTransition();\n\n          _this11.nzAfterChange.emit(index);\n\n          _this11.isTransiting = false;\n        });\n        this.markContentActive(to);\n        this.cdr.markForCheck();\n      }\n    }\n  }, {\n    key: \"switchStrategy\",\n    value: function switchStrategy() {\n      var _this12 = this;\n\n      if (this.strategy) {\n        this.strategy.dispose();\n      } // Load custom strategies first.\n\n\n      var customStrategy = this.customStrategies ? this.customStrategies.find(function (s) {\n        return s.name === _this12.nzEffect;\n      }) : null;\n\n      if (customStrategy) {\n        this.strategy = new customStrategy.strategy(this, this.cdr, this.renderer, this.platform);\n        return;\n      }\n\n      this.strategy = this.nzEffect === 'scrollx' ? new NzCarouselTransformStrategy(this, this.cdr, this.renderer, this.platform) : new NzCarouselOpacityStrategy(this, this.cdr, this.renderer, this.platform);\n    }\n  }, {\n    key: \"scheduleNextTransition\",\n    value: function scheduleNextTransition() {\n      var _this13 = this;\n\n      this.clearScheduledTransition();\n\n      if (this.nzAutoPlay && this.nzAutoPlaySpeed > 0 && this.platform.isBrowser) {\n        this.transitionInProgress = setTimeout(function () {\n          _this13.goTo(_this13.activeIndex + 1);\n        }, this.nzAutoPlaySpeed);\n      }\n    }\n  }, {\n    key: \"clearScheduledTransition\",\n    value: function clearScheduledTransition() {\n      if (this.transitionInProgress) {\n        clearTimeout(this.transitionInProgress);\n        this.transitionInProgress = null;\n      }\n    }\n  }, {\n    key: \"markContentActive\",\n    value: function markContentActive(index) {\n      var _this14 = this;\n\n      this.activeIndex = index;\n\n      if (this.carouselContents) {\n        this.carouselContents.forEach(function (slide, i) {\n          if (_this14.dir === 'rtl') {\n            slide.isActive = index === _this14.carouselContents.length - 1 - i;\n          } else {\n            slide.isActive = index === i;\n          }\n        });\n      }\n\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"layout\",\n    value: function layout() {\n      if (this.strategy) {\n        this.strategy.withCarouselContents(this.carouselContents);\n      }\n    }\n  }]);\n\n  return NzCarouselComponent;\n}();\n\nNzCarouselComponent.ɵfac = function NzCarouselComponent_Factory(t) {\n  return new (t || NzCarouselComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(i3.NzResizeService), i0.ɵɵdirectiveInject(i3.NzDragService), i0.ɵɵdirectiveInject(i4.Directionality, 8), i0.ɵɵdirectiveInject(NZ_CAROUSEL_CUSTOM_STRATEGIES, 8));\n};\n\nNzCarouselComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzCarouselComponent,\n  selectors: [[\"nz-carousel\"]],\n  contentQueries: function NzCarouselComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzCarouselContentDirective, 4);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.carouselContents = _t);\n    }\n  },\n  viewQuery: function NzCarouselComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slickList = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slickTrack = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function NzCarouselComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-carousel-vertical\", ctx.vertical)(\"ant-carousel-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzDotRender: \"nzDotRender\",\n    nzEffect: \"nzEffect\",\n    nzEnableSwipe: \"nzEnableSwipe\",\n    nzDots: \"nzDots\",\n    nzAutoPlay: \"nzAutoPlay\",\n    nzAutoPlaySpeed: \"nzAutoPlaySpeed\",\n    nzTransitionSpeed: \"nzTransitionSpeed\",\n    nzStrategyOptions: \"nzStrategyOptions\",\n    nzDotPosition: \"nzDotPosition\"\n  },\n  outputs: {\n    nzBeforeChange: \"nzBeforeChange\",\n    nzAfterChange: \"nzAfterChange\"\n  },\n  exportAs: [\"nzCarousel\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c3,\n  decls: 9,\n  vars: 3,\n  consts: [[1, \"slick-initialized\", \"slick-slider\"], [\"tabindex\", \"-1\", 1, \"slick-list\", 3, \"mousedown\", \"touchstart\"], [\"slickList\", \"\"], [1, \"slick-track\"], [\"slickTrack\", \"\"], [\"class\", \"slick-dots\", 3, \"slick-dots-top\", \"slick-dots-bottom\", \"slick-dots-left\", \"slick-dots-right\", 4, \"ngIf\"], [\"renderDotTemplate\", \"\"], [1, \"slick-dots\"], [3, \"slick-active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NzCarouselComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1, 2);\n      i0.ɵɵlistener(\"mousedown\", function NzCarouselComponent_Template_div_mousedown_1_listener($event) {\n        return ctx.pointerDown($event);\n      })(\"touchstart\", function NzCarouselComponent_Template_div_touchstart_1_listener($event) {\n        return ctx.pointerDown($event);\n      });\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵprojection(5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, NzCarouselComponent_ul_6_Template, 2, 9, \"ul\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, NzCarouselComponent_ng_template_7_Template, 2, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"slick-vertical\", ctx.nzDotPosition === \"left\" || ctx.nzDotPosition === \"right\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzDots);\n    }\n  },\n  directives: [i5.NgIf, i5.NgForOf, i5.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([WithConfig()], NzCarouselComponent.prototype, \"nzEffect\", void 0);\n\n__decorate([WithConfig(), InputBoolean()], NzCarouselComponent.prototype, \"nzEnableSwipe\", void 0);\n\n__decorate([WithConfig(), InputBoolean()], NzCarouselComponent.prototype, \"nzDots\", void 0);\n\n__decorate([WithConfig(), InputBoolean()], NzCarouselComponent.prototype, \"nzAutoPlay\", void 0);\n\n__decorate([WithConfig(), InputNumber()], NzCarouselComponent.prototype, \"nzAutoPlaySpeed\", void 0);\n\n__decorate([InputNumber()], NzCarouselComponent.prototype, \"nzTransitionSpeed\", void 0);\n\n__decorate([WithConfig()], NzCarouselComponent.prototype, \"nzDotPosition\", null);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCarouselComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-carousel',\n      exportAs: 'nzCarousel',\n      preserveWhitespaces: false,\n      template: \"\\n    <div\\n      class=\\\"slick-initialized slick-slider\\\"\\n      [class.slick-vertical]=\\\"nzDotPosition === 'left' || nzDotPosition === 'right'\\\"\\n    >\\n      <div\\n        #slickList\\n        class=\\\"slick-list\\\"\\n        tabindex=\\\"-1\\\"\\n        (mousedown)=\\\"pointerDown($event)\\\"\\n        (touchstart)=\\\"pointerDown($event)\\\"\\n      >\\n        <!-- Render carousel items. -->\\n        <div class=\\\"slick-track\\\" #slickTrack>\\n          <ng-content></ng-content>\\n        </div>\\n      </div>\\n      <!-- Render dots. -->\\n      <ul\\n        class=\\\"slick-dots\\\"\\n        *ngIf=\\\"nzDots\\\"\\n        [class.slick-dots-top]=\\\"nzDotPosition === 'top'\\\"\\n        [class.slick-dots-bottom]=\\\"nzDotPosition === 'bottom'\\\"\\n        [class.slick-dots-left]=\\\"nzDotPosition === 'left'\\\"\\n        [class.slick-dots-right]=\\\"nzDotPosition === 'right'\\\"\\n      >\\n        <li\\n          *ngFor=\\\"let content of carouselContents; let i = index\\\"\\n          [class.slick-active]=\\\"i === activeIndex\\\"\\n          (click)=\\\"onLiClick(i)\\\"\\n        >\\n          <ng-template\\n            [ngTemplateOutlet]=\\\"nzDotRender || renderDotTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{ $implicit: i }\\\"\\n          ></ng-template>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <ng-template #renderDotTemplate let-index>\\n      <button>{{ index + 1 }}</button>\\n    </ng-template>\\n  \",\n      host: {\n        '[class.ant-carousel-vertical]': 'vertical',\n        '[class.ant-carousel-rtl]': \"dir ==='rtl'\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.NzConfigService\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Platform\n    }, {\n      type: i3.NzResizeService\n    }, {\n      type: i3.NzDragService\n    }, {\n      type: i4.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NZ_CAROUSEL_CUSTOM_STRATEGIES]\n      }]\n    }];\n  }, {\n    carouselContents: [{\n      type: ContentChildren,\n      args: [NzCarouselContentDirective]\n    }],\n    slickList: [{\n      type: ViewChild,\n      args: ['slickList', {\n        static: true\n      }]\n    }],\n    slickTrack: [{\n      type: ViewChild,\n      args: ['slickTrack', {\n        static: true\n      }]\n    }],\n    nzDotRender: [{\n      type: Input\n    }],\n    nzEffect: [{\n      type: Input\n    }],\n    nzEnableSwipe: [{\n      type: Input\n    }],\n    nzDots: [{\n      type: Input\n    }],\n    nzAutoPlay: [{\n      type: Input\n    }],\n    nzAutoPlaySpeed: [{\n      type: Input\n    }],\n    nzTransitionSpeed: [{\n      type: Input\n    }],\n    nzStrategyOptions: [{\n      type: Input\n    }],\n    nzDotPosition: [{\n      type: Input\n    }],\n    nzBeforeChange: [{\n      type: Output\n    }],\n    nzAfterChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzCarouselModule = /*#__PURE__*/_createClass(function NzCarouselModule() {\n  _classCallCheck(this, NzCarouselModule);\n});\n\nNzCarouselModule.ɵfac = function NzCarouselModule_Factory(t) {\n  return new (t || NzCarouselModule)();\n};\n\nNzCarouselModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzCarouselModule,\n  declarations: [NzCarouselComponent, NzCarouselContentDirective],\n  imports: [BidiModule, CommonModule, PlatformModule],\n  exports: [NzCarouselComponent, NzCarouselContentDirective]\n});\nNzCarouselModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, PlatformModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzCarouselModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzCarouselComponent, NzCarouselContentDirective],\n      exports: [NzCarouselComponent, NzCarouselContentDirective],\n      imports: [BidiModule, CommonModule, PlatformModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * this strategy is very much like NzCarouselTransformStrategy, but it doesn't loop between the first and the last one\n */\n\n\nvar NzCarouselTransformNoLoopStrategy = /*#__PURE__*/function (_NzCarouselBaseStrate3) {\n  _inherits(NzCarouselTransformNoLoopStrategy, _NzCarouselBaseStrate3);\n\n  var _super3 = _createSuper(NzCarouselTransformNoLoopStrategy);\n\n  function NzCarouselTransformNoLoopStrategy(carouselComponent, cdr, renderer, platform, options) {\n    var _this15;\n\n    _classCallCheck(this, NzCarouselTransformNoLoopStrategy);\n\n    _this15 = _super3.call(this, carouselComponent, cdr, renderer, platform, options);\n    _this15.isTransitioning = false;\n    return _this15;\n  }\n\n  _createClass(NzCarouselTransformNoLoopStrategy, [{\n    key: \"vertical\",\n    get: function get() {\n      return this.carouselComponent.vertical;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.renderer.setStyle(this.slickTrackEl, 'transform', null);\n\n      _get(_getPrototypeOf(NzCarouselTransformNoLoopStrategy.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"withCarouselContents\",\n    value: function withCarouselContents(contents) {\n      var _this16 = this;\n\n      _get(_getPrototypeOf(NzCarouselTransformNoLoopStrategy.prototype), \"withCarouselContents\", this).call(this, contents);\n\n      var carousel = this.carouselComponent;\n      var activeIndex = carousel.activeIndex;\n\n      if (this.platform.isBrowser && this.contents.length) {\n        this.renderer.setStyle(this.slickListEl, 'height', \"\".concat(this.unitHeight, \"px\"));\n\n        if (this.platform.isBrowser && this.contents.length) {\n          this.renderer.setStyle(this.slickListEl, 'height', \"\".concat(this.unitHeight, \"px\"));\n\n          if (this.vertical) {\n            this.renderer.setStyle(this.slickTrackEl, 'width', \"\".concat(this.unitWidth, \"px\"));\n            this.renderer.setStyle(this.slickTrackEl, 'height', \"\".concat(this.length * this.unitHeight, \"px\"));\n            this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(0, \".concat(-activeIndex * this.unitHeight, \"px, 0)\"));\n          } else {\n            this.renderer.setStyle(this.slickTrackEl, 'height', \"\".concat(this.unitHeight, \"px\"));\n            this.renderer.setStyle(this.slickTrackEl, 'width', \"\".concat(this.length * this.unitWidth, \"px\"));\n            this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(\".concat(-activeIndex * this.unitWidth, \"px, 0, 0)\"));\n          }\n\n          this.contents.forEach(function (content) {\n            _this16.renderer.setStyle(content.el, 'position', 'relative');\n\n            _this16.renderer.setStyle(content.el, 'width', \"\".concat(_this16.unitWidth, \"px\"));\n\n            _this16.renderer.setStyle(content.el, 'height', \"\".concat(_this16.unitHeight, \"px\"));\n          });\n        }\n      }\n    }\n  }, {\n    key: \"switch\",\n    value: function _switch(_f, _t) {\n      var _this17 = this;\n\n      var to = (_t + this.length) % this.length;\n      var transitionSpeed = this.carouselComponent.nzTransitionSpeed;\n      var complete$ = new Subject();\n      this.renderer.setStyle(this.slickTrackEl, 'transition', \"transform \".concat(transitionSpeed, \"ms ease\"));\n\n      if (this.vertical) {\n        this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(0, \".concat(-to * this.unitHeight, \"px, 0)\"));\n      } else {\n        this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(\".concat(-to * this.unitWidth, \"px, 0, 0)\"));\n      }\n\n      this.isTransitioning = true;\n      setTimeout(function () {\n        // this strategy don't need to do a following adjust\n        _this17.isTransitioning = false;\n        complete$.next();\n        complete$.complete();\n      }, transitionSpeed);\n      return complete$.asObservable();\n    }\n  }, {\n    key: \"dragging\",\n    value: function dragging(vector) {\n      if (this.isTransitioning) {\n        return;\n      }\n\n      var activeIndex = this.carouselComponent.activeIndex;\n\n      if (this.vertical) {\n        this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(0, \".concat(-activeIndex * this.unitHeight + vector.x, \"px, 0)\"));\n      } else {\n        this.renderer.setStyle(this.slickTrackEl, 'transform', \"translate3d(\".concat(-activeIndex * this.unitWidth + vector.x, \"px, 0, 0)\"));\n      }\n    }\n  }]);\n\n  return NzCarouselTransformNoLoopStrategy;\n}(NzCarouselBaseStrategy);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzCarouselFlipStrategy = /*#__PURE__*/function (_NzCarouselBaseStrate4) {\n  _inherits(NzCarouselFlipStrategy, _NzCarouselBaseStrate4);\n\n  var _super4 = _createSuper(NzCarouselFlipStrategy);\n\n  function NzCarouselFlipStrategy() {\n    _classCallCheck(this, NzCarouselFlipStrategy);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(NzCarouselFlipStrategy, [{\n    key: \"withCarouselContents\",\n    value: function withCarouselContents(contents) {\n      var _this18 = this;\n\n      _get(_getPrototypeOf(NzCarouselFlipStrategy.prototype), \"withCarouselContents\", this).call(this, contents);\n\n      if (this.contents) {\n        this.renderer.setStyle(this.slickListEl, 'width', \"\".concat(this.unitWidth, \"px\"));\n        this.renderer.setStyle(this.slickTrackEl, 'width', \"\".concat(this.length * this.unitWidth, \"px\"));\n        this.contents.forEach(function (content, i) {\n          var cur = _this18.carouselComponent.activeIndex === i;\n\n          _this18.renderer.setStyle(content.el, 'transform', cur ? 'rotateY(0deg)' : 'rotateY(180deg)');\n\n          _this18.renderer.setStyle(content.el, 'position', 'relative');\n\n          _this18.renderer.setStyle(content.el, 'width', \"\".concat(_this18.unitWidth, \"px\"));\n\n          _this18.renderer.setStyle(content.el, 'left', \"\".concat(-_this18.unitWidth * i, \"px\"));\n\n          _this18.renderer.setStyle(content.el, 'transform-style', 'preserve-3d');\n\n          _this18.renderer.setStyle(content.el, 'backface-visibility', 'hidden');\n        });\n        var carouselComponent = this.carouselComponent;\n        carouselComponent.ngZone.runOutsideAngular(function () {\n          timer(carouselComponent.nzTransitionSpeed).subscribe(function () {\n            _this18.contents.forEach(function (c) {\n              return _this18.renderer.setStyle(c.el, 'transition', ['transform 500ms ease 0s']);\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: \"switch\",\n    value: function _switch(rawF, rawT) {\n      var _this19 = this;\n\n      var _this$getFromToInBoun5 = this.getFromToInBoundary(rawF, rawT),\n          from = _this$getFromToInBoun5.from,\n          to = _this$getFromToInBoun5.to;\n\n      var complete$ = new Subject();\n      var speed = this.carouselComponent.nzTransitionSpeed;\n      timer(speed).subscribe(function () {\n        complete$.next();\n        complete$.complete();\n      });\n\n      if (rawF === rawT) {\n        return complete$;\n      }\n\n      this.contents.forEach(function (content, i) {\n        if (i === from) {\n          _this19.renderer.setStyle(content.el, 'transform', 'rotateY(180deg)');\n        } else if (i === to) {\n          _this19.renderer.setStyle(content.el, 'transform', 'rotateY(0deg)');\n        }\n      });\n      return complete$.asObservable();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var _this20 = this;\n\n      this.contents.forEach(function (content) {\n        _this20.renderer.setStyle(content.el, 'transition', null);\n\n        _this20.renderer.setStyle(content.el, 'transform', null);\n\n        _this20.renderer.setStyle(content.el, 'width', null);\n\n        _this20.renderer.setStyle(content.el, 'left', null);\n\n        _this20.renderer.setStyle(content.el, 'transform-style', null);\n\n        _this20.renderer.setStyle(content.el, 'backface-visibility', null);\n      });\n\n      _get(_getPrototypeOf(NzCarouselFlipStrategy.prototype), \"dispose\", this).call(this);\n    }\n  }]);\n\n  return NzCarouselFlipStrategy;\n}(NzCarouselBaseStrategy);\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NZ_CAROUSEL_CUSTOM_STRATEGIES, NzCarouselBaseStrategy, NzCarouselComponent, NzCarouselContentDirective, NzCarouselFlipStrategy, NzCarouselModule, NzCarouselOpacityStrategy, NzCarouselTransformNoLoopStrategy, NzCarouselTransformStrategy }; //# sourceMappingURL=ng-zorro-antd-carousel.mjs.map","map":null,"metadata":{},"sourceType":"module"}