{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, SkipSelf, Optional, Inject, Directive, Input, ContentChildren, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ElementRef, Host, ViewChild, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, merge, combineLatest } from 'rxjs';\nimport { map, mergeMap, filter, mapTo, auditTime, distinctUntilChanged, takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i4 from '@angular/router';\nimport { NavigationEnd, RouterLink, RouterLinkWithHref } from '@angular/router';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i9 from '@angular/cdk/overlay';\nimport { CdkOverlayOrigin, OverlayModule } from '@angular/cdk/overlay';\nimport { POSITION_MAP, getPlacementName } from 'ng-zorro-antd/core/overlay';\nimport * as i3$1 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i5 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i4$1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { collapseMotion, zoomBigMotion, slideMotion } from 'ng-zorro-antd/core/animation';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar _c0 = [\"nz-submenu-title\", \"\"];\n\nfunction NzSubMenuTitleComponent_i_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.nzIcon);\n  }\n}\n\nfunction NzSubMenuTitleComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.nzTitle);\n  }\n}\n\nfunction NzSubMenuTitleComponent_span_3_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 8);\n  }\n}\n\nfunction NzSubMenuTitleComponent_span_3_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 9);\n  }\n}\n\nfunction NzSubMenuTitleComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtemplate(1, NzSubMenuTitleComponent_span_3_i_1_Template, 1, 0, \"i\", 6);\n    i0.ɵɵtemplate(2, NzSubMenuTitleComponent_span_3_i_2_Template, 1, 0, \"i\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r2.dir);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"rtl\");\n  }\n}\n\nfunction NzSubMenuTitleComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 10);\n  }\n}\n\nvar _c1 = [\"*\"];\nvar _c2 = [\"nz-submenu-inline-child\", \"\"];\n\nfunction NzSubmenuInlineChildComponent_ng_template_0_Template(rf, ctx) {}\n\nvar _c3 = [\"nz-submenu-none-inline-child\", \"\"];\n\nfunction NzSubmenuNoneInlineChildComponent_ng_template_1_Template(rf, ctx) {}\n\nvar _c4 = [\"nz-submenu\", \"\"];\n\nfunction NzSubMenuComponent_ng_content_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"!nzTitle\"]);\n  }\n}\n\nfunction NzSubMenuComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n\n    var _r5 = i0.ɵɵreference(7);\n\n    i0.ɵɵproperty(\"mode\", ctx_r2.mode)(\"nzOpen\", ctx_r2.nzOpen)(\"@.disabled\", ctx_r2.noAnimation == null ? null : ctx_r2.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r2.noAnimation == null ? null : ctx_r2.noAnimation.nzNoAnimation)(\"menuClass\", ctx_r2.nzMenuClassName)(\"templateOutlet\", _r5);\n  }\n}\n\nfunction NzSubMenuComponent_ng_template_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"subMenuMouseState\", function NzSubMenuComponent_ng_template_4_ng_template_0_Template_div_subMenuMouseState_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.setMouseEnterState($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = i0.ɵɵnextContext(2);\n\n    var _r5 = i0.ɵɵreference(7);\n\n    i0.ɵɵproperty(\"theme\", ctx_r7.theme)(\"mode\", ctx_r7.mode)(\"nzOpen\", ctx_r7.nzOpen)(\"position\", ctx_r7.position)(\"nzDisabled\", ctx_r7.nzDisabled)(\"isMenuInsideDropDown\", ctx_r7.isMenuInsideDropDown)(\"templateOutlet\", _r5)(\"menuClass\", ctx_r7.nzMenuClassName)(\"@.disabled\", ctx_r7.noAnimation == null ? null : ctx_r7.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r7.noAnimation == null ? null : ctx_r7.noAnimation.nzNoAnimation);\n  }\n}\n\nfunction NzSubMenuComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵtemplate(0, NzSubMenuComponent_ng_template_4_ng_template_0_Template, 1, 10, \"ng-template\", 7);\n    i0.ɵɵlistener(\"positionChange\", function NzSubMenuComponent_ng_template_4_Template_ng_template_positionChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      var ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onPositionChange($event);\n    });\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n\n    var _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵproperty(\"cdkConnectedOverlayPositions\", ctx_r4.overlayPositions)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayWidth\", ctx_r4.triggerWidth)(\"cdkConnectedOverlayOpen\", ctx_r4.nzOpen)(\"cdkConnectedOverlayTransformOriginOn\", \".ant-menu-submenu\");\n  }\n}\n\nfunction NzSubMenuComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n  }\n}\n\nvar _c5 = [[[\"\", \"title\", \"\"]], \"*\"];\nvar _c6 = [\"[title]\", \"*\"];\nvar _c7 = [\"titleElement\"];\nvar _c8 = [\"nz-menu-group\", \"\"];\n\nfunction NzMenuGroupComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.nzTitle);\n  }\n}\n\nfunction NzMenuGroupComponent_ng_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1, [\"*ngIf\", \"!nzTitle\"]);\n  }\n}\n\nvar _c9 = [\"*\", [[\"\", \"title\", \"\"]]];\nvar _c10 = [\"*\", \"[title]\"];\nvar NzIsMenuInsideDropDownToken = new InjectionToken('NzIsInDropDownMenuToken');\nvar NzMenuServiceLocalToken = new InjectionToken('NzMenuServiceLocalToken');\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar MenuService = /*#__PURE__*/function () {\n  function MenuService() {\n    _classCallCheck(this, MenuService);\n\n    /** all descendant menu click **/\n    this.descendantMenuItemClick$ = new Subject();\n    /** child menu item click **/\n\n    this.childMenuItemClick$ = new Subject();\n    this.theme$ = new BehaviorSubject('light');\n    this.mode$ = new BehaviorSubject('vertical');\n    this.inlineIndent$ = new BehaviorSubject(24);\n    this.isChildSubMenuOpen$ = new BehaviorSubject(false);\n  }\n\n  _createClass(MenuService, [{\n    key: \"onDescendantMenuItemClick\",\n    value: function onDescendantMenuItemClick(menu) {\n      this.descendantMenuItemClick$.next(menu);\n    }\n  }, {\n    key: \"onChildMenuItemClick\",\n    value: function onChildMenuItemClick(menu) {\n      this.childMenuItemClick$.next(menu);\n    }\n  }, {\n    key: \"setMode\",\n    value: function setMode(mode) {\n      this.mode$.next(mode);\n    }\n  }, {\n    key: \"setTheme\",\n    value: function setTheme(theme) {\n      this.theme$.next(theme);\n    }\n  }, {\n    key: \"setInlineIndent\",\n    value: function setInlineIndent(indent) {\n      this.inlineIndent$.next(indent);\n    }\n  }]);\n\n  return MenuService;\n}();\n\nMenuService.ɵfac = function MenuService_Factory(t) {\n  return new (t || MenuService)();\n};\n\nMenuService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MenuService,\n  factory: MenuService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MenuService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzSubmenuService = /*#__PURE__*/function () {\n  function NzSubmenuService(nzHostSubmenuService, nzMenuService, isMenuInsideDropDown) {\n    var _this = this;\n\n    _classCallCheck(this, NzSubmenuService);\n\n    this.nzHostSubmenuService = nzHostSubmenuService;\n    this.nzMenuService = nzMenuService;\n    this.isMenuInsideDropDown = isMenuInsideDropDown;\n    this.mode$ = this.nzMenuService.mode$.pipe(map(function (mode) {\n      if (mode === 'inline') {\n        return 'inline';\n        /** if inside another submenu, set the mode to vertical **/\n      } else if (mode === 'vertical' || _this.nzHostSubmenuService) {\n        return 'vertical';\n      } else {\n        return 'horizontal';\n      }\n    }));\n    this.level = 1;\n    this.isCurrentSubMenuOpen$ = new BehaviorSubject(false);\n    this.isChildSubMenuOpen$ = new BehaviorSubject(false);\n    /** submenu title & overlay mouse enter status **/\n\n    this.isMouseEnterTitleOrOverlay$ = new Subject();\n    this.childMenuItemClick$ = new Subject();\n    this.destroy$ = new Subject();\n\n    if (this.nzHostSubmenuService) {\n      this.level = this.nzHostSubmenuService.level + 1;\n    }\n    /** close if menu item clicked **/\n\n\n    var isClosedByMenuItemClick = this.childMenuItemClick$.pipe(mergeMap(function () {\n      return _this.mode$;\n    }), filter(function (mode) {\n      return mode !== 'inline' || _this.isMenuInsideDropDown;\n    }), mapTo(false));\n    var isCurrentSubmenuOpen$ = merge(this.isMouseEnterTitleOrOverlay$, isClosedByMenuItemClick);\n    /** combine the child submenu status with current submenu status to calculate host submenu open **/\n\n    var isSubMenuOpenWithDebounce$ = combineLatest([this.isChildSubMenuOpen$, isCurrentSubmenuOpen$]).pipe(map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          isChildSubMenuOpen = _ref2[0],\n          isCurrentSubmenuOpen = _ref2[1];\n\n      return isChildSubMenuOpen || isCurrentSubmenuOpen;\n    }), auditTime(150), distinctUntilChanged(), takeUntil(this.destroy$));\n    isSubMenuOpenWithDebounce$.pipe(distinctUntilChanged()).subscribe(function (data) {\n      _this.setOpenStateWithoutDebounce(data);\n\n      if (_this.nzHostSubmenuService) {\n        /** set parent submenu's child submenu open status **/\n        _this.nzHostSubmenuService.isChildSubMenuOpen$.next(data);\n      } else {\n        _this.nzMenuService.isChildSubMenuOpen$.next(data);\n      }\n    });\n  }\n  /**\n   * menu item inside submenu clicked\n   *\n   * @param menu\n   */\n\n\n  _createClass(NzSubmenuService, [{\n    key: \"onChildMenuItemClick\",\n    value: function onChildMenuItemClick(menu) {\n      this.childMenuItemClick$.next(menu);\n    }\n  }, {\n    key: \"setOpenStateWithoutDebounce\",\n    value: function setOpenStateWithoutDebounce(value) {\n      this.isCurrentSubMenuOpen$.next(value);\n    }\n  }, {\n    key: \"setMouseEnterTitleOrOverlayState\",\n    value: function setMouseEnterTitleOrOverlayState(value) {\n      this.isMouseEnterTitleOrOverlay$.next(value);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzSubmenuService;\n}();\n\nNzSubmenuService.ɵfac = function NzSubmenuService_Factory(t) {\n  return new (t || NzSubmenuService)(i0.ɵɵinject(NzSubmenuService, 12), i0.ɵɵinject(MenuService), i0.ɵɵinject(NzIsMenuInsideDropDownToken));\n};\n\nNzSubmenuService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzSubmenuService,\n  factory: NzSubmenuService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSubmenuService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NzSubmenuService,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: MenuService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NzIsMenuInsideDropDownToken]\n      }]\n    }];\n  }, null);\n})();\n\nvar NzMenuItemDirective = /*#__PURE__*/function () {\n  function NzMenuItemDirective(nzMenuService, cdr, nzSubmenuService, isMenuInsideDropDown, directionality, routerLink, routerLinkWithHref, router) {\n    var _this2 = this;\n\n    _classCallCheck(this, NzMenuItemDirective);\n\n    this.nzMenuService = nzMenuService;\n    this.cdr = cdr;\n    this.nzSubmenuService = nzSubmenuService;\n    this.isMenuInsideDropDown = isMenuInsideDropDown;\n    this.directionality = directionality;\n    this.routerLink = routerLink;\n    this.routerLinkWithHref = routerLinkWithHref;\n    this.router = router;\n    this.destroy$ = new Subject();\n    this.level = this.nzSubmenuService ? this.nzSubmenuService.level + 1 : 1;\n    this.selected$ = new Subject();\n    this.inlinePaddingLeft = null;\n    this.dir = 'ltr';\n    this.nzDisabled = false;\n    this.nzSelected = false;\n    this.nzDanger = false;\n    this.nzMatchRouterExact = false;\n    this.nzMatchRouter = false;\n\n    if (router) {\n      this.router.events.pipe(takeUntil(this.destroy$), filter(function (e) {\n        return e instanceof NavigationEnd;\n      })).subscribe(function () {\n        _this2.updateRouterActive();\n      });\n    }\n  }\n  /** clear all item selected status except this */\n\n\n  _createClass(NzMenuItemDirective, [{\n    key: \"clickMenuItem\",\n    value: function clickMenuItem(e) {\n      if (this.nzDisabled) {\n        e.preventDefault();\n        e.stopPropagation();\n      } else {\n        this.nzMenuService.onDescendantMenuItemClick(this);\n\n        if (this.nzSubmenuService) {\n          /** menu item inside the submenu **/\n          this.nzSubmenuService.onChildMenuItemClick(this);\n        } else {\n          /** menu item inside the root menu **/\n          this.nzMenuService.onChildMenuItemClick(this);\n        }\n      }\n    }\n  }, {\n    key: \"setSelectedState\",\n    value: function setSelectedState(value) {\n      this.nzSelected = value;\n      this.selected$.next(value);\n    }\n  }, {\n    key: \"updateRouterActive\",\n    value: function updateRouterActive() {\n      var _this3 = this;\n\n      if (!this.listOfRouterLink || !this.listOfRouterLinkWithHref || !this.router || !this.router.navigated || !this.nzMatchRouter) {\n        return;\n      }\n\n      Promise.resolve().then(function () {\n        var hasActiveLinks = _this3.hasActiveLinks();\n\n        if (_this3.nzSelected !== hasActiveLinks) {\n          _this3.nzSelected = hasActiveLinks;\n\n          _this3.setSelectedState(_this3.nzSelected);\n\n          _this3.cdr.markForCheck();\n        }\n      });\n    }\n  }, {\n    key: \"hasActiveLinks\",\n    value: function hasActiveLinks() {\n      var isActiveCheckFn = this.isLinkActive(this.router);\n      return this.routerLink && isActiveCheckFn(this.routerLink) || this.routerLinkWithHref && isActiveCheckFn(this.routerLinkWithHref) || this.listOfRouterLink.some(isActiveCheckFn) || this.listOfRouterLinkWithHref.some(isActiveCheckFn);\n    }\n  }, {\n    key: \"isLinkActive\",\n    value: function isLinkActive(router) {\n      var _this4 = this;\n\n      return function (link) {\n        return router.isActive(link.urlTree || '', {\n          paths: _this4.nzMatchRouterExact ? 'exact' : 'subset',\n          queryParams: _this4.nzMatchRouterExact ? 'exact' : 'subset',\n          fragment: 'ignored',\n          matrixParams: 'ignored'\n        });\n      };\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this5 = this;\n\n      var _a;\n      /** store origin padding in padding */\n\n\n      combineLatest([this.nzMenuService.mode$, this.nzMenuService.inlineIndent$]).pipe(takeUntil(this.destroy$)).subscribe(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            mode = _ref4[0],\n            inlineIndent = _ref4[1];\n\n        _this5.inlinePaddingLeft = mode === 'inline' ? _this5.level * inlineIndent : null;\n      });\n      this.dir = this.directionality.value;\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this5.dir = direction;\n      });\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this6 = this;\n\n      this.listOfRouterLink.changes.pipe(takeUntil(this.destroy$)).subscribe(function () {\n        return _this6.updateRouterActive();\n      });\n      this.listOfRouterLinkWithHref.changes.pipe(takeUntil(this.destroy$)).subscribe(function () {\n        return _this6.updateRouterActive();\n      });\n      this.updateRouterActive();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.nzSelected) {\n        this.setSelectedState(this.nzSelected);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzMenuItemDirective;\n}();\n\nNzMenuItemDirective.ɵfac = function NzMenuItemDirective_Factory(t) {\n  return new (t || NzMenuItemDirective)(i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NzSubmenuService, 8), i0.ɵɵdirectiveInject(NzIsMenuInsideDropDownToken), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i4.RouterLink, 8), i0.ɵɵdirectiveInject(i4.RouterLinkWithHref, 8), i0.ɵɵdirectiveInject(i4.Router, 8));\n};\n\nNzMenuItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzMenuItemDirective,\n  selectors: [[\"\", \"nz-menu-item\", \"\"]],\n  contentQueries: function NzMenuItemDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, RouterLink, 5);\n      i0.ɵɵcontentQuery(dirIndex, RouterLinkWithHref, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLink = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLinkWithHref = _t);\n    }\n  },\n  hostVars: 20,\n  hostBindings: function NzMenuItemDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NzMenuItemDirective_click_HostBindingHandler($event) {\n        return ctx.clickMenuItem($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"padding-left\", ctx.dir === \"rtl\" ? null : ctx.nzPaddingLeft || ctx.inlinePaddingLeft, \"px\")(\"padding-right\", ctx.dir === \"rtl\" ? ctx.nzPaddingLeft || ctx.inlinePaddingLeft : null, \"px\");\n      i0.ɵɵclassProp(\"ant-dropdown-menu-item\", ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-item-selected\", ctx.isMenuInsideDropDown && ctx.nzSelected)(\"ant-dropdown-menu-item-danger\", ctx.isMenuInsideDropDown && ctx.nzDanger)(\"ant-dropdown-menu-item-disabled\", ctx.isMenuInsideDropDown && ctx.nzDisabled)(\"ant-menu-item\", !ctx.isMenuInsideDropDown)(\"ant-menu-item-selected\", !ctx.isMenuInsideDropDown && ctx.nzSelected)(\"ant-menu-item-danger\", !ctx.isMenuInsideDropDown && ctx.nzDanger)(\"ant-menu-item-disabled\", !ctx.isMenuInsideDropDown && ctx.nzDisabled);\n    }\n  },\n  inputs: {\n    nzPaddingLeft: \"nzPaddingLeft\",\n    nzDisabled: \"nzDisabled\",\n    nzSelected: \"nzSelected\",\n    nzDanger: \"nzDanger\",\n    nzMatchRouterExact: \"nzMatchRouterExact\",\n    nzMatchRouter: \"nzMatchRouter\"\n  },\n  exportAs: [\"nzMenuItem\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n__decorate([InputBoolean()], NzMenuItemDirective.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean()], NzMenuItemDirective.prototype, \"nzSelected\", void 0);\n\n__decorate([InputBoolean()], NzMenuItemDirective.prototype, \"nzDanger\", void 0);\n\n__decorate([InputBoolean()], NzMenuItemDirective.prototype, \"nzMatchRouterExact\", void 0);\n\n__decorate([InputBoolean()], NzMenuItemDirective.prototype, \"nzMatchRouter\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMenuItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-menu-item]',\n      exportAs: 'nzMenuItem',\n      host: {\n        '[class.ant-dropdown-menu-item]': \"isMenuInsideDropDown\",\n        '[class.ant-dropdown-menu-item-selected]': \"isMenuInsideDropDown && nzSelected\",\n        '[class.ant-dropdown-menu-item-danger]': \"isMenuInsideDropDown && nzDanger\",\n        '[class.ant-dropdown-menu-item-disabled]': \"isMenuInsideDropDown && nzDisabled\",\n        '[class.ant-menu-item]': \"!isMenuInsideDropDown\",\n        '[class.ant-menu-item-selected]': \"!isMenuInsideDropDown && nzSelected\",\n        '[class.ant-menu-item-danger]': \"!isMenuInsideDropDown && nzDanger\",\n        '[class.ant-menu-item-disabled]': \"!isMenuInsideDropDown && nzDisabled\",\n        '[style.paddingLeft.px]': \"dir === 'rtl' ? null : nzPaddingLeft || inlinePaddingLeft\",\n        '[style.paddingRight.px]': \"dir === 'rtl' ? nzPaddingLeft || inlinePaddingLeft : null\",\n        '(click)': 'clickMenuItem($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: MenuService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NzSubmenuService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NzIsMenuInsideDropDownToken]\n      }]\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i4.RouterLink,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i4.RouterLinkWithHref,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i4.Router,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzPaddingLeft: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzSelected: [{\n      type: Input\n    }],\n    nzDanger: [{\n      type: Input\n    }],\n    nzMatchRouterExact: [{\n      type: Input\n    }],\n    nzMatchRouter: [{\n      type: Input\n    }],\n    listOfRouterLink: [{\n      type: ContentChildren,\n      args: [RouterLink, {\n        descendants: true\n      }]\n    }],\n    listOfRouterLinkWithHref: [{\n      type: ContentChildren,\n      args: [RouterLinkWithHref, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n\nvar NzSubMenuTitleComponent = /*#__PURE__*/function () {\n  function NzSubMenuTitleComponent(cdr, directionality) {\n    _classCallCheck(this, NzSubMenuTitleComponent);\n\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this.nzIcon = null;\n    this.nzTitle = null;\n    this.isMenuInsideDropDown = false;\n    this.nzDisabled = false;\n    this.paddingLeft = null;\n    this.mode = 'vertical';\n    this.toggleSubMenu = new EventEmitter();\n    this.subMenuMouseState = new EventEmitter();\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzSubMenuTitleComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this7 = this;\n\n      var _a;\n\n      this.dir = this.directionality.value;\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this7.dir = direction;\n\n        _this7.cdr.detectChanges();\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"setMouseState\",\n    value: function setMouseState(state) {\n      if (!this.nzDisabled) {\n        this.subMenuMouseState.next(state);\n      }\n    }\n  }, {\n    key: \"clickTitle\",\n    value: function clickTitle() {\n      if (this.mode === 'inline' && !this.nzDisabled) {\n        this.toggleSubMenu.emit();\n      }\n    }\n  }]);\n\n  return NzSubMenuTitleComponent;\n}();\n\nNzSubMenuTitleComponent.ɵfac = function NzSubMenuTitleComponent_Factory(t) {\n  return new (t || NzSubMenuTitleComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n};\n\nNzSubMenuTitleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSubMenuTitleComponent,\n  selectors: [[\"\", \"nz-submenu-title\", \"\"]],\n  hostVars: 8,\n  hostBindings: function NzSubMenuTitleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NzSubMenuTitleComponent_click_HostBindingHandler() {\n        return ctx.clickTitle();\n      })(\"mouseenter\", function NzSubMenuTitleComponent_mouseenter_HostBindingHandler() {\n        return ctx.setMouseState(true);\n      })(\"mouseleave\", function NzSubMenuTitleComponent_mouseleave_HostBindingHandler() {\n        return ctx.setMouseState(false);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"padding-left\", ctx.dir === \"rtl\" ? null : ctx.paddingLeft, \"px\")(\"padding-right\", ctx.dir === \"rtl\" ? ctx.paddingLeft : null, \"px\");\n      i0.ɵɵclassProp(\"ant-dropdown-menu-submenu-title\", ctx.isMenuInsideDropDown)(\"ant-menu-submenu-title\", !ctx.isMenuInsideDropDown);\n    }\n  },\n  inputs: {\n    nzIcon: \"nzIcon\",\n    nzTitle: \"nzTitle\",\n    isMenuInsideDropDown: \"isMenuInsideDropDown\",\n    nzDisabled: \"nzDisabled\",\n    paddingLeft: \"paddingLeft\",\n    mode: \"mode\"\n  },\n  outputs: {\n    toggleSubMenu: \"toggleSubMenu\",\n    subMenuMouseState: \"subMenuMouseState\"\n  },\n  exportAs: [\"nzSubmenuTitle\"],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 6,\n  vars: 4,\n  consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [\"class\", \"ant-dropdown-menu-submenu-expand-icon\", 3, \"ngSwitch\", 4, \"ngIf\", \"ngIfElse\"], [\"notDropdownTpl\", \"\"], [\"nz-icon\", \"\", 3, \"nzType\"], [1, \"ant-dropdown-menu-submenu-expand-icon\", 3, \"ngSwitch\"], [\"nz-icon\", \"\", \"nzType\", \"left\", \"class\", \"ant-dropdown-menu-submenu-arrow-icon\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"right\", \"class\", \"ant-dropdown-menu-submenu-arrow-icon\", 4, \"ngSwitchDefault\"], [\"nz-icon\", \"\", \"nzType\", \"left\", 1, \"ant-dropdown-menu-submenu-arrow-icon\"], [\"nz-icon\", \"\", \"nzType\", \"right\", 1, \"ant-dropdown-menu-submenu-arrow-icon\"], [1, \"ant-menu-submenu-arrow\"]],\n  template: function NzSubMenuTitleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzSubMenuTitleComponent_i_0_Template, 1, 1, \"i\", 0);\n      i0.ɵɵtemplate(1, NzSubMenuTitleComponent_ng_container_1_Template, 3, 1, \"ng-container\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵtemplate(3, NzSubMenuTitleComponent_span_3_Template, 3, 2, \"span\", 2);\n      i0.ɵɵtemplate(4, NzSubMenuTitleComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r3 = i0.ɵɵreference(5);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.nzIcon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzTitle);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isMenuInsideDropDown)(\"ngIfElse\", _r3);\n    }\n  },\n  directives: [i2.NgIf, i3.NzIconDirective, i4$1.NzStringTemplateOutletDirective, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSubMenuTitleComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-submenu-title]',\n      exportAs: 'nzSubmenuTitle',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <i nz-icon [nzType]=\\\"nzIcon\\\" *ngIf=\\\"nzIcon\\\"></i>\\n    <ng-container *nzStringTemplateOutlet=\\\"nzTitle\\\">\\n      <span>{{ nzTitle }}</span>\\n    </ng-container>\\n    <ng-content></ng-content>\\n    <span\\n      [ngSwitch]=\\\"dir\\\"\\n      *ngIf=\\\"isMenuInsideDropDown; else notDropdownTpl\\\"\\n      class=\\\"ant-dropdown-menu-submenu-expand-icon\\\"\\n    >\\n      <i *ngSwitchCase=\\\"'rtl'\\\" nz-icon nzType=\\\"left\\\" class=\\\"ant-dropdown-menu-submenu-arrow-icon\\\"></i>\\n      <i *ngSwitchDefault nz-icon nzType=\\\"right\\\" class=\\\"ant-dropdown-menu-submenu-arrow-icon\\\"></i>\\n    </span>\\n    <ng-template #notDropdownTpl>\\n      <i class=\\\"ant-menu-submenu-arrow\\\"></i>\\n    </ng-template>\\n  \",\n      host: {\n        '[class.ant-dropdown-menu-submenu-title]': 'isMenuInsideDropDown',\n        '[class.ant-menu-submenu-title]': '!isMenuInsideDropDown',\n        '[style.paddingLeft.px]': \"dir === 'rtl' ? null : paddingLeft \",\n        '[style.paddingRight.px]': \"dir === 'rtl' ? paddingLeft : null\",\n        '(click)': 'clickTitle()',\n        '(mouseenter)': 'setMouseState(true)',\n        '(mouseleave)': 'setMouseState(false)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzIcon: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    isMenuInsideDropDown: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    paddingLeft: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    toggleSubMenu: [{\n      type: Output\n    }],\n    subMenuMouseState: [{\n      type: Output\n    }]\n  });\n})();\n\nvar NzSubmenuInlineChildComponent = /*#__PURE__*/function () {\n  function NzSubmenuInlineChildComponent(elementRef, renderer, directionality) {\n    _classCallCheck(this, NzSubmenuInlineChildComponent);\n\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.directionality = directionality;\n    this.templateOutlet = null;\n    this.menuClass = '';\n    this.mode = 'vertical';\n    this.nzOpen = false;\n    this.listOfCacheClassName = [];\n    this.expandState = 'collapsed';\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzSubmenuInlineChildComponent, [{\n    key: \"calcMotionState\",\n    value: function calcMotionState() {\n      if (this.nzOpen) {\n        this.expandState = 'expanded';\n      } else {\n        this.expandState = 'collapsed';\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this8 = this;\n\n      var _a;\n\n      this.calcMotionState();\n      this.dir = this.directionality.value;\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this8.dir = direction;\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this9 = this;\n\n      var mode = changes.mode,\n          nzOpen = changes.nzOpen,\n          menuClass = changes.menuClass;\n\n      if (mode || nzOpen) {\n        this.calcMotionState();\n      }\n\n      if (menuClass) {\n        if (this.listOfCacheClassName.length) {\n          this.listOfCacheClassName.filter(function (item) {\n            return !!item;\n          }).forEach(function (className) {\n            _this9.renderer.removeClass(_this9.elementRef.nativeElement, className);\n          });\n        }\n\n        if (this.menuClass) {\n          this.listOfCacheClassName = this.menuClass.split(' ');\n          this.listOfCacheClassName.filter(function (item) {\n            return !!item;\n          }).forEach(function (className) {\n            _this9.renderer.addClass(_this9.elementRef.nativeElement, className);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzSubmenuInlineChildComponent;\n}();\n\nNzSubmenuInlineChildComponent.ɵfac = function NzSubmenuInlineChildComponent_Factory(t) {\n  return new (t || NzSubmenuInlineChildComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n};\n\nNzSubmenuInlineChildComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSubmenuInlineChildComponent,\n  selectors: [[\"\", \"nz-submenu-inline-child\", \"\"]],\n  hostAttrs: [1, \"ant-menu\", \"ant-menu-inline\", \"ant-menu-sub\"],\n  hostVars: 3,\n  hostBindings: function NzSubmenuInlineChildComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@collapseMotion\", ctx.expandState);\n      i0.ɵɵclassProp(\"ant-menu-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    templateOutlet: \"templateOutlet\",\n    menuClass: \"menuClass\",\n    mode: \"mode\",\n    nzOpen: \"nzOpen\"\n  },\n  exportAs: [\"nzSubmenuInlineChild\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c2,\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngTemplateOutlet\"]],\n  template: function NzSubmenuInlineChildComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzSubmenuInlineChildComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.templateOutlet);\n    }\n  },\n  directives: [i2.NgTemplateOutlet],\n  encapsulation: 2,\n  data: {\n    animation: [collapseMotion]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSubmenuInlineChildComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-submenu-inline-child]',\n      animations: [collapseMotion],\n      exportAs: 'nzSubmenuInlineChild',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \" <ng-template [ngTemplateOutlet]=\\\"templateOutlet\\\"></ng-template> \",\n      host: {\n        class: 'ant-menu ant-menu-inline ant-menu-sub',\n        '[class.ant-menu-rtl]': \"dir === 'rtl'\",\n        '[@collapseMotion]': 'expandState'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    templateOutlet: [{\n      type: Input\n    }],\n    menuClass: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    nzOpen: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NzSubmenuNoneInlineChildComponent = /*#__PURE__*/function () {\n  function NzSubmenuNoneInlineChildComponent(directionality) {\n    _classCallCheck(this, NzSubmenuNoneInlineChildComponent);\n\n    this.directionality = directionality;\n    this.menuClass = '';\n    this.theme = 'light';\n    this.templateOutlet = null;\n    this.isMenuInsideDropDown = false;\n    this.mode = 'vertical';\n    this.position = 'right';\n    this.nzDisabled = false;\n    this.nzOpen = false;\n    this.subMenuMouseState = new EventEmitter();\n    this.expandState = 'collapsed';\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzSubmenuNoneInlineChildComponent, [{\n    key: \"setMouseState\",\n    value: function setMouseState(state) {\n      if (!this.nzDisabled) {\n        this.subMenuMouseState.next(state);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"calcMotionState\",\n    value: function calcMotionState() {\n      if (this.nzOpen) {\n        if (this.mode === 'horizontal') {\n          this.expandState = 'bottom';\n        } else if (this.mode === 'vertical') {\n          this.expandState = 'active';\n        }\n      } else {\n        this.expandState = 'collapsed';\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this10 = this;\n\n      var _a;\n\n      this.calcMotionState();\n      this.dir = this.directionality.value;\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this10.dir = direction;\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var mode = changes.mode,\n          nzOpen = changes.nzOpen;\n\n      if (mode || nzOpen) {\n        this.calcMotionState();\n      }\n    }\n  }]);\n\n  return NzSubmenuNoneInlineChildComponent;\n}();\n\nNzSubmenuNoneInlineChildComponent.ɵfac = function NzSubmenuNoneInlineChildComponent_Factory(t) {\n  return new (t || NzSubmenuNoneInlineChildComponent)(i0.ɵɵdirectiveInject(i1.Directionality, 8));\n};\n\nNzSubmenuNoneInlineChildComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSubmenuNoneInlineChildComponent,\n  selectors: [[\"\", \"nz-submenu-none-inline-child\", \"\"]],\n  hostAttrs: [1, \"ant-menu-submenu\", \"ant-menu-submenu-popup\"],\n  hostVars: 14,\n  hostBindings: function NzSubmenuNoneInlineChildComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function NzSubmenuNoneInlineChildComponent_mouseenter_HostBindingHandler() {\n        return ctx.setMouseState(true);\n      })(\"mouseleave\", function NzSubmenuNoneInlineChildComponent_mouseleave_HostBindingHandler() {\n        return ctx.setMouseState(false);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@slideMotion\", ctx.expandState)(\"@zoomBigMotion\", ctx.expandState);\n      i0.ɵɵclassProp(\"ant-menu-light\", ctx.theme === \"light\")(\"ant-menu-dark\", ctx.theme === \"dark\")(\"ant-menu-submenu-placement-bottom\", ctx.mode === \"horizontal\")(\"ant-menu-submenu-placement-right\", ctx.mode === \"vertical\" && ctx.position === \"right\")(\"ant-menu-submenu-placement-left\", ctx.mode === \"vertical\" && ctx.position === \"left\")(\"ant-menu-submenu-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    menuClass: \"menuClass\",\n    theme: \"theme\",\n    templateOutlet: \"templateOutlet\",\n    isMenuInsideDropDown: \"isMenuInsideDropDown\",\n    mode: \"mode\",\n    position: \"position\",\n    nzDisabled: \"nzDisabled\",\n    nzOpen: \"nzOpen\"\n  },\n  outputs: {\n    subMenuMouseState: \"subMenuMouseState\"\n  },\n  exportAs: [\"nzSubmenuNoneInlineChild\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c3,\n  decls: 2,\n  vars: 16,\n  consts: [[3, \"ngClass\"], [3, \"ngTemplateOutlet\"]],\n  template: function NzSubmenuNoneInlineChildComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NzSubmenuNoneInlineChildComponent_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-dropdown-menu\", ctx.isMenuInsideDropDown)(\"ant-menu\", !ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-vertical\", ctx.isMenuInsideDropDown)(\"ant-menu-vertical\", !ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-sub\", ctx.isMenuInsideDropDown)(\"ant-menu-sub\", !ctx.isMenuInsideDropDown)(\"ant-menu-rtl\", ctx.dir === \"rtl\");\n      i0.ɵɵproperty(\"ngClass\", ctx.menuClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.templateOutlet);\n    }\n  },\n  directives: [i2.NgClass, i2.NgTemplateOutlet],\n  encapsulation: 2,\n  data: {\n    animation: [zoomBigMotion, slideMotion]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSubmenuNoneInlineChildComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-submenu-none-inline-child]',\n      exportAs: 'nzSubmenuNoneInlineChild',\n      encapsulation: ViewEncapsulation.None,\n      animations: [zoomBigMotion, slideMotion],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <div\\n      [class.ant-dropdown-menu]=\\\"isMenuInsideDropDown\\\"\\n      [class.ant-menu]=\\\"!isMenuInsideDropDown\\\"\\n      [class.ant-dropdown-menu-vertical]=\\\"isMenuInsideDropDown\\\"\\n      [class.ant-menu-vertical]=\\\"!isMenuInsideDropDown\\\"\\n      [class.ant-dropdown-menu-sub]=\\\"isMenuInsideDropDown\\\"\\n      [class.ant-menu-sub]=\\\"!isMenuInsideDropDown\\\"\\n      [class.ant-menu-rtl]=\\\"dir === 'rtl'\\\"\\n      [ngClass]=\\\"menuClass\\\"\\n    >\\n      <ng-template [ngTemplateOutlet]=\\\"templateOutlet\\\"></ng-template>\\n    </div>\\n  \",\n      host: {\n        class: 'ant-menu-submenu ant-menu-submenu-popup',\n        '[class.ant-menu-light]': \"theme === 'light'\",\n        '[class.ant-menu-dark]': \"theme === 'dark'\",\n        '[class.ant-menu-submenu-placement-bottom]': \"mode === 'horizontal'\",\n        '[class.ant-menu-submenu-placement-right]': \"mode === 'vertical' && position === 'right'\",\n        '[class.ant-menu-submenu-placement-left]': \"mode === 'vertical' && position === 'left'\",\n        '[class.ant-menu-submenu-rtl]': 'dir ===\"rtl\"',\n        '[@slideMotion]': 'expandState',\n        '[@zoomBigMotion]': 'expandState',\n        '(mouseenter)': 'setMouseState(true)',\n        '(mouseleave)': 'setMouseState(false)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    menuClass: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    templateOutlet: [{\n      type: Input\n    }],\n    isMenuInsideDropDown: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzOpen: [{\n      type: Input\n    }],\n    subMenuMouseState: [{\n      type: Output\n    }]\n  });\n})();\n\nvar listOfVerticalPositions = [POSITION_MAP.rightTop, POSITION_MAP.right, POSITION_MAP.rightBottom, POSITION_MAP.leftTop, POSITION_MAP.left, POSITION_MAP.leftBottom];\nvar listOfHorizontalPositions = [POSITION_MAP.bottomLeft];\n\nvar NzSubMenuComponent = /*#__PURE__*/function () {\n  function NzSubMenuComponent(nzMenuService, cdr, nzSubmenuService, platform, isMenuInsideDropDown, directionality, noAnimation) {\n    _classCallCheck(this, NzSubMenuComponent);\n\n    this.nzMenuService = nzMenuService;\n    this.cdr = cdr;\n    this.nzSubmenuService = nzSubmenuService;\n    this.platform = platform;\n    this.isMenuInsideDropDown = isMenuInsideDropDown;\n    this.directionality = directionality;\n    this.noAnimation = noAnimation;\n    this.nzMenuClassName = '';\n    this.nzPaddingLeft = null;\n    this.nzTitle = null;\n    this.nzIcon = null;\n    this.nzOpen = false;\n    this.nzDisabled = false;\n    this.nzOpenChange = new EventEmitter();\n    this.cdkOverlayOrigin = null;\n    this.listOfNzSubMenuComponent = null;\n    this.listOfNzMenuItemDirective = null;\n    this.level = this.nzSubmenuService.level;\n    this.destroy$ = new Subject();\n    this.position = 'right';\n    this.triggerWidth = null;\n    this.theme = 'light';\n    this.mode = 'vertical';\n    this.inlinePaddingLeft = null;\n    this.overlayPositions = listOfVerticalPositions;\n    this.isSelected = false;\n    this.isActive = false;\n    this.dir = 'ltr';\n  }\n  /** set the submenu host open status directly **/\n\n\n  _createClass(NzSubMenuComponent, [{\n    key: \"setOpenStateWithoutDebounce\",\n    value: function setOpenStateWithoutDebounce(open) {\n      this.nzSubmenuService.setOpenStateWithoutDebounce(open);\n    }\n  }, {\n    key: \"toggleSubMenu\",\n    value: function toggleSubMenu() {\n      this.setOpenStateWithoutDebounce(!this.nzOpen);\n    }\n  }, {\n    key: \"setMouseEnterState\",\n    value: function setMouseEnterState(value) {\n      this.isActive = value;\n\n      if (this.mode !== 'inline') {\n        this.nzSubmenuService.setMouseEnterTitleOrOverlayState(value);\n      }\n    }\n  }, {\n    key: \"setTriggerWidth\",\n    value: function setTriggerWidth() {\n      if (this.mode === 'horizontal' && this.platform.isBrowser && this.cdkOverlayOrigin) {\n        /** TODO: fast dom **/\n        this.triggerWidth = this.cdkOverlayOrigin.nativeElement.getBoundingClientRect().width;\n      }\n    }\n  }, {\n    key: \"onPositionChange\",\n    value: function onPositionChange(position) {\n      var placement = getPlacementName(position);\n\n      if (placement === 'rightTop' || placement === 'rightBottom' || placement === 'right') {\n        this.position = 'right';\n      } else if (placement === 'leftTop' || placement === 'leftBottom' || placement === 'left') {\n        this.position = 'left';\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this11 = this;\n\n      var _a;\n      /** submenu theme update **/\n\n\n      this.nzMenuService.theme$.pipe(takeUntil(this.destroy$)).subscribe(function (theme) {\n        _this11.theme = theme;\n\n        _this11.cdr.markForCheck();\n      });\n      /** submenu mode update **/\n\n      this.nzSubmenuService.mode$.pipe(takeUntil(this.destroy$)).subscribe(function (mode) {\n        _this11.mode = mode;\n\n        if (mode === 'horizontal') {\n          _this11.overlayPositions = listOfHorizontalPositions;\n        } else if (mode === 'vertical') {\n          _this11.overlayPositions = listOfVerticalPositions;\n        }\n\n        _this11.cdr.markForCheck();\n      });\n      /** inlineIndent update **/\n\n      combineLatest([this.nzSubmenuService.mode$, this.nzMenuService.inlineIndent$]).pipe(takeUntil(this.destroy$)).subscribe(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            mode = _ref6[0],\n            inlineIndent = _ref6[1];\n\n        _this11.inlinePaddingLeft = mode === 'inline' ? _this11.level * inlineIndent : null;\n\n        _this11.cdr.markForCheck();\n      });\n      /** current submenu open status **/\n\n      this.nzSubmenuService.isCurrentSubMenuOpen$.pipe(takeUntil(this.destroy$)).subscribe(function (open) {\n        _this11.isActive = open;\n\n        if (open !== _this11.nzOpen) {\n          _this11.setTriggerWidth();\n\n          _this11.nzOpen = open;\n\n          _this11.nzOpenChange.emit(_this11.nzOpen);\n\n          _this11.cdr.markForCheck();\n        }\n      });\n      this.dir = this.directionality.value;\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this11.dir = direction;\n\n        _this11.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this12 = this;\n\n      this.setTriggerWidth();\n      var listOfNzMenuItemDirective = this.listOfNzMenuItemDirective;\n      var changes = listOfNzMenuItemDirective.changes;\n      var mergedObservable = merge.apply(void 0, [changes].concat(_toConsumableArray(listOfNzMenuItemDirective.map(function (menu) {\n        return menu.selected$;\n      }))));\n      changes.pipe(startWith(listOfNzMenuItemDirective), switchMap(function () {\n        return mergedObservable;\n      }), startWith(true), map(function () {\n        return listOfNzMenuItemDirective.some(function (e) {\n          return e.nzSelected;\n        });\n      }), takeUntil(this.destroy$)).subscribe(function (selected) {\n        _this12.isSelected = selected;\n\n        _this12.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzOpen = changes.nzOpen;\n\n      if (nzOpen) {\n        this.nzSubmenuService.setOpenStateWithoutDebounce(this.nzOpen);\n        this.setTriggerWidth();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzSubMenuComponent;\n}();\n\nNzSubMenuComponent.ɵfac = function NzSubMenuComponent_Factory(t) {\n  return new (t || NzSubMenuComponent)(i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NzSubmenuService), i0.ɵɵdirectiveInject(i3$1.Platform), i0.ɵɵdirectiveInject(NzIsMenuInsideDropDownToken), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i5.NzNoAnimationDirective, 9));\n};\n\nNzSubMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSubMenuComponent,\n  selectors: [[\"\", \"nz-submenu\", \"\"]],\n  contentQueries: function NzSubMenuComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzSubMenuComponent, 5);\n      i0.ɵɵcontentQuery(dirIndex, NzMenuItemDirective, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzSubMenuComponent = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzMenuItemDirective = _t);\n    }\n  },\n  viewQuery: function NzSubMenuComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CdkOverlayOrigin, 7, ElementRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);\n    }\n  },\n  hostVars: 34,\n  hostBindings: function NzSubMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-dropdown-menu-submenu\", ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-submenu-disabled\", ctx.isMenuInsideDropDown && ctx.nzDisabled)(\"ant-dropdown-menu-submenu-open\", ctx.isMenuInsideDropDown && ctx.nzOpen)(\"ant-dropdown-menu-submenu-selected\", ctx.isMenuInsideDropDown && ctx.isSelected)(\"ant-dropdown-menu-submenu-vertical\", ctx.isMenuInsideDropDown && ctx.mode === \"vertical\")(\"ant-dropdown-menu-submenu-horizontal\", ctx.isMenuInsideDropDown && ctx.mode === \"horizontal\")(\"ant-dropdown-menu-submenu-inline\", ctx.isMenuInsideDropDown && ctx.mode === \"inline\")(\"ant-dropdown-menu-submenu-active\", ctx.isMenuInsideDropDown && ctx.isActive)(\"ant-menu-submenu\", !ctx.isMenuInsideDropDown)(\"ant-menu-submenu-disabled\", !ctx.isMenuInsideDropDown && ctx.nzDisabled)(\"ant-menu-submenu-open\", !ctx.isMenuInsideDropDown && ctx.nzOpen)(\"ant-menu-submenu-selected\", !ctx.isMenuInsideDropDown && ctx.isSelected)(\"ant-menu-submenu-vertical\", !ctx.isMenuInsideDropDown && ctx.mode === \"vertical\")(\"ant-menu-submenu-horizontal\", !ctx.isMenuInsideDropDown && ctx.mode === \"horizontal\")(\"ant-menu-submenu-inline\", !ctx.isMenuInsideDropDown && ctx.mode === \"inline\")(\"ant-menu-submenu-active\", !ctx.isMenuInsideDropDown && ctx.isActive)(\"ant-menu-submenu-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzMenuClassName: \"nzMenuClassName\",\n    nzPaddingLeft: \"nzPaddingLeft\",\n    nzTitle: \"nzTitle\",\n    nzIcon: \"nzIcon\",\n    nzOpen: \"nzOpen\",\n    nzDisabled: \"nzDisabled\"\n  },\n  outputs: {\n    nzOpenChange: \"nzOpenChange\"\n  },\n  exportAs: [\"nzSubmenu\"],\n  features: [i0.ɵɵProvidersFeature([NzSubmenuService]), i0.ɵɵNgOnChangesFeature],\n  attrs: _c4,\n  ngContentSelectors: _c6,\n  decls: 8,\n  vars: 9,\n  consts: [[\"nz-submenu-title\", \"\", \"cdkOverlayOrigin\", \"\", 3, \"nzIcon\", \"nzTitle\", \"mode\", \"nzDisabled\", \"isMenuInsideDropDown\", \"paddingLeft\", \"subMenuMouseState\", \"toggleSubMenu\"], [\"origin\", \"cdkOverlayOrigin\"], [4, \"ngIf\"], [\"nz-submenu-inline-child\", \"\", 3, \"mode\", \"nzOpen\", \"nzNoAnimation\", \"menuClass\", \"templateOutlet\", 4, \"ngIf\", \"ngIfElse\"], [\"nonInlineTemplate\", \"\"], [\"subMenuTemplate\", \"\"], [\"nz-submenu-inline-child\", \"\", 3, \"mode\", \"nzOpen\", \"nzNoAnimation\", \"menuClass\", \"templateOutlet\"], [\"cdkConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayTransformOriginOn\", \"positionChange\"], [\"nz-submenu-none-inline-child\", \"\", 3, \"theme\", \"mode\", \"nzOpen\", \"position\", \"nzDisabled\", \"isMenuInsideDropDown\", \"templateOutlet\", \"menuClass\", \"nzNoAnimation\", \"subMenuMouseState\"]],\n  template: function NzSubMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c5);\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"subMenuMouseState\", function NzSubMenuComponent_Template_div_subMenuMouseState_0_listener($event) {\n        return ctx.setMouseEnterState($event);\n      })(\"toggleSubMenu\", function NzSubMenuComponent_Template_div_toggleSubMenu_0_listener() {\n        return ctx.toggleSubMenu();\n      });\n      i0.ɵɵtemplate(2, NzSubMenuComponent_ng_content_2_Template, 1, 0, \"ng-content\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, NzSubMenuComponent_div_3_Template, 1, 6, \"div\", 3);\n      i0.ɵɵtemplate(4, NzSubMenuComponent_ng_template_4_Template, 1, 5, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(6, NzSubMenuComponent_ng_template_6_Template, 1, 0, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r3 = i0.ɵɵreference(5);\n\n      i0.ɵɵproperty(\"nzIcon\", ctx.nzIcon)(\"nzTitle\", ctx.nzTitle)(\"mode\", ctx.mode)(\"nzDisabled\", ctx.nzDisabled)(\"isMenuInsideDropDown\", ctx.isMenuInsideDropDown)(\"paddingLeft\", ctx.nzPaddingLeft || ctx.inlinePaddingLeft);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.nzTitle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.mode === \"inline\")(\"ngIfElse\", _r3);\n    }\n  },\n  directives: [NzSubMenuTitleComponent, NzSubmenuInlineChildComponent, NzSubmenuNoneInlineChildComponent, i9.CdkOverlayOrigin, i2.NgIf, i5.NzNoAnimationDirective, i9.CdkConnectedOverlay],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzSubMenuComponent.prototype, \"nzOpen\", void 0);\n\n__decorate([InputBoolean()], NzSubMenuComponent.prototype, \"nzDisabled\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSubMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-submenu]',\n      exportAs: 'nzSubmenu',\n      providers: [NzSubmenuService],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      preserveWhitespaces: false,\n      template: \"\\n    <div\\n      nz-submenu-title\\n      cdkOverlayOrigin\\n      #origin=\\\"cdkOverlayOrigin\\\"\\n      [nzIcon]=\\\"nzIcon\\\"\\n      [nzTitle]=\\\"nzTitle\\\"\\n      [mode]=\\\"mode\\\"\\n      [nzDisabled]=\\\"nzDisabled\\\"\\n      [isMenuInsideDropDown]=\\\"isMenuInsideDropDown\\\"\\n      [paddingLeft]=\\\"nzPaddingLeft || inlinePaddingLeft\\\"\\n      (subMenuMouseState)=\\\"setMouseEnterState($event)\\\"\\n      (toggleSubMenu)=\\\"toggleSubMenu()\\\"\\n    >\\n      <ng-content select=\\\"[title]\\\" *ngIf=\\\"!nzTitle\\\"></ng-content>\\n    </div>\\n    <div\\n      *ngIf=\\\"mode === 'inline'; else nonInlineTemplate\\\"\\n      nz-submenu-inline-child\\n      [mode]=\\\"mode\\\"\\n      [nzOpen]=\\\"nzOpen\\\"\\n      [@.disabled]=\\\"noAnimation?.nzNoAnimation\\\"\\n      [nzNoAnimation]=\\\"noAnimation?.nzNoAnimation\\\"\\n      [menuClass]=\\\"nzMenuClassName\\\"\\n      [templateOutlet]=\\\"subMenuTemplate\\\"\\n    ></div>\\n    <ng-template #nonInlineTemplate>\\n      <ng-template\\n        cdkConnectedOverlay\\n        (positionChange)=\\\"onPositionChange($event)\\\"\\n        [cdkConnectedOverlayPositions]=\\\"overlayPositions\\\"\\n        [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n        [cdkConnectedOverlayWidth]=\\\"triggerWidth!\\\"\\n        [cdkConnectedOverlayOpen]=\\\"nzOpen\\\"\\n        [cdkConnectedOverlayTransformOriginOn]=\\\"'.ant-menu-submenu'\\\"\\n      >\\n        <div\\n          nz-submenu-none-inline-child\\n          [theme]=\\\"theme\\\"\\n          [mode]=\\\"mode\\\"\\n          [nzOpen]=\\\"nzOpen\\\"\\n          [position]=\\\"position\\\"\\n          [nzDisabled]=\\\"nzDisabled\\\"\\n          [isMenuInsideDropDown]=\\\"isMenuInsideDropDown\\\"\\n          [templateOutlet]=\\\"subMenuTemplate\\\"\\n          [menuClass]=\\\"nzMenuClassName\\\"\\n          [@.disabled]=\\\"noAnimation?.nzNoAnimation\\\"\\n          [nzNoAnimation]=\\\"noAnimation?.nzNoAnimation\\\"\\n          (subMenuMouseState)=\\\"setMouseEnterState($event)\\\"\\n        ></div>\\n      </ng-template>\\n    </ng-template>\\n\\n    <ng-template #subMenuTemplate>\\n      <ng-content></ng-content>\\n    </ng-template>\\n  \",\n      host: {\n        '[class.ant-dropdown-menu-submenu]': \"isMenuInsideDropDown\",\n        '[class.ant-dropdown-menu-submenu-disabled]': \"isMenuInsideDropDown && nzDisabled\",\n        '[class.ant-dropdown-menu-submenu-open]': \"isMenuInsideDropDown && nzOpen\",\n        '[class.ant-dropdown-menu-submenu-selected]': \"isMenuInsideDropDown && isSelected\",\n        '[class.ant-dropdown-menu-submenu-vertical]': \"isMenuInsideDropDown && mode === 'vertical'\",\n        '[class.ant-dropdown-menu-submenu-horizontal]': \"isMenuInsideDropDown && mode === 'horizontal'\",\n        '[class.ant-dropdown-menu-submenu-inline]': \"isMenuInsideDropDown && mode === 'inline'\",\n        '[class.ant-dropdown-menu-submenu-active]': \"isMenuInsideDropDown && isActive\",\n        '[class.ant-menu-submenu]': \"!isMenuInsideDropDown\",\n        '[class.ant-menu-submenu-disabled]': \"!isMenuInsideDropDown && nzDisabled\",\n        '[class.ant-menu-submenu-open]': \"!isMenuInsideDropDown && nzOpen\",\n        '[class.ant-menu-submenu-selected]': \"!isMenuInsideDropDown && isSelected\",\n        '[class.ant-menu-submenu-vertical]': \"!isMenuInsideDropDown && mode === 'vertical'\",\n        '[class.ant-menu-submenu-horizontal]': \"!isMenuInsideDropDown && mode === 'horizontal'\",\n        '[class.ant-menu-submenu-inline]': \"!isMenuInsideDropDown && mode === 'inline'\",\n        '[class.ant-menu-submenu-active]': \"!isMenuInsideDropDown && isActive\",\n        '[class.ant-menu-submenu-rtl]': \"dir === 'rtl'\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: MenuService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NzSubmenuService\n    }, {\n      type: i3$1.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NzIsMenuInsideDropDownToken]\n      }]\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i5.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    nzMenuClassName: [{\n      type: Input\n    }],\n    nzPaddingLeft: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzIcon: [{\n      type: Input\n    }],\n    nzOpen: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzOpenChange: [{\n      type: Output\n    }],\n    cdkOverlayOrigin: [{\n      type: ViewChild,\n      args: [CdkOverlayOrigin, {\n        static: true,\n        read: ElementRef\n      }]\n    }],\n    listOfNzSubMenuComponent: [{\n      type: ContentChildren,\n      args: [NzSubMenuComponent, {\n        descendants: true\n      }]\n    }],\n    listOfNzMenuItemDirective: [{\n      type: ContentChildren,\n      args: [NzMenuItemDirective, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n\nfunction MenuServiceFactory(serviceInsideDropDown, serviceOutsideDropDown) {\n  return serviceInsideDropDown ? serviceInsideDropDown : serviceOutsideDropDown;\n}\n\nfunction MenuDropDownTokenFactory(isMenuInsideDropDownToken) {\n  return isMenuInsideDropDownToken ? isMenuInsideDropDownToken : false;\n}\n\nvar NzMenuDirective = /*#__PURE__*/function () {\n  function NzMenuDirective(nzMenuService, isMenuInsideDropDown, cdr, directionality) {\n    _classCallCheck(this, NzMenuDirective);\n\n    this.nzMenuService = nzMenuService;\n    this.isMenuInsideDropDown = isMenuInsideDropDown;\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this.nzInlineIndent = 24;\n    this.nzTheme = 'light';\n    this.nzMode = 'vertical';\n    this.nzInlineCollapsed = false;\n    this.nzSelectable = !this.isMenuInsideDropDown;\n    this.nzClick = new EventEmitter();\n    this.actualMode = 'vertical';\n    this.dir = 'ltr';\n    this.inlineCollapsed$ = new BehaviorSubject(this.nzInlineCollapsed);\n    this.mode$ = new BehaviorSubject(this.nzMode);\n    this.destroy$ = new Subject();\n    this.listOfOpenedNzSubMenuComponent = [];\n  }\n\n  _createClass(NzMenuDirective, [{\n    key: \"setInlineCollapsed\",\n    value: function setInlineCollapsed(inlineCollapsed) {\n      this.nzInlineCollapsed = inlineCollapsed;\n      this.inlineCollapsed$.next(inlineCollapsed);\n    }\n  }, {\n    key: \"updateInlineCollapse\",\n    value: function updateInlineCollapse() {\n      if (this.listOfNzMenuItemDirective) {\n        if (this.nzInlineCollapsed) {\n          this.listOfOpenedNzSubMenuComponent = this.listOfNzSubMenuComponent.filter(function (submenu) {\n            return submenu.nzOpen;\n          });\n          this.listOfNzSubMenuComponent.forEach(function (submenu) {\n            return submenu.setOpenStateWithoutDebounce(false);\n          });\n        } else {\n          this.listOfOpenedNzSubMenuComponent.forEach(function (submenu) {\n            return submenu.setOpenStateWithoutDebounce(true);\n          });\n          this.listOfOpenedNzSubMenuComponent = [];\n        }\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this13 = this;\n\n      var _a;\n\n      combineLatest([this.inlineCollapsed$, this.mode$]).pipe(takeUntil(this.destroy$)).subscribe(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n            inlineCollapsed = _ref8[0],\n            mode = _ref8[1];\n\n        _this13.actualMode = inlineCollapsed ? 'vertical' : mode;\n\n        _this13.nzMenuService.setMode(_this13.actualMode);\n\n        _this13.cdr.markForCheck();\n      });\n      this.nzMenuService.descendantMenuItemClick$.pipe(takeUntil(this.destroy$)).subscribe(function (menu) {\n        _this13.nzClick.emit(menu);\n\n        if (_this13.nzSelectable && !menu.nzMatchRouter) {\n          _this13.listOfNzMenuItemDirective.forEach(function (item) {\n            return item.setSelectedState(item === menu);\n          });\n        }\n      });\n      this.dir = this.directionality.value;\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this13.dir = direction;\n\n        _this13.nzMenuService.setMode(_this13.actualMode);\n\n        _this13.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this14 = this;\n\n      this.inlineCollapsed$.pipe(takeUntil(this.destroy$)).subscribe(function () {\n        _this14.updateInlineCollapse();\n\n        _this14.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzInlineCollapsed = changes.nzInlineCollapsed,\n          nzInlineIndent = changes.nzInlineIndent,\n          nzTheme = changes.nzTheme,\n          nzMode = changes.nzMode;\n\n      if (nzInlineCollapsed) {\n        this.inlineCollapsed$.next(this.nzInlineCollapsed);\n      }\n\n      if (nzInlineIndent) {\n        this.nzMenuService.setInlineIndent(this.nzInlineIndent);\n      }\n\n      if (nzTheme) {\n        this.nzMenuService.setTheme(this.nzTheme);\n      }\n\n      if (nzMode) {\n        this.mode$.next(this.nzMode);\n\n        if (!changes.nzMode.isFirstChange() && this.listOfNzSubMenuComponent) {\n          this.listOfNzSubMenuComponent.forEach(function (submenu) {\n            return submenu.setOpenStateWithoutDebounce(false);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzMenuDirective;\n}();\n\nNzMenuDirective.ɵfac = function NzMenuDirective_Factory(t) {\n  return new (t || NzMenuDirective)(i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(NzIsMenuInsideDropDownToken), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n};\n\nNzMenuDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzMenuDirective,\n  selectors: [[\"\", \"nz-menu\", \"\"]],\n  contentQueries: function NzMenuDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzMenuItemDirective, 5);\n      i0.ɵɵcontentQuery(dirIndex, NzSubMenuComponent, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzMenuItemDirective = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzSubMenuComponent = _t);\n    }\n  },\n  hostVars: 34,\n  hostBindings: function NzMenuDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-dropdown-menu\", ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-root\", ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-light\", ctx.isMenuInsideDropDown && ctx.nzTheme === \"light\")(\"ant-dropdown-menu-dark\", ctx.isMenuInsideDropDown && ctx.nzTheme === \"dark\")(\"ant-dropdown-menu-vertical\", ctx.isMenuInsideDropDown && ctx.actualMode === \"vertical\")(\"ant-dropdown-menu-horizontal\", ctx.isMenuInsideDropDown && ctx.actualMode === \"horizontal\")(\"ant-dropdown-menu-inline\", ctx.isMenuInsideDropDown && ctx.actualMode === \"inline\")(\"ant-dropdown-menu-inline-collapsed\", ctx.isMenuInsideDropDown && ctx.nzInlineCollapsed)(\"ant-menu\", !ctx.isMenuInsideDropDown)(\"ant-menu-root\", !ctx.isMenuInsideDropDown)(\"ant-menu-light\", !ctx.isMenuInsideDropDown && ctx.nzTheme === \"light\")(\"ant-menu-dark\", !ctx.isMenuInsideDropDown && ctx.nzTheme === \"dark\")(\"ant-menu-vertical\", !ctx.isMenuInsideDropDown && ctx.actualMode === \"vertical\")(\"ant-menu-horizontal\", !ctx.isMenuInsideDropDown && ctx.actualMode === \"horizontal\")(\"ant-menu-inline\", !ctx.isMenuInsideDropDown && ctx.actualMode === \"inline\")(\"ant-menu-inline-collapsed\", !ctx.isMenuInsideDropDown && ctx.nzInlineCollapsed)(\"ant-menu-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzInlineIndent: \"nzInlineIndent\",\n    nzTheme: \"nzTheme\",\n    nzMode: \"nzMode\",\n    nzInlineCollapsed: \"nzInlineCollapsed\",\n    nzSelectable: \"nzSelectable\"\n  },\n  outputs: {\n    nzClick: \"nzClick\"\n  },\n  exportAs: [\"nzMenu\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NzMenuServiceLocalToken,\n    useClass: MenuService\n  },\n  /** use the top level service **/\n  {\n    provide: MenuService,\n    useFactory: MenuServiceFactory,\n    deps: [[new SkipSelf(), new Optional(), MenuService], NzMenuServiceLocalToken]\n  },\n  /** check if menu inside dropdown-menu component **/\n  {\n    provide: NzIsMenuInsideDropDownToken,\n    useFactory: MenuDropDownTokenFactory,\n    deps: [[new SkipSelf(), new Optional(), NzIsMenuInsideDropDownToken]]\n  }]), i0.ɵɵNgOnChangesFeature]\n});\n\n__decorate([InputBoolean()], NzMenuDirective.prototype, \"nzInlineCollapsed\", void 0);\n\n__decorate([InputBoolean()], NzMenuDirective.prototype, \"nzSelectable\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMenuDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-menu]',\n      exportAs: 'nzMenu',\n      providers: [{\n        provide: NzMenuServiceLocalToken,\n        useClass: MenuService\n      },\n      /** use the top level service **/\n      {\n        provide: MenuService,\n        useFactory: MenuServiceFactory,\n        deps: [[new SkipSelf(), new Optional(), MenuService], NzMenuServiceLocalToken]\n      },\n      /** check if menu inside dropdown-menu component **/\n      {\n        provide: NzIsMenuInsideDropDownToken,\n        useFactory: MenuDropDownTokenFactory,\n        deps: [[new SkipSelf(), new Optional(), NzIsMenuInsideDropDownToken]]\n      }],\n      host: {\n        '[class.ant-dropdown-menu]': \"isMenuInsideDropDown\",\n        '[class.ant-dropdown-menu-root]': \"isMenuInsideDropDown\",\n        '[class.ant-dropdown-menu-light]': \"isMenuInsideDropDown && nzTheme === 'light'\",\n        '[class.ant-dropdown-menu-dark]': \"isMenuInsideDropDown && nzTheme === 'dark'\",\n        '[class.ant-dropdown-menu-vertical]': \"isMenuInsideDropDown && actualMode === 'vertical'\",\n        '[class.ant-dropdown-menu-horizontal]': \"isMenuInsideDropDown && actualMode === 'horizontal'\",\n        '[class.ant-dropdown-menu-inline]': \"isMenuInsideDropDown && actualMode === 'inline'\",\n        '[class.ant-dropdown-menu-inline-collapsed]': \"isMenuInsideDropDown && nzInlineCollapsed\",\n        '[class.ant-menu]': \"!isMenuInsideDropDown\",\n        '[class.ant-menu-root]': \"!isMenuInsideDropDown\",\n        '[class.ant-menu-light]': \"!isMenuInsideDropDown && nzTheme === 'light'\",\n        '[class.ant-menu-dark]': \"!isMenuInsideDropDown && nzTheme === 'dark'\",\n        '[class.ant-menu-vertical]': \"!isMenuInsideDropDown && actualMode === 'vertical'\",\n        '[class.ant-menu-horizontal]': \"!isMenuInsideDropDown && actualMode === 'horizontal'\",\n        '[class.ant-menu-inline]': \"!isMenuInsideDropDown && actualMode === 'inline'\",\n        '[class.ant-menu-inline-collapsed]': \"!isMenuInsideDropDown && nzInlineCollapsed\",\n        '[class.ant-menu-rtl]': \"dir === 'rtl'\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: MenuService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NzIsMenuInsideDropDownToken]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    listOfNzMenuItemDirective: [{\n      type: ContentChildren,\n      args: [NzMenuItemDirective, {\n        descendants: true\n      }]\n    }],\n    listOfNzSubMenuComponent: [{\n      type: ContentChildren,\n      args: [NzSubMenuComponent, {\n        descendants: true\n      }]\n    }],\n    nzInlineIndent: [{\n      type: Input\n    }],\n    nzTheme: [{\n      type: Input\n    }],\n    nzMode: [{\n      type: Input\n    }],\n    nzInlineCollapsed: [{\n      type: Input\n    }],\n    nzSelectable: [{\n      type: Input\n    }],\n    nzClick: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nfunction MenuGroupFactory(isMenuInsideDropDownToken) {\n  return isMenuInsideDropDownToken ? isMenuInsideDropDownToken : false;\n}\n\nvar NzMenuGroupComponent = /*#__PURE__*/function () {\n  function NzMenuGroupComponent(elementRef, renderer, isMenuInsideDropDown) {\n    _classCallCheck(this, NzMenuGroupComponent);\n\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.isMenuInsideDropDown = isMenuInsideDropDown;\n    var className = this.isMenuInsideDropDown ? 'ant-dropdown-menu-item-group' : 'ant-menu-item-group';\n    this.renderer.addClass(elementRef.nativeElement, className);\n  }\n\n  _createClass(NzMenuGroupComponent, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var ulElement = this.titleElement.nativeElement.nextElementSibling;\n\n      if (ulElement) {\n        /** add classname to ul **/\n        var className = this.isMenuInsideDropDown ? 'ant-dropdown-menu-item-group-list' : 'ant-menu-item-group-list';\n        this.renderer.addClass(ulElement, className);\n      }\n    }\n  }]);\n\n  return NzMenuGroupComponent;\n}();\n\nNzMenuGroupComponent.ɵfac = function NzMenuGroupComponent_Factory(t) {\n  return new (t || NzMenuGroupComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NzIsMenuInsideDropDownToken));\n};\n\nNzMenuGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzMenuGroupComponent,\n  selectors: [[\"\", \"nz-menu-group\", \"\"]],\n  viewQuery: function NzMenuGroupComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c7, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.titleElement = _t.first);\n    }\n  },\n  inputs: {\n    nzTitle: \"nzTitle\"\n  },\n  exportAs: [\"nzMenuGroup\"],\n  features: [i0.ɵɵProvidersFeature([\n  /** check if menu inside dropdown-menu component **/\n  {\n    provide: NzIsMenuInsideDropDownToken,\n    useFactory: MenuGroupFactory,\n    deps: [[new SkipSelf(), new Optional(), NzIsMenuInsideDropDownToken]]\n  }])],\n  attrs: _c8,\n  ngContentSelectors: _c10,\n  decls: 5,\n  vars: 6,\n  consts: [[\"titleElement\", \"\"], [4, \"nzStringTemplateOutlet\"], [4, \"ngIf\"]],\n  template: function NzMenuGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c9);\n      i0.ɵɵelementStart(0, \"div\", null, 0);\n      i0.ɵɵtemplate(2, NzMenuGroupComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵtemplate(3, NzMenuGroupComponent_ng_content_3_Template, 1, 0, \"ng-content\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵprojection(4);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-menu-item-group-title\", !ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-item-group-title\", ctx.isMenuInsideDropDown);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzTitle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.nzTitle);\n    }\n  },\n  directives: [i4$1.NzStringTemplateOutletDirective, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMenuGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-menu-group]',\n      exportAs: 'nzMenuGroup',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [\n      /** check if menu inside dropdown-menu component **/\n      {\n        provide: NzIsMenuInsideDropDownToken,\n        useFactory: MenuGroupFactory,\n        deps: [[new SkipSelf(), new Optional(), NzIsMenuInsideDropDownToken]]\n      }],\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div\\n      [class.ant-menu-item-group-title]=\\\"!isMenuInsideDropDown\\\"\\n      [class.ant-dropdown-menu-item-group-title]=\\\"isMenuInsideDropDown\\\"\\n      #titleElement\\n    >\\n      <ng-container *nzStringTemplateOutlet=\\\"nzTitle\\\">{{ nzTitle }}</ng-container>\\n      <ng-content select=\\\"[title]\\\" *ngIf=\\\"!nzTitle\\\"></ng-content>\\n    </div>\\n    <ng-content></ng-content>\\n  \",\n      preserveWhitespaces: false\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NzIsMenuInsideDropDownToken]\n      }]\n    }];\n  }, {\n    nzTitle: [{\n      type: Input\n    }],\n    titleElement: [{\n      type: ViewChild,\n      args: ['titleElement']\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzMenuDividerDirective = /*#__PURE__*/_createClass(function NzMenuDividerDirective(elementRef, renderer) {\n  _classCallCheck(this, NzMenuDividerDirective);\n\n  this.elementRef = elementRef;\n  this.renderer = renderer;\n  this.renderer.addClass(elementRef.nativeElement, 'ant-dropdown-menu-item-divider');\n});\n\nNzMenuDividerDirective.ɵfac = function NzMenuDividerDirective_Factory(t) {\n  return new (t || NzMenuDividerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nNzMenuDividerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzMenuDividerDirective,\n  selectors: [[\"\", \"nz-menu-divider\", \"\"]],\n  exportAs: [\"nzMenuDivider\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMenuDividerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-menu-divider]',\n      exportAs: 'nzMenuDivider'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzMenuModule = /*#__PURE__*/_createClass(function NzMenuModule() {\n  _classCallCheck(this, NzMenuModule);\n});\n\nNzMenuModule.ɵfac = function NzMenuModule_Factory(t) {\n  return new (t || NzMenuModule)();\n};\n\nNzMenuModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzMenuModule,\n  declarations: [NzMenuDirective, NzMenuItemDirective, NzSubMenuComponent, NzMenuDividerDirective, NzMenuGroupComponent, NzSubMenuTitleComponent, NzSubmenuInlineChildComponent, NzSubmenuNoneInlineChildComponent],\n  imports: [BidiModule, CommonModule, PlatformModule, OverlayModule, NzIconModule, NzNoAnimationModule, NzOutletModule],\n  exports: [NzMenuDirective, NzMenuItemDirective, NzSubMenuComponent, NzMenuDividerDirective, NzMenuGroupComponent]\n});\nNzMenuModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, PlatformModule, OverlayModule, NzIconModule, NzNoAnimationModule, NzOutletModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, PlatformModule, OverlayModule, NzIconModule, NzNoAnimationModule, NzOutletModule],\n      declarations: [NzMenuDirective, NzMenuItemDirective, NzSubMenuComponent, NzMenuDividerDirective, NzMenuGroupComponent, NzSubMenuTitleComponent, NzSubmenuInlineChildComponent, NzSubmenuNoneInlineChildComponent],\n      exports: [NzMenuDirective, NzMenuItemDirective, NzSubMenuComponent, NzMenuDividerDirective, NzMenuGroupComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MenuDropDownTokenFactory, MenuGroupFactory, MenuService, MenuServiceFactory, NzIsMenuInsideDropDownToken, NzMenuDirective, NzMenuDividerDirective, NzMenuGroupComponent, NzMenuItemDirective, NzMenuModule, NzMenuServiceLocalToken, NzSubMenuComponent, NzSubMenuTitleComponent, NzSubmenuInlineChildComponent, NzSubmenuNoneInlineChildComponent, NzSubmenuService }; //# sourceMappingURL=ng-zorro-antd-menu.mjs.map","map":null,"metadata":{},"sourceType":"module"}