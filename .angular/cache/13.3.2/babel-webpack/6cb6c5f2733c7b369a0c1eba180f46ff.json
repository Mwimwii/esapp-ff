{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createForOfIteratorHelper.js\";\nimport _createClass from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Optional, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/dropdown';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport * as i4 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i5 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { __decorate } from 'tslib';\nimport { Router, ActivatedRoute, NavigationEnd, PRIMARY_OUTLET } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter, startWith } from 'rxjs/operators';\nimport { PREFIX } from 'ng-zorro-antd/core/logger';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * https://angular.io/errors/NG3003\n * An intermediate interface for {@link NzBreadCrumbComponent} & {@link NzBreadCrumbItemComponent}\n */\n\nfunction NzBreadCrumbItemComponent_ng_container_0_ng_template_2_Template(rf, ctx) {}\n\nfunction NzBreadCrumbItemComponent_ng_container_0_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 6);\n  }\n}\n\nfunction NzBreadCrumbItemComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 3);\n    i0.ɵɵtemplate(2, NzBreadCrumbItemComponent_ng_container_0_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵtemplate(3, NzBreadCrumbItemComponent_ng_container_0_i_3_Template, 1, 0, \"i\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n\n    var _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzDropdownMenu\", ctx_r0.nzOverlay);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r0.nzOverlay);\n  }\n}\n\nfunction NzBreadCrumbItemComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NzBreadCrumbItemComponent_span_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.nzBreadCrumbComponent.nzSeparator, \" \");\n  }\n}\n\nfunction NzBreadCrumbItemComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, NzBreadCrumbItemComponent_span_3_ng_container_1_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r3.nzBreadCrumbComponent.nzSeparator);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nfunction NzBreadCrumbComponent_ng_container_1_nz_breadcrumb_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-breadcrumb-item\")(1, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function NzBreadCrumbComponent_ng_container_1_nz_breadcrumb_item_1_Template_a_click_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r4);\n      var breadcrumb_r2 = restoredCtx.$implicit;\n      var ctx_r3 = i0.ɵɵnextContext(2);\n      return ctx_r3.navigate(breadcrumb_r2.url, $event);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var breadcrumb_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", breadcrumb_r2.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(breadcrumb_r2.label);\n  }\n}\n\nfunction NzBreadCrumbComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBreadCrumbComponent_ng_container_1_nz_breadcrumb_item_1_Template, 3, 2, \"nz-breadcrumb-item\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.breadcrumbs);\n  }\n}\n\nvar NzBreadcrumb = /*#__PURE__*/_createClass(function NzBreadcrumb() {\n  _classCallCheck(this, NzBreadcrumb);\n});\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzBreadCrumbItemComponent = /*#__PURE__*/_createClass(function NzBreadCrumbItemComponent(nzBreadCrumbComponent) {\n  _classCallCheck(this, NzBreadCrumbItemComponent);\n\n  this.nzBreadCrumbComponent = nzBreadCrumbComponent;\n});\n\nNzBreadCrumbItemComponent.ɵfac = function NzBreadCrumbItemComponent_Factory(t) {\n  return new (t || NzBreadCrumbItemComponent)(i0.ɵɵdirectiveInject(NzBreadcrumb));\n};\n\nNzBreadCrumbItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBreadCrumbItemComponent,\n  selectors: [[\"nz-breadcrumb-item\"]],\n  inputs: {\n    nzOverlay: \"nzOverlay\"\n  },\n  exportAs: [\"nzBreadcrumbItem\"],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"noMenuTpl\", \"\"], [\"class\", \"ant-breadcrumb-separator\", 4, \"ngIf\"], [\"nz-dropdown\", \"\", 1, \"ant-breadcrumb-overlay-link\", 3, \"nzDropdownMenu\"], [3, \"ngTemplateOutlet\"], [\"nz-icon\", \"\", \"nzType\", \"down\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"down\"], [1, \"ant-breadcrumb-link\"], [1, \"ant-breadcrumb-separator\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzBreadCrumbItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzBreadCrumbItemComponent_ng_container_0_Template, 4, 3, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NzBreadCrumbItemComponent_ng_template_1_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, NzBreadCrumbItemComponent_span_3_Template, 2, 1, \"span\", 2);\n    }\n\n    if (rf & 2) {\n      var _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", !!ctx.nzOverlay)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzBreadCrumbComponent.nzSeparator);\n    }\n  },\n  directives: [i2.NgIf, i3.NzDropDownDirective, i2.NgTemplateOutlet, i4.NzIconDirective, i5.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBreadCrumbItemComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-breadcrumb-item',\n      exportAs: 'nzBreadcrumbItem',\n      preserveWhitespaces: false,\n      template: \"\\n    <ng-container *ngIf=\\\"!!nzOverlay; else noMenuTpl\\\">\\n      <span class=\\\"ant-breadcrumb-overlay-link\\\" nz-dropdown [nzDropdownMenu]=\\\"nzOverlay\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"noMenuTpl\\\"></ng-template>\\n        <i *ngIf=\\\"!!nzOverlay\\\" nz-icon nzType=\\\"down\\\"></i>\\n      </span>\\n    </ng-container>\\n\\n    <ng-template #noMenuTpl>\\n      <span class=\\\"ant-breadcrumb-link\\\">\\n        <ng-content></ng-content>\\n      </span>\\n    </ng-template>\\n\\n    <span class=\\\"ant-breadcrumb-separator\\\" *ngIf=\\\"nzBreadCrumbComponent.nzSeparator\\\">\\n      <ng-container *nzStringTemplateOutlet=\\\"nzBreadCrumbComponent.nzSeparator\\\">\\n        {{ nzBreadCrumbComponent.nzSeparator }}\\n      </ng-container>\\n    </span>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NzBreadcrumb\n    }];\n  }, {\n    nzOverlay: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NzBreadCrumbComponent = /*#__PURE__*/function () {\n  function NzBreadCrumbComponent(injector, cdr, elementRef, renderer, directionality) {\n    _classCallCheck(this, NzBreadCrumbComponent);\n\n    this.injector = injector;\n    this.cdr = cdr;\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.directionality = directionality;\n    this.nzAutoGenerate = false;\n    this.nzSeparator = '/';\n    this.nzRouteLabel = 'breadcrumb';\n\n    this.nzRouteLabelFn = function (label) {\n      return label;\n    };\n\n    this.breadcrumbs = [];\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    renderer.addClass(elementRef.nativeElement, 'ant-breadcrumb');\n  }\n\n  _createClass(NzBreadCrumbComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      var _a;\n\n      if (this.nzAutoGenerate) {\n        this.registerRouterChange();\n      }\n\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this.dir = direction;\n\n        _this.prepareComponentForRtl();\n\n        _this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n      this.prepareComponentForRtl();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"navigate\",\n    value: function navigate(url, e) {\n      e.preventDefault();\n      this.injector.get(Router).navigateByUrl(url);\n    }\n  }, {\n    key: \"registerRouterChange\",\n    value: function registerRouterChange() {\n      var _this2 = this;\n\n      try {\n        var router = this.injector.get(Router);\n        var activatedRoute = this.injector.get(ActivatedRoute);\n        router.events.pipe(filter(function (e) {\n          return e instanceof NavigationEnd;\n        }), takeUntil(this.destroy$), startWith(true) // trigger initial render\n        ).subscribe(function () {\n          _this2.breadcrumbs = _this2.getBreadcrumbs(activatedRoute.root);\n\n          _this2.cdr.markForCheck();\n        });\n      } catch (e) {\n        throw new Error(\"\".concat(PREFIX, \" You should import RouterModule if you want to use 'NzAutoGenerate'.\"));\n      }\n    }\n  }, {\n    key: \"getBreadcrumbs\",\n    value: function getBreadcrumbs(route) {\n      var url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var breadcrumbs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var children = route.children; // If there's no sub root, then stop the recurse and returns the generated breadcrumbs.\n\n      if (children.length === 0) {\n        return breadcrumbs;\n      }\n\n      var _iterator = _createForOfIteratorHelper(children),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var child = _step.value;\n\n          if (child.outlet === PRIMARY_OUTLET) {\n            // Only parse components in primary router-outlet (in another word, router-outlet without a specific name).\n            // Parse this layer and generate a breadcrumb item.\n            var routeUrl = child.snapshot.url.map(function (segment) {\n              return segment.path;\n            }).filter(function (path) {\n              return path;\n            }).join('/'); // Do not change nextUrl if routeUrl is falsy. This happens when it's a route lazy loading other modules.\n\n            var nextUrl = routeUrl ? \"\".concat(url, \"/\").concat(routeUrl) : url;\n            var breadcrumbLabel = this.nzRouteLabelFn(child.snapshot.data[this.nzRouteLabel]); // If have data, go to generate a breadcrumb for it.\n\n            if (routeUrl && breadcrumbLabel) {\n              var breadcrumb = {\n                label: breadcrumbLabel,\n                params: child.snapshot.params,\n                url: nextUrl\n              };\n              breadcrumbs.push(breadcrumb);\n            }\n\n            return this.getBreadcrumbs(child, nextUrl, breadcrumbs);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return breadcrumbs;\n    }\n  }, {\n    key: \"prepareComponentForRtl\",\n    value: function prepareComponentForRtl() {\n      if (this.dir === 'rtl') {\n        this.renderer.addClass(this.elementRef.nativeElement, 'ant-breadcrumb-rtl');\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, 'ant-breadcrumb-rtl');\n      }\n    }\n  }]);\n\n  return NzBreadCrumbComponent;\n}();\n\nNzBreadCrumbComponent.ɵfac = function NzBreadCrumbComponent_Factory(t) {\n  return new (t || NzBreadCrumbComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n};\n\nNzBreadCrumbComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBreadCrumbComponent,\n  selectors: [[\"nz-breadcrumb\"]],\n  inputs: {\n    nzAutoGenerate: \"nzAutoGenerate\",\n    nzSeparator: \"nzSeparator\",\n    nzRouteLabel: \"nzRouteLabel\",\n    nzRouteLabelFn: \"nzRouteLabelFn\"\n  },\n  exportAs: [\"nzBreadcrumb\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NzBreadcrumb,\n    useExisting: NzBreadCrumbComponent\n  }])],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function NzBreadCrumbComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵtemplate(1, NzBreadCrumbComponent_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzAutoGenerate && ctx.breadcrumbs.length);\n    }\n  },\n  directives: [NzBreadCrumbItemComponent, i2.NgIf, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzBreadCrumbComponent.prototype, \"nzAutoGenerate\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBreadCrumbComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-breadcrumb',\n      exportAs: 'nzBreadcrumb',\n      preserveWhitespaces: false,\n      providers: [{\n        provide: NzBreadcrumb,\n        useExisting: NzBreadCrumbComponent\n      }],\n      template: \"\\n    <ng-content></ng-content>\\n    <ng-container *ngIf=\\\"nzAutoGenerate && breadcrumbs.length\\\">\\n      <nz-breadcrumb-item *ngFor=\\\"let breadcrumb of breadcrumbs\\\">\\n        <a [attr.href]=\\\"breadcrumb.url\\\" (click)=\\\"navigate(breadcrumb.url, $event)\\\">{{ breadcrumb.label }}</a>\\n      </nz-breadcrumb-item>\\n    </ng-container>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzAutoGenerate: [{\n      type: Input\n    }],\n    nzSeparator: [{\n      type: Input\n    }],\n    nzRouteLabel: [{\n      type: Input\n    }],\n    nzRouteLabelFn: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzBreadCrumbSeparatorComponent = /*#__PURE__*/_createClass(function NzBreadCrumbSeparatorComponent() {\n  _classCallCheck(this, NzBreadCrumbSeparatorComponent);\n});\n\nNzBreadCrumbSeparatorComponent.ɵfac = function NzBreadCrumbSeparatorComponent_Factory(t) {\n  return new (t || NzBreadCrumbSeparatorComponent)();\n};\n\nNzBreadCrumbSeparatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBreadCrumbSeparatorComponent,\n  selectors: [[\"nz-breadcrumb-separator\"]],\n  exportAs: [\"nzBreadcrumbSeparator\"],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"ant-breadcrumb-separator\"]],\n  template: function NzBreadCrumbSeparatorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBreadCrumbSeparatorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-breadcrumb-separator',\n      exportAs: 'nzBreadcrumbSeparator',\n      template: \"\\n    <span class=\\\"ant-breadcrumb-separator\\\">\\n      <ng-content></ng-content>\\n    </span>\\n  \"\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzBreadCrumbModule = /*#__PURE__*/_createClass(function NzBreadCrumbModule() {\n  _classCallCheck(this, NzBreadCrumbModule);\n});\n\nNzBreadCrumbModule.ɵfac = function NzBreadCrumbModule_Factory(t) {\n  return new (t || NzBreadCrumbModule)();\n};\n\nNzBreadCrumbModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzBreadCrumbModule,\n  declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent],\n  imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule],\n  exports: [BidiModule, NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent]\n});\nNzBreadCrumbModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule], BidiModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBreadCrumbModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule],\n      declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent],\n      exports: [BidiModule, NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbModule, NzBreadCrumbSeparatorComponent }; //# sourceMappingURL=ng-zorro-antd-breadcrumb.mjs.map","map":null,"metadata":{},"sourceType":"module"}