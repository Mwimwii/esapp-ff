{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { presetColors, statusColors, isPresetColor, isStatusColor } from 'ng-zorro-antd/core/color';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { FormsModule } from '@angular/forms';\n\nfunction NzTagComponent_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 1);\n    i0.ɵɵlistener(\"click\", function NzTagComponent_i_1_Template_i_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.closeTag($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nvar _c0 = [\"*\"];\n\nvar NzTagComponent = /*#__PURE__*/function () {\n  function NzTagComponent(cdr, renderer, elementRef, directionality) {\n    _classCallCheck(this, NzTagComponent);\n\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.directionality = directionality;\n    this.isPresetColor = false;\n    this.nzMode = 'default';\n    this.nzChecked = false;\n    this.nzOnClose = new EventEmitter();\n    this.nzCheckedChange = new EventEmitter();\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzTagComponent, [{\n    key: \"updateCheckedStatus\",\n    value: function updateCheckedStatus() {\n      if (this.nzMode === 'checkable') {\n        this.nzChecked = !this.nzChecked;\n        this.nzCheckedChange.emit(this.nzChecked);\n      }\n    }\n  }, {\n    key: \"closeTag\",\n    value: function closeTag(e) {\n      this.nzOnClose.emit(e);\n\n      if (!e.defaultPrevented) {\n        this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n      }\n    }\n  }, {\n    key: \"clearPresetColor\",\n    value: function clearPresetColor() {\n      var _hostElement$classLis;\n\n      var hostElement = this.elementRef.nativeElement; // /(ant-tag-(?:pink|red|...))/g\n\n      var regexp = new RegExp(\"(ant-tag-(?:\".concat([].concat(_toConsumableArray(presetColors), _toConsumableArray(statusColors)).join('|'), \"))\"), 'g');\n      var classname = hostElement.classList.toString();\n      var matches = [];\n      var match = regexp.exec(classname);\n\n      while (match !== null) {\n        matches.push(match[1]);\n        match = regexp.exec(classname);\n      }\n\n      (_hostElement$classLis = hostElement.classList).remove.apply(_hostElement$classLis, matches);\n    }\n  }, {\n    key: \"setPresetColor\",\n    value: function setPresetColor() {\n      var hostElement = this.elementRef.nativeElement;\n      this.clearPresetColor();\n\n      if (!this.nzColor) {\n        this.isPresetColor = false;\n      } else {\n        this.isPresetColor = isPresetColor(this.nzColor) || isStatusColor(this.nzColor);\n      }\n\n      if (this.isPresetColor) {\n        hostElement.classList.add(\"ant-tag-\".concat(this.nzColor));\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      var _a;\n\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this.dir = direction;\n\n        _this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzColor = changes.nzColor;\n\n      if (nzColor) {\n        this.setPresetColor();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzTagComponent;\n}();\n\nNzTagComponent.ɵfac = function NzTagComponent_Factory(t) {\n  return new (t || NzTagComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n};\n\nNzTagComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTagComponent,\n  selectors: [[\"nz-tag\"]],\n  hostAttrs: [1, \"ant-tag\"],\n  hostVars: 10,\n  hostBindings: function NzTagComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NzTagComponent_click_HostBindingHandler() {\n        return ctx.updateCheckedStatus();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"background-color\", ctx.isPresetColor ? \"\" : ctx.nzColor);\n      i0.ɵɵclassProp(\"ant-tag-has-color\", ctx.nzColor && !ctx.isPresetColor)(\"ant-tag-checkable\", ctx.nzMode === \"checkable\")(\"ant-tag-checkable-checked\", ctx.nzChecked)(\"ant-tag-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzMode: \"nzMode\",\n    nzColor: \"nzColor\",\n    nzChecked: \"nzChecked\"\n  },\n  outputs: {\n    nzOnClose: \"nzOnClose\",\n    nzCheckedChange: \"nzCheckedChange\"\n  },\n  exportAs: [\"nzTag\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 1,\n  consts: [[\"nz-icon\", \"\", \"nzType\", \"close\", \"class\", \"ant-tag-close-icon\", \"tabindex\", \"-1\", 3, \"click\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"close\", \"tabindex\", \"-1\", 1, \"ant-tag-close-icon\", 3, \"click\"]],\n  template: function NzTagComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵtemplate(1, NzTagComponent_i_1_Template, 1, 0, \"i\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzMode === \"closeable\");\n    }\n  },\n  directives: [i2.NgIf, i3.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzTagComponent.prototype, \"nzChecked\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTagComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tag',\n      exportAs: 'nzTag',\n      preserveWhitespaces: false,\n      template: \"\\n    <ng-content></ng-content>\\n    <i\\n      nz-icon\\n      nzType=\\\"close\\\"\\n      class=\\\"ant-tag-close-icon\\\"\\n      *ngIf=\\\"nzMode === 'closeable'\\\"\\n      tabindex=\\\"-1\\\"\\n      (click)=\\\"closeTag($event)\\\"\\n    ></i>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'ant-tag',\n        '[style.background-color]': \"isPresetColor ? '' : nzColor\",\n        '[class.ant-tag-has-color]': \"nzColor && !isPresetColor\",\n        '[class.ant-tag-checkable]': \"nzMode === 'checkable'\",\n        '[class.ant-tag-checkable-checked]': \"nzChecked\",\n        '[class.ant-tag-rtl]': \"dir === 'rtl'\",\n        '(click)': 'updateCheckedStatus()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzMode: [{\n      type: Input\n    }],\n    nzColor: [{\n      type: Input\n    }],\n    nzChecked: [{\n      type: Input\n    }],\n    nzOnClose: [{\n      type: Output\n    }],\n    nzCheckedChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTagModule = /*#__PURE__*/_createClass(function NzTagModule() {\n  _classCallCheck(this, NzTagModule);\n});\n\nNzTagModule.ɵfac = function NzTagModule_Factory(t) {\n  return new (t || NzTagModule)();\n};\n\nNzTagModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzTagModule,\n  declarations: [NzTagComponent],\n  imports: [BidiModule, CommonModule, FormsModule, NzIconModule],\n  exports: [NzTagComponent]\n});\nNzTagModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, FormsModule, NzIconModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTagModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, FormsModule, NzIconModule],\n      declarations: [NzTagComponent],\n      exports: [NzTagComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzTagComponent, NzTagModule }; //# sourceMappingURL=ng-zorro-antd-tag.mjs.map","map":null,"metadata":{},"sourceType":"module"}