{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _createClass from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _inherits from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport { __decorate } from 'tslib';\nimport { TAB, ESCAPE, BACKSPACE } from '@angular/cdk/keycodes';\nimport * as i9 from '@angular/cdk/overlay';\nimport { CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Self, Injector, forwardRef, Component, Optional, Host, Input, Output, ViewChild, ContentChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { Subject, merge, of } from 'rxjs';\nimport { takeUntil, tap, filter } from 'rxjs/operators';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport * as i2 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzTreeBaseService, NzTreeBase, NzTreeHigherOrderServiceToken } from 'ng-zorro-antd/core/tree';\nimport { isNotNil, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i8 from 'ng-zorro-antd/select';\nimport { NzSelectSearchComponent, NzSelectModule } from 'ng-zorro-antd/select';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i4 from '@angular/cdk/a11y';\nimport * as i5 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i6 from 'ng-zorro-antd/tree';\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\nimport * as i7 from 'ng-zorro-antd/empty';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport * as i10 from 'ng-zorro-antd/core/overlay';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport * as i11 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nvar _c0 = [\"nzTreeTemplate\"];\nvar _c1 = [\"treeRef\"];\n\nfunction NzTreeSelectComponent_ng_template_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵelement(1, \"nz-embed-empty\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzComponentName\", \"tree-select\")(\"specificContent\", ctx_r7.nzNotFoundContent);\n  }\n}\n\nvar _c2 = function _c2() {\n  return [];\n};\n\nfunction NzTreeSelectComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"nz-tree\", 8, 9);\n    i0.ɵɵlistener(\"nzExpandChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzExpandChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onExpandedKeysChange($event);\n    })(\"nzClick\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.nzTreeClick.emit($event);\n    })(\"nzCheckedKeysChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzCheckedKeysChange_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.updateSelectedNodes();\n    })(\"nzSelectedKeysChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzSelectedKeysChange_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.updateSelectedNodes();\n    })(\"nzCheckBoxChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzCheckBoxChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.nzTreeCheckBoxChange.emit($event);\n    })(\"nzSearchValueChange\", function NzTreeSelectComponent_ng_template_0_Template_nz_tree_nzSearchValueChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.setSearchValues($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NzTreeSelectComponent_ng_template_0_span_3_Template, 2, 2, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-select-dropdown-placement-bottomLeft\", ctx_r0.dropDownPosition === \"bottom\")(\"ant-select-dropdown-placement-topLeft\", ctx_r0.dropDownPosition === \"top\")(\"ant-tree-select-dropdown-rtl\", ctx_r0.dir === \"rtl\");\n    i0.ɵɵproperty(\"@slideMotion\", \"enter\")(\"ngClass\", ctx_r0.dropdownClassName)(\"@.disabled\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"dir\", ctx_r0.dir)(\"ngStyle\", ctx_r0.nzDropdownStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", ctx_r0.isNotFound)(\"nzData\", ctx_r0.nzNodes)(\"nzMultiple\", ctx_r0.nzMultiple)(\"nzSearchValue\", ctx_r0.inputValue)(\"nzHideUnMatched\", ctx_r0.nzHideUnMatched)(\"nzShowIcon\", ctx_r0.nzShowIcon)(\"nzCheckable\", ctx_r0.nzCheckable)(\"nzAsyncData\", ctx_r0.nzAsyncData)(\"nzShowExpand\", ctx_r0.nzShowExpand)(\"nzShowLine\", ctx_r0.nzShowLine)(\"nzExpandedIcon\", ctx_r0.nzExpandedIcon)(\"nzExpandAll\", ctx_r0.nzDefaultExpandAll)(\"nzExpandedKeys\", ctx_r0.expandedKeys)(\"nzCheckedKeys\", ctx_r0.nzCheckable ? ctx_r0.value : i0.ɵɵpureFunction0(34, _c2))(\"nzSelectedKeys\", !ctx_r0.nzCheckable ? ctx_r0.value : i0.ɵɵpureFunction0(35, _c2))(\"nzTreeTemplate\", ctx_r0.treeTemplate)(\"nzCheckStrictly\", ctx_r0.nzCheckStrictly)(\"nzVirtualItemSize\", ctx_r0.nzVirtualItemSize)(\"nzVirtualMaxBufferPx\", ctx_r0.nzVirtualMaxBufferPx)(\"nzVirtualMinBufferPx\", ctx_r0.nzVirtualMinBufferPx)(\"nzVirtualHeight\", ctx_r0.nzVirtualHeight);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nzNodes.length === 0 || ctx_r0.isNotFound);\n  }\n}\n\nfunction NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-select-item\", 15);\n    i0.ɵɵlistener(\"delete\", function NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template_nz_select_item_delete_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r19);\n      var node_r17 = restoredCtx.$implicit;\n      var ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.removeSelected(node_r17, true);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var node_r17 = ctx.$implicit;\n    var ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"deletable\", true)(\"disabled\", node_r17.isDisabled || ctx_r15.nzDisabled)(\"label\", ctx_r15.nzDisplayWith(node_r17));\n  }\n}\n\nfunction NzTreeSelectComponent_ng_container_2_nz_select_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-item\", 16);\n    i0.ɵɵpipe(1, \"slice\");\n  }\n\n  if (rf & 2) {\n    var ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"contentTemplateOutlet\", ctx_r16.nzMaxTagPlaceholder)(\"contentTemplateOutletContext\", i0.ɵɵpipeBind2(1, 5, ctx_r16.selectedNodes, ctx_r16.nzMaxTagCount))(\"deletable\", false)(\"disabled\", false)(\"label\", \"+ \" + (ctx_r16.selectedNodes.length - ctx_r16.nzMaxTagCount) + \" ...\");\n  }\n}\n\nfunction NzTreeSelectComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTreeSelectComponent_ng_container_2_nz_select_item_1_Template, 1, 3, \"nz-select-item\", 13);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵtemplate(3, NzTreeSelectComponent_ng_container_2_nz_select_item_3_Template, 2, 8, \"nz-select-item\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(2, 3, ctx_r1.selectedNodes, 0, ctx_r1.nzMaxTagCount))(\"ngForTrackBy\", ctx_r1.trackValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedNodes.length > ctx_r1.nzMaxTagCount);\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_placeholder_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-placeholder\", 17);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"display\", ctx_r2.placeHolderDisplay);\n    i0.ɵɵproperty(\"placeholder\", ctx_r2.nzPlaceHolder);\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-item\", 18);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"deletable\", false)(\"disabled\", false)(\"label\", ctx_r3.nzDisplayWith(ctx_r3.selectedNodes[0]));\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_arrow_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-select-arrow\");\n  }\n}\n\nfunction NzTreeSelectComponent_nz_select_clear_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nz-select-clear\", 19);\n    i0.ɵɵlistener(\"clear\", function NzTreeSelectComponent_nz_select_clear_7_Template_nz_select_clear_clear_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      var ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.onClearSelection();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nvar NzTreeSelectService = /*#__PURE__*/function (_NzTreeBaseService) {\n  _inherits(NzTreeSelectService, _NzTreeBaseService);\n\n  var _super = _createSuper(NzTreeSelectService);\n\n  function NzTreeSelectService() {\n    _classCallCheck(this, NzTreeSelectService);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(NzTreeSelectService);\n}(NzTreeBaseService);\n\nNzTreeSelectService.ɵfac = /* @__PURE__ */function () {\n  var ɵNzTreeSelectService_BaseFactory;\n  return function NzTreeSelectService_Factory(t) {\n    return (ɵNzTreeSelectService_BaseFactory || (ɵNzTreeSelectService_BaseFactory = i0.ɵɵgetInheritedFactory(NzTreeSelectService)))(t || NzTreeSelectService);\n  };\n}();\n\nNzTreeSelectService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NzTreeSelectService,\n  factory: NzTreeSelectService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeSelectService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nfunction higherOrderServiceFactory(injector) {\n  return injector.get(NzTreeSelectService);\n}\n\nvar NZ_CONFIG_MODULE_NAME = 'treeSelect';\nvar TREE_SELECT_DEFAULT_CLASS = 'ant-select-dropdown ant-select-tree-dropdown';\n\nvar NzTreeSelectComponent = /*#__PURE__*/function (_NzTreeBase) {\n  _inherits(NzTreeSelectComponent, _NzTreeBase);\n\n  var _super2 = _createSuper(NzTreeSelectComponent);\n\n  function NzTreeSelectComponent(nzTreeService, nzConfigService, renderer, cdr, elementRef, directionality, focusMonitor, noAnimation) {\n    var _this;\n\n    _classCallCheck(this, NzTreeSelectComponent);\n\n    _this = _super2.call(this, nzTreeService);\n    _this.nzConfigService = nzConfigService;\n    _this.renderer = renderer;\n    _this.cdr = cdr;\n    _this.elementRef = elementRef;\n    _this.directionality = directionality;\n    _this.focusMonitor = focusMonitor;\n    _this.noAnimation = noAnimation;\n    _this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    _this.nzId = null;\n    _this.nzAllowClear = true;\n    _this.nzShowExpand = true;\n    _this.nzShowLine = false;\n    _this.nzDropdownMatchSelectWidth = true;\n    _this.nzCheckable = false;\n    _this.nzHideUnMatched = false;\n    _this.nzShowIcon = false;\n    _this.nzShowSearch = false;\n    _this.nzDisabled = false;\n    _this.nzAsyncData = false;\n    _this.nzMultiple = false;\n    _this.nzDefaultExpandAll = false;\n    _this.nzCheckStrictly = false;\n    _this.nzVirtualItemSize = 28;\n    _this.nzVirtualMaxBufferPx = 500;\n    _this.nzVirtualMinBufferPx = 28;\n    _this.nzVirtualHeight = null;\n    _this.nzNodes = [];\n    _this.nzOpen = false;\n    _this.nzSize = 'default';\n    _this.nzPlaceHolder = '';\n    _this.nzDropdownStyle = null;\n    _this.nzBackdrop = false;\n\n    _this.nzDisplayWith = function (node) {\n      return node.title;\n    };\n\n    _this.nzMaxTagPlaceholder = null;\n    _this.nzOpenChange = new EventEmitter();\n    _this.nzCleared = new EventEmitter();\n    _this.nzRemoved = new EventEmitter();\n    _this.nzExpandChange = new EventEmitter();\n    _this.nzTreeClick = new EventEmitter();\n    _this.nzTreeCheckBoxChange = new EventEmitter();\n    _this.dropdownClassName = TREE_SELECT_DEFAULT_CLASS;\n    _this.isComposing = false;\n    _this.isDestroy = true;\n    _this.isNotFound = false;\n    _this.focused = false;\n    _this.inputValue = '';\n    _this.dropDownPosition = 'bottom';\n    _this.selectedNodes = [];\n    _this.expandedKeys = [];\n    _this.value = [];\n    _this.dir = 'ltr';\n    _this.destroy$ = new Subject();\n\n    _this.onChange = function (_value) {};\n\n    _this.onTouched = function () {};\n\n    _this.renderer.addClass(_this.elementRef.nativeElement, 'ant-select');\n\n    _this.renderer.addClass(_this.elementRef.nativeElement, 'ant-tree-select');\n\n    return _this;\n  }\n\n  _createClass(NzTreeSelectComponent, [{\n    key: \"nzExpandedKeys\",\n    get: function get() {\n      return this.expandedKeys;\n    },\n    set: function set(value) {\n      this.expandedKeys = value;\n    }\n  }, {\n    key: \"treeTemplate\",\n    get: function get() {\n      return this.nzTreeTemplate || this.nzTreeTemplateChild;\n    }\n  }, {\n    key: \"placeHolderDisplay\",\n    get: function get() {\n      return this.inputValue || this.isComposing || this.selectedNodes.length ? 'none' : 'block';\n    }\n  }, {\n    key: \"isMultiple\",\n    get: function get() {\n      return this.nzMultiple || this.nzCheckable;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      var _a;\n\n      this.isDestroy = false;\n      this.subscribeSelectionChange();\n      (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this2.dir = direction;\n\n        _this2.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n      this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(function (focusOrigin) {\n        if (!focusOrigin) {\n          _this2.focused = false;\n\n          _this2.cdr.markForCheck();\n\n          Promise.resolve().then(function () {\n            _this2.onTouched();\n          });\n        } else {\n          _this2.focused = true;\n\n          _this2.cdr.markForCheck();\n        }\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.isDestroy = true;\n      this.closeDropDown();\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"isComposingChange\",\n    value: function isComposingChange(isComposing) {\n      this.isComposing = isComposing;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.nzDisabled = isDisabled;\n      this.closeDropDown();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzNodes = changes.nzNodes,\n          nzDropdownClassName = changes.nzDropdownClassName;\n\n      if (nzNodes) {\n        this.updateSelectedNodes(true);\n      }\n\n      if (nzDropdownClassName) {\n        var className = this.nzDropdownClassName && this.nzDropdownClassName.trim();\n        this.dropdownClassName = className ? \"\".concat(TREE_SELECT_DEFAULT_CLASS, \" \").concat(className) : TREE_SELECT_DEFAULT_CLASS;\n      }\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      var _this3 = this;\n\n      if (isNotNil(value)) {\n        if (this.isMultiple && Array.isArray(value)) {\n          this.value = value;\n        } else {\n          this.value = [value];\n        }\n\n        this.updateSelectedNodes(true);\n      } else {\n        this.value = [];\n        this.selectedNodes.forEach(function (node) {\n          _this3.removeSelected(node, false);\n        });\n        this.selectedNodes = [];\n      }\n\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"onKeydown\",\n    value: function onKeydown(event) {\n      if (this.nzDisabled) {\n        return;\n      }\n\n      switch (event.keyCode) {\n        case ESCAPE:\n          /**\n           * Skip the ESCAPE processing, it will be handled in {@link onOverlayKeyDown}.\n           */\n          break;\n\n        case TAB:\n          this.closeDropDown();\n          break;\n\n        default:\n          if (!this.nzOpen) {\n            this.openDropdown();\n          }\n\n      }\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger() {\n      if (this.nzDisabled || !this.nzDisabled && this.nzOpen) {\n        this.closeDropDown();\n      } else {\n        this.openDropdown();\n      }\n    }\n  }, {\n    key: \"openDropdown\",\n    value: function openDropdown() {\n      if (!this.nzDisabled) {\n        this.nzOpen = true;\n        this.nzOpenChange.emit(this.nzOpen);\n        this.updateCdkConnectedOverlayStatus();\n\n        if (this.nzShowSearch || this.isMultiple) {\n          this.focusOnInput();\n        }\n      }\n    }\n  }, {\n    key: \"closeDropDown\",\n    value: function closeDropDown() {\n      this.onTouched();\n      this.nzOpen = false;\n      this.inputValue = '';\n      this.isNotFound = false;\n      this.nzOpenChange.emit(this.nzOpen);\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"onKeyDownInput\",\n    value: function onKeyDownInput(e) {\n      var keyCode = e.keyCode;\n      var eventTarget = e.target;\n\n      if (this.isMultiple && !eventTarget.value && keyCode === BACKSPACE) {\n        e.preventDefault();\n\n        if (this.selectedNodes.length) {\n          var removeNode = this.selectedNodes[this.selectedNodes.length - 1];\n          this.removeSelected(removeNode);\n        }\n      }\n    }\n  }, {\n    key: \"onExpandedKeysChange\",\n    value: function onExpandedKeysChange(value) {\n      this.nzExpandChange.emit(value);\n      this.expandedKeys = _toConsumableArray(value.keys);\n    }\n  }, {\n    key: \"setInputValue\",\n    value: function setInputValue(value) {\n      this.inputValue = value;\n      this.updatePosition();\n    }\n  }, {\n    key: \"removeSelected\",\n    value: function removeSelected(node) {\n      var emit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      node.isSelected = false;\n      node.isChecked = false;\n\n      if (this.nzCheckable) {\n        this.nzTreeService.conduct(node, this.nzCheckStrictly);\n      } else {\n        this.nzTreeService.setSelectedNodeList(node, this.nzMultiple);\n      }\n\n      if (emit) {\n        this.nzRemoved.emit(node);\n      }\n    }\n  }, {\n    key: \"focusOnInput\",\n    value: function focusOnInput() {\n      if (this.nzSelectSearchComponent) {\n        this.nzSelectSearchComponent.focus();\n      }\n    }\n  }, {\n    key: \"subscribeSelectionChange\",\n    value: function subscribeSelectionChange() {\n      var _this4 = this;\n\n      merge(this.nzTreeClick.pipe(tap(function (event) {\n        var node = event.node;\n\n        if (_this4.nzCheckable && !node.isDisabled && !node.isDisableCheckbox) {\n          node.isChecked = !node.isChecked;\n          node.isHalfChecked = false;\n\n          if (!_this4.nzCheckStrictly) {\n            _this4.nzTreeService.conduct(node);\n          }\n        }\n\n        if (_this4.nzCheckable) {\n          node.isSelected = false;\n        }\n      }), filter(function (event) {\n        var node = event.node;\n        return _this4.nzCheckable ? !node.isDisabled && !node.isDisableCheckbox : !node.isDisabled && node.isSelectable;\n      })), this.nzCheckable ? this.nzTreeCheckBoxChange : of(), this.nzCleared, this.nzRemoved).pipe(takeUntil(this.destroy$)).subscribe(function () {\n        _this4.updateSelectedNodes();\n\n        var value = _this4.selectedNodes.map(function (node) {\n          return node.key;\n        });\n\n        _this4.value = _toConsumableArray(value);\n\n        if (_this4.nzShowSearch || _this4.isMultiple) {\n          _this4.inputValue = '';\n          _this4.isNotFound = false;\n        }\n\n        if (_this4.isMultiple) {\n          _this4.onChange(value);\n\n          _this4.focusOnInput();\n\n          _this4.updatePosition();\n        } else {\n          _this4.closeDropDown();\n\n          _this4.onChange(value.length ? value[0] : null);\n        }\n      });\n    }\n  }, {\n    key: \"updateSelectedNodes\",\n    value: function updateSelectedNodes() {\n      var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (init) {\n        var nodes = this.coerceTreeNodes(this.nzNodes);\n        this.nzTreeService.isMultiple = this.isMultiple;\n        this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n        this.nzTreeService.initTree(nodes);\n\n        if (this.nzCheckable) {\n          this.nzTreeService.conductCheck(this.value, this.nzCheckStrictly);\n        } else {\n          this.nzTreeService.conductSelectedKeys(this.value, this.isMultiple);\n        }\n      }\n\n      this.selectedNodes = _toConsumableArray(this.nzCheckable ? this.getCheckedNodeList() : this.getSelectedNodeList());\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var _this5 = this;\n\n      reqAnimFrame(function () {\n        var _a, _b;\n\n        (_b = (_a = _this5.cdkConnectedOverlay) === null || _a === void 0 ? void 0 : _a.overlayRef) === null || _b === void 0 ? void 0 : _b.updatePosition();\n      });\n    }\n  }, {\n    key: \"onPositionChange\",\n    value: function onPositionChange(position) {\n      this.dropDownPosition = position.connectionPair.originY;\n    }\n  }, {\n    key: \"onClearSelection\",\n    value: function onClearSelection() {\n      var _this6 = this;\n\n      this.selectedNodes.forEach(function (node) {\n        _this6.removeSelected(node, false);\n      });\n      this.nzCleared.emit();\n    }\n  }, {\n    key: \"onClickOutside\",\n    value: function onClickOutside(event) {\n      if (!this.elementRef.nativeElement.contains(event.target)) {\n        this.closeDropDown();\n      }\n    }\n  }, {\n    key: \"setSearchValues\",\n    value: function setSearchValues($event) {\n      var _this7 = this;\n\n      Promise.resolve().then(function () {\n        _this7.isNotFound = (_this7.nzShowSearch || _this7.isMultiple) && !!_this7.inputValue && $event.matchedKeys.length === 0;\n      });\n    }\n  }, {\n    key: \"updateCdkConnectedOverlayStatus\",\n    value: function updateCdkConnectedOverlayStatus() {\n      this.triggerWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n    }\n  }, {\n    key: \"trackValue\",\n    value: function trackValue(_index, option) {\n      return option.key;\n    }\n  }]);\n\n  return NzTreeSelectComponent;\n}(NzTreeBase);\n\nNzTreeSelectComponent.ɵfac = function NzTreeSelectComponent_Factory(t) {\n  return new (t || NzTreeSelectComponent)(i0.ɵɵdirectiveInject(NzTreeSelectService), i0.ɵɵdirectiveInject(i2.NzConfigService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.Directionality, 8), i0.ɵɵdirectiveInject(i4.FocusMonitor), i0.ɵɵdirectiveInject(i5.NzNoAnimationDirective, 9));\n};\n\nNzTreeSelectComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTreeSelectComponent,\n  selectors: [[\"nz-tree-select\"]],\n  contentQueries: function NzTreeSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c0, 7);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzTreeTemplateChild = _t.first);\n    }\n  },\n  viewQuery: function NzTreeSelectComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(NzSelectSearchComponent, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(CdkOverlayOrigin, 7);\n      i0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzSelectSearchComponent = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.treeRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkConnectedOverlay = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-select\"],\n  hostVars: 22,\n  hostBindings: function NzTreeSelectComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NzTreeSelectComponent_click_HostBindingHandler() {\n        return ctx.trigger();\n      })(\"keydown\", function NzTreeSelectComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-select-lg\", ctx.nzSize === \"large\")(\"ant-select-rtl\", ctx.dir === \"rtl\")(\"ant-select-sm\", ctx.nzSize === \"small\")(\"ant-select-disabled\", ctx.nzDisabled)(\"ant-select-single\", !ctx.isMultiple)(\"ant-select-show-arrow\", !ctx.isMultiple)(\"ant-select-show-search\", !ctx.isMultiple)(\"ant-select-multiple\", ctx.isMultiple)(\"ant-select-allow-clear\", ctx.nzAllowClear)(\"ant-select-open\", ctx.nzOpen)(\"ant-select-focused\", ctx.nzOpen || ctx.focused);\n    }\n  },\n  inputs: {\n    nzId: \"nzId\",\n    nzAllowClear: \"nzAllowClear\",\n    nzShowExpand: \"nzShowExpand\",\n    nzShowLine: \"nzShowLine\",\n    nzDropdownMatchSelectWidth: \"nzDropdownMatchSelectWidth\",\n    nzCheckable: \"nzCheckable\",\n    nzHideUnMatched: \"nzHideUnMatched\",\n    nzShowIcon: \"nzShowIcon\",\n    nzShowSearch: \"nzShowSearch\",\n    nzDisabled: \"nzDisabled\",\n    nzAsyncData: \"nzAsyncData\",\n    nzMultiple: \"nzMultiple\",\n    nzDefaultExpandAll: \"nzDefaultExpandAll\",\n    nzCheckStrictly: \"nzCheckStrictly\",\n    nzVirtualItemSize: \"nzVirtualItemSize\",\n    nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\",\n    nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\",\n    nzVirtualHeight: \"nzVirtualHeight\",\n    nzExpandedIcon: \"nzExpandedIcon\",\n    nzNotFoundContent: \"nzNotFoundContent\",\n    nzNodes: \"nzNodes\",\n    nzOpen: \"nzOpen\",\n    nzSize: \"nzSize\",\n    nzPlaceHolder: \"nzPlaceHolder\",\n    nzDropdownStyle: \"nzDropdownStyle\",\n    nzDropdownClassName: \"nzDropdownClassName\",\n    nzBackdrop: \"nzBackdrop\",\n    nzExpandedKeys: \"nzExpandedKeys\",\n    nzDisplayWith: \"nzDisplayWith\",\n    nzMaxTagCount: \"nzMaxTagCount\",\n    nzMaxTagPlaceholder: \"nzMaxTagPlaceholder\",\n    nzTreeTemplate: \"nzTreeTemplate\"\n  },\n  outputs: {\n    nzOpenChange: \"nzOpenChange\",\n    nzCleared: \"nzCleared\",\n    nzRemoved: \"nzRemoved\",\n    nzExpandChange: \"nzExpandChange\",\n    nzTreeClick: \"nzTreeClick\",\n    nzTreeCheckBoxChange: \"nzTreeCheckBoxChange\"\n  },\n  exportAs: [\"nzTreeSelect\"],\n  features: [i0.ɵɵProvidersFeature([NzTreeSelectService, {\n    provide: NzTreeHigherOrderServiceToken,\n    useFactory: higherOrderServiceFactory,\n    deps: [[new Self(), Injector]]\n  }, {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NzTreeSelectComponent;\n    }),\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 17,\n  consts: [[\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayWidth\", \"overlayOutsideClick\", \"detach\", \"positionChange\"], [\"cdkOverlayOrigin\", \"\", 1, \"ant-select-selector\"], [4, \"ngIf\"], [3, \"nzId\", \"showInput\", \"value\", \"mirrorSync\", \"disabled\", \"focusTrigger\", \"keydown\", \"isComposingChange\", \"valueChange\"], [3, \"placeholder\", \"display\", 4, \"ngIf\"], [3, \"deletable\", \"disabled\", \"label\", 4, \"ngIf\"], [3, \"clear\", 4, \"ngIf\"], [3, \"ngClass\", \"nzNoAnimation\", \"dir\", \"ngStyle\"], [\"nzNoAnimation\", \"\", \"nzSelectMode\", \"\", \"nzBlockNode\", \"\", 3, \"hidden\", \"nzData\", \"nzMultiple\", \"nzSearchValue\", \"nzHideUnMatched\", \"nzShowIcon\", \"nzCheckable\", \"nzAsyncData\", \"nzShowExpand\", \"nzShowLine\", \"nzExpandedIcon\", \"nzExpandAll\", \"nzExpandedKeys\", \"nzCheckedKeys\", \"nzSelectedKeys\", \"nzTreeTemplate\", \"nzCheckStrictly\", \"nzVirtualItemSize\", \"nzVirtualMaxBufferPx\", \"nzVirtualMinBufferPx\", \"nzVirtualHeight\", \"nzExpandChange\", \"nzClick\", \"nzCheckedKeysChange\", \"nzSelectedKeysChange\", \"nzCheckBoxChange\", \"nzSearchValueChange\"], [\"treeRef\", \"\"], [\"class\", \"ant-select-not-found\", 4, \"ngIf\"], [1, \"ant-select-not-found\"], [3, \"nzComponentName\", \"specificContent\"], [3, \"deletable\", \"disabled\", \"label\", \"delete\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"contentTemplateOutlet\", \"contentTemplateOutletContext\", \"deletable\", \"disabled\", \"label\", 4, \"ngIf\"], [3, \"deletable\", \"disabled\", \"label\", \"delete\"], [3, \"contentTemplateOutlet\", \"contentTemplateOutletContext\", \"deletable\", \"disabled\", \"label\"], [3, \"placeholder\"], [3, \"deletable\", \"disabled\", \"label\"], [3, \"clear\"]],\n  template: function NzTreeSelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NzTreeSelectComponent_ng_template_0_Template, 4, 36, \"ng-template\", 0);\n      i0.ɵɵlistener(\"overlayOutsideClick\", function NzTreeSelectComponent_Template_ng_template_overlayOutsideClick_0_listener($event) {\n        return ctx.onClickOutside($event);\n      })(\"detach\", function NzTreeSelectComponent_Template_ng_template_detach_0_listener() {\n        return ctx.closeDropDown();\n      })(\"positionChange\", function NzTreeSelectComponent_Template_ng_template_positionChange_0_listener($event) {\n        return ctx.onPositionChange($event);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtemplate(2, NzTreeSelectComponent_ng_container_2_Template, 4, 7, \"ng-container\", 2);\n      i0.ɵɵelementStart(3, \"nz-select-search\", 3);\n      i0.ɵɵlistener(\"keydown\", function NzTreeSelectComponent_Template_nz_select_search_keydown_3_listener($event) {\n        return ctx.onKeyDownInput($event);\n      })(\"isComposingChange\", function NzTreeSelectComponent_Template_nz_select_search_isComposingChange_3_listener($event) {\n        return ctx.isComposing = $event;\n      })(\"valueChange\", function NzTreeSelectComponent_Template_nz_select_search_valueChange_3_listener($event) {\n        return ctx.setInputValue($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, NzTreeSelectComponent_nz_select_placeholder_4_Template, 1, 3, \"nz-select-placeholder\", 4);\n      i0.ɵɵtemplate(5, NzTreeSelectComponent_nz_select_item_5_Template, 1, 3, \"nz-select-item\", 5);\n      i0.ɵɵtemplate(6, NzTreeSelectComponent_nz_select_arrow_6_Template, 1, 0, \"nz-select-arrow\", 2);\n      i0.ɵɵtemplate(7, NzTreeSelectComponent_nz_select_clear_7_Template, 1, 0, \"nz-select-clear\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"cdkConnectedOverlayHasBackdrop\", ctx.nzBackdrop)(\"cdkConnectedOverlayOrigin\", ctx.cdkOverlayOrigin)(\"cdkConnectedOverlayOpen\", ctx.nzOpen)(\"cdkConnectedOverlayTransformOriginOn\", \".ant-select-tree-dropdown\")(\"cdkConnectedOverlayMinWidth\", ctx.nzDropdownMatchSelectWidth ? null : ctx.triggerWidth)(\"cdkConnectedOverlayWidth\", ctx.nzDropdownMatchSelectWidth ? ctx.triggerWidth : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isMultiple);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzId\", ctx.nzId)(\"showInput\", ctx.nzShowSearch)(\"value\", ctx.inputValue)(\"mirrorSync\", ctx.isMultiple)(\"disabled\", ctx.nzDisabled)(\"focusTrigger\", ctx.nzOpen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzPlaceHolder && ctx.selectedNodes.length === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isMultiple && ctx.selectedNodes.length === 1 && !ctx.isComposing && ctx.inputValue === \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isMultiple);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzAllowClear && !ctx.nzDisabled && ctx.selectedNodes.length);\n    }\n  },\n  directives: [i6.NzTreeComponent, i7.NzEmbedEmptyComponent, i8.NzSelectItemComponent, i8.NzSelectSearchComponent, i8.NzSelectPlaceholderComponent, i8.NzSelectArrowComponent, i8.NzSelectClearComponent, i9.CdkConnectedOverlay, i10.NzConnectedOverlayDirective, i11.NgClass, i5.NzNoAnimationDirective, i3.Dir, i11.NgStyle, i11.NgIf, i9.CdkOverlayOrigin, i11.NgForOf],\n  pipes: [i11.SlicePipe],\n  encapsulation: 2,\n  data: {\n    animation: [slideMotion]\n  }\n});\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzAllowClear\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzShowExpand\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzShowLine\", void 0);\n\n__decorate([InputBoolean(), WithConfig()], NzTreeSelectComponent.prototype, \"nzDropdownMatchSelectWidth\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzCheckable\", void 0);\n\n__decorate([InputBoolean(), WithConfig()], NzTreeSelectComponent.prototype, \"nzHideUnMatched\", void 0);\n\n__decorate([InputBoolean(), WithConfig()], NzTreeSelectComponent.prototype, \"nzShowIcon\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzShowSearch\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzAsyncData\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzMultiple\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzDefaultExpandAll\", void 0);\n\n__decorate([InputBoolean()], NzTreeSelectComponent.prototype, \"nzCheckStrictly\", void 0);\n\n__decorate([WithConfig()], NzTreeSelectComponent.prototype, \"nzSize\", void 0);\n\n__decorate([WithConfig()], NzTreeSelectComponent.prototype, \"nzBackdrop\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeSelectComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tree-select',\n      exportAs: 'nzTreeSelect',\n      animations: [slideMotion],\n      template: \"\\n    <ng-template\\n      cdkConnectedOverlay\\n      nzConnectedOverlay\\n      [cdkConnectedOverlayHasBackdrop]=\\\"nzBackdrop\\\"\\n      [cdkConnectedOverlayOrigin]=\\\"cdkOverlayOrigin\\\"\\n      [cdkConnectedOverlayOpen]=\\\"nzOpen\\\"\\n      [cdkConnectedOverlayTransformOriginOn]=\\\"'.ant-select-tree-dropdown'\\\"\\n      [cdkConnectedOverlayMinWidth]=\\\"$any(nzDropdownMatchSelectWidth ? null : triggerWidth)\\\"\\n      [cdkConnectedOverlayWidth]=\\\"$any(nzDropdownMatchSelectWidth ? triggerWidth : null)\\\"\\n      (overlayOutsideClick)=\\\"onClickOutside($event)\\\"\\n      (detach)=\\\"closeDropDown()\\\"\\n      (positionChange)=\\\"onPositionChange($event)\\\"\\n    >\\n      <div\\n        [@slideMotion]=\\\"'enter'\\\"\\n        [ngClass]=\\\"dropdownClassName\\\"\\n        [@.disabled]=\\\"noAnimation?.nzNoAnimation\\\"\\n        [nzNoAnimation]=\\\"noAnimation?.nzNoAnimation\\\"\\n        [class.ant-select-dropdown-placement-bottomLeft]=\\\"dropDownPosition === 'bottom'\\\"\\n        [class.ant-select-dropdown-placement-topLeft]=\\\"dropDownPosition === 'top'\\\"\\n        [class.ant-tree-select-dropdown-rtl]=\\\"dir === 'rtl'\\\"\\n        [dir]=\\\"dir\\\"\\n        [ngStyle]=\\\"nzDropdownStyle\\\"\\n      >\\n        <nz-tree\\n          #treeRef\\n          [hidden]=\\\"isNotFound\\\"\\n          nzNoAnimation\\n          nzSelectMode\\n          nzBlockNode\\n          [nzData]=\\\"nzNodes\\\"\\n          [nzMultiple]=\\\"nzMultiple\\\"\\n          [nzSearchValue]=\\\"inputValue\\\"\\n          [nzHideUnMatched]=\\\"nzHideUnMatched\\\"\\n          [nzShowIcon]=\\\"nzShowIcon\\\"\\n          [nzCheckable]=\\\"nzCheckable\\\"\\n          [nzAsyncData]=\\\"nzAsyncData\\\"\\n          [nzShowExpand]=\\\"nzShowExpand\\\"\\n          [nzShowLine]=\\\"nzShowLine\\\"\\n          [nzExpandedIcon]=\\\"nzExpandedIcon\\\"\\n          [nzExpandAll]=\\\"nzDefaultExpandAll\\\"\\n          [nzExpandedKeys]=\\\"expandedKeys\\\"\\n          [nzCheckedKeys]=\\\"nzCheckable ? value : []\\\"\\n          [nzSelectedKeys]=\\\"!nzCheckable ? value : []\\\"\\n          [nzTreeTemplate]=\\\"treeTemplate\\\"\\n          [nzCheckStrictly]=\\\"nzCheckStrictly\\\"\\n          [nzVirtualItemSize]=\\\"nzVirtualItemSize\\\"\\n          [nzVirtualMaxBufferPx]=\\\"nzVirtualMaxBufferPx\\\"\\n          [nzVirtualMinBufferPx]=\\\"nzVirtualMinBufferPx\\\"\\n          [nzVirtualHeight]=\\\"nzVirtualHeight\\\"\\n          (nzExpandChange)=\\\"onExpandedKeysChange($event)\\\"\\n          (nzClick)=\\\"nzTreeClick.emit($event)\\\"\\n          (nzCheckedKeysChange)=\\\"updateSelectedNodes()\\\"\\n          (nzSelectedKeysChange)=\\\"updateSelectedNodes()\\\"\\n          (nzCheckBoxChange)=\\\"nzTreeCheckBoxChange.emit($event)\\\"\\n          (nzSearchValueChange)=\\\"setSearchValues($event)\\\"\\n        ></nz-tree>\\n        <span *ngIf=\\\"nzNodes.length === 0 || isNotFound\\\" class=\\\"ant-select-not-found\\\">\\n          <nz-embed-empty [nzComponentName]=\\\"'tree-select'\\\" [specificContent]=\\\"nzNotFoundContent\\\"></nz-embed-empty>\\n        </span>\\n      </div>\\n    </ng-template>\\n\\n    <div cdkOverlayOrigin class=\\\"ant-select-selector\\\">\\n      <ng-container *ngIf=\\\"isMultiple\\\">\\n        <nz-select-item\\n          *ngFor=\\\"let node of selectedNodes | slice: 0:nzMaxTagCount; trackBy: trackValue\\\"\\n          [deletable]=\\\"true\\\"\\n          [disabled]=\\\"node.isDisabled || nzDisabled\\\"\\n          [label]=\\\"nzDisplayWith(node)\\\"\\n          (delete)=\\\"removeSelected(node, true)\\\"\\n        ></nz-select-item>\\n\\n        <nz-select-item\\n          *ngIf=\\\"selectedNodes.length > nzMaxTagCount\\\"\\n          [contentTemplateOutlet]=\\\"nzMaxTagPlaceholder\\\"\\n          [contentTemplateOutletContext]=\\\"selectedNodes | slice: nzMaxTagCount\\\"\\n          [deletable]=\\\"false\\\"\\n          [disabled]=\\\"false\\\"\\n          [label]=\\\"'+ ' + (selectedNodes.length - nzMaxTagCount) + ' ...'\\\"\\n        ></nz-select-item>\\n      </ng-container>\\n\\n      <nz-select-search\\n        [nzId]=\\\"nzId\\\"\\n        [showInput]=\\\"nzShowSearch\\\"\\n        (keydown)=\\\"onKeyDownInput($event)\\\"\\n        (isComposingChange)=\\\"isComposing = $event\\\"\\n        (valueChange)=\\\"setInputValue($event)\\\"\\n        [value]=\\\"inputValue\\\"\\n        [mirrorSync]=\\\"isMultiple\\\"\\n        [disabled]=\\\"nzDisabled\\\"\\n        [focusTrigger]=\\\"nzOpen\\\"\\n      ></nz-select-search>\\n\\n      <nz-select-placeholder\\n        *ngIf=\\\"nzPlaceHolder && selectedNodes.length === 0\\\"\\n        [placeholder]=\\\"nzPlaceHolder\\\"\\n        [style.display]=\\\"placeHolderDisplay\\\"\\n      ></nz-select-placeholder>\\n\\n      <nz-select-item\\n        *ngIf=\\\"!isMultiple && selectedNodes.length === 1 && !isComposing && inputValue === ''\\\"\\n        [deletable]=\\\"false\\\"\\n        [disabled]=\\\"false\\\"\\n        [label]=\\\"nzDisplayWith(selectedNodes[0])\\\"\\n      ></nz-select-item>\\n\\n      <nz-select-arrow *ngIf=\\\"!isMultiple\\\"></nz-select-arrow>\\n\\n      <nz-select-clear\\n        *ngIf=\\\"nzAllowClear && !nzDisabled && selectedNodes.length\\\"\\n        (clear)=\\\"onClearSelection()\\\"\\n      ></nz-select-clear>\\n    </div>\\n  \",\n      providers: [NzTreeSelectService, {\n        provide: NzTreeHigherOrderServiceToken,\n        useFactory: higherOrderServiceFactory,\n        deps: [[new Self(), Injector]]\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NzTreeSelectComponent;\n        }),\n        multi: true\n      }],\n      host: {\n        class: 'ant-select',\n        '[class.ant-select-lg]': 'nzSize===\"large\"',\n        '[class.ant-select-rtl]': 'dir===\"rtl\"',\n        '[class.ant-select-sm]': 'nzSize===\"small\"',\n        '[class.ant-select-disabled]': 'nzDisabled',\n        '[class.ant-select-single]': '!isMultiple',\n        '[class.ant-select-show-arrow]': '!isMultiple',\n        '[class.ant-select-show-search]': '!isMultiple',\n        '[class.ant-select-multiple]': 'isMultiple',\n        '[class.ant-select-allow-clear]': 'nzAllowClear',\n        '[class.ant-select-open]': 'nzOpen',\n        '[class.ant-select-focused]': 'nzOpen || focused',\n        '(click)': 'trigger()',\n        '(keydown)': 'onKeydown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzTreeSelectService\n    }, {\n      type: i2.NzConfigService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i4.FocusMonitor\n    }, {\n      type: i5.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    nzId: [{\n      type: Input\n    }],\n    nzAllowClear: [{\n      type: Input\n    }],\n    nzShowExpand: [{\n      type: Input\n    }],\n    nzShowLine: [{\n      type: Input\n    }],\n    nzDropdownMatchSelectWidth: [{\n      type: Input\n    }],\n    nzCheckable: [{\n      type: Input\n    }],\n    nzHideUnMatched: [{\n      type: Input\n    }],\n    nzShowIcon: [{\n      type: Input\n    }],\n    nzShowSearch: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzAsyncData: [{\n      type: Input\n    }],\n    nzMultiple: [{\n      type: Input\n    }],\n    nzDefaultExpandAll: [{\n      type: Input\n    }],\n    nzCheckStrictly: [{\n      type: Input\n    }],\n    nzVirtualItemSize: [{\n      type: Input\n    }],\n    nzVirtualMaxBufferPx: [{\n      type: Input\n    }],\n    nzVirtualMinBufferPx: [{\n      type: Input\n    }],\n    nzVirtualHeight: [{\n      type: Input\n    }],\n    nzExpandedIcon: [{\n      type: Input\n    }],\n    nzNotFoundContent: [{\n      type: Input\n    }],\n    nzNodes: [{\n      type: Input\n    }],\n    nzOpen: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzPlaceHolder: [{\n      type: Input\n    }],\n    nzDropdownStyle: [{\n      type: Input\n    }],\n    nzDropdownClassName: [{\n      type: Input\n    }],\n    nzBackdrop: [{\n      type: Input\n    }],\n    nzExpandedKeys: [{\n      type: Input\n    }],\n    nzDisplayWith: [{\n      type: Input\n    }],\n    nzMaxTagCount: [{\n      type: Input\n    }],\n    nzMaxTagPlaceholder: [{\n      type: Input\n    }],\n    nzOpenChange: [{\n      type: Output\n    }],\n    nzCleared: [{\n      type: Output\n    }],\n    nzRemoved: [{\n      type: Output\n    }],\n    nzExpandChange: [{\n      type: Output\n    }],\n    nzTreeClick: [{\n      type: Output\n    }],\n    nzTreeCheckBoxChange: [{\n      type: Output\n    }],\n    nzSelectSearchComponent: [{\n      type: ViewChild,\n      args: [NzSelectSearchComponent, {\n        static: false\n      }]\n    }],\n    treeRef: [{\n      type: ViewChild,\n      args: ['treeRef', {\n        static: false\n      }]\n    }],\n    cdkOverlayOrigin: [{\n      type: ViewChild,\n      args: [CdkOverlayOrigin, {\n        static: true\n      }]\n    }],\n    cdkConnectedOverlay: [{\n      type: ViewChild,\n      args: [CdkConnectedOverlay, {\n        static: false\n      }]\n    }],\n    nzTreeTemplate: [{\n      type: Input\n    }],\n    nzTreeTemplateChild: [{\n      type: ContentChild,\n      args: ['nzTreeTemplate', {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzTreeSelectModule = /*#__PURE__*/_createClass(function NzTreeSelectModule() {\n  _classCallCheck(this, NzTreeSelectModule);\n});\n\nNzTreeSelectModule.ɵfac = function NzTreeSelectModule_Factory(t) {\n  return new (t || NzTreeSelectModule)();\n};\n\nNzTreeSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzTreeSelectModule,\n  declarations: [NzTreeSelectComponent],\n  imports: [BidiModule, CommonModule, OverlayModule, FormsModule, NzSelectModule, NzTreeModule, NzIconModule, NzEmptyModule, NzOverlayModule, NzNoAnimationModule],\n  exports: [NzTreeSelectComponent]\n});\nNzTreeSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, OverlayModule, FormsModule, NzSelectModule, NzTreeModule, NzIconModule, NzEmptyModule, NzOverlayModule, NzNoAnimationModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTreeSelectModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, OverlayModule, FormsModule, NzSelectModule, NzTreeModule, NzIconModule, NzEmptyModule, NzOverlayModule, NzNoAnimationModule],\n      declarations: [NzTreeSelectComponent],\n      exports: [NzTreeSelectComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzTreeSelectComponent, NzTreeSelectModule, NzTreeSelectService, higherOrderServiceFactory }; //# sourceMappingURL=ng-zorro-antd-tree-select.mjs.map","map":null,"metadata":{},"sourceType":"module"}