{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nvar DataService = /*#__PURE__*/function () {\n  function DataService(http, notification, store) {\n    _classCallCheck(this, DataService);\n\n    this.http = http;\n    this.notification = notification;\n    this.store = store;\n    this.online = true;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      })\n    };\n  } // utitlity functions\n\n\n  _createClass(DataService, [{\n    key: \"get\",\n    value: function get(url) {\n      if (this.online) {\n        return this.http.get(\"/api/\".concat(url), this.httpOptions);\n      } else {\n        return of('offline');\n      }\n    }\n  }, {\n    key: \"post\",\n    value: function post(url, body) {\n      if (this.online) {\n        return this.http.post(\"/api/\".concat(url), body, this.httpOptions);\n      } else {\n        return of('offline');\n      }\n    } // funtions to specific endpoints\n\n  }, {\n    key: \"getCategoryAFarmers\",\n    value: function getCategoryAFarmers() {\n      return this.get('category-a-farmers');\n    } // getFaabsByUserId(user){\n    //   return this.get('faabs-groups').pipe(\n    //     filter( state => state.camp_id == user.camp)\n    //   )\n    // }\n    // getFaabsGroups(){\n    //     return this.store.pipe(select(Reducers.getUser))\n    //       .pipe(\n    //         switchMap(state => this.getFaabsByUserId(state.camp))\n    //       )\n    // }\n\n  }, {\n    key: \"getFaabsGroups\",\n    value: function getFaabsGroups() {\n      return this.get('faabs-groups');\n    }\n  }, {\n    key: \"getFaabsTopics\",\n    value: function getFaabsTopics() {\n      return this.get('faabs-topics');\n    } // Get the association table for faabs groups and topics\n\n  }, {\n    key: \"getFaabsTopicsEnrollments\",\n    value: function getFaabsTopicsEnrollments() {\n      return this.get('faabs-topics-enrollments');\n    }\n  }, {\n    key: \"getFaabsAttendanceRegister\",\n    value: function getFaabsAttendanceRegister() {\n      return this.get('faabs-attendance-registers');\n    }\n  }, {\n    key: \"getError\",\n    value: function getError() {\n      return this.get('error');\n    }\n  }, {\n    key: \"postFaabsAttendance\",\n    value: function postFaabsAttendance(item) {\n      console.log('Posting Item');\n      console.log(item);\n      return this.post('faabs-attendance-registers', item);\n    } // app specific functions\n    // GET /api/faabs-groups for a specific camp officer\n    // get get the camp office from the store\n\n  }, {\n    key: \"getFaabsCollection\",\n    value: function getFaabsCollection(camp_id) {\n      // get the faabs groups for the camp id\n      // and with the id get the farmers and filter by faabs group id\n      //     const FaabsGroups = this.getFaabsGroups().pipe(\n      //         // filter faabs groups by camp id\n      //         filter(state => state.camp_id == camp_id),\n      //         // get farmers for each faabs group\n      //         switchMap(state => {\n      //             const faabs_ids = state.faabs_ids;\n      //             const farmers = this.getCategoryAFarmers().pipe(\n      //                 // filter farmers by faabs group id\n      //                 filter(farmer => faabs_ids.includes(farmer.faabs_group_id)),\n      return '';\n    }\n  }]);\n\n  return DataService;\n}();\n\nDataService.ctorParameters = function () {\n  return [{\n    type: HttpClient\n  }, {\n    type: NzNotificationService\n  }, {\n    type: Store\n  }];\n};\n\nDataService = __decorate([Injectable({\n  providedIn: 'root'\n}), __metadata(\"design:paramtypes\", [HttpClient, NzNotificationService, Store])], DataService);\nexport { DataService };","map":null,"metadata":{},"sourceType":"module"}