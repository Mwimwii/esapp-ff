{"ast":null,"code":"import { NzNotificationService } from 'ng-zorro-antd/notification';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ng-zorro-antd/notification\";\nimport * as i3 from \"@ngrx/store\";\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor(http, notification, store) {\n      this.http = http;\n      this.notification = notification;\n      this.store = store;\n      this.online = true;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        })\n      };\n    } // utitlity functions\n\n\n    get(url) {\n      if (this.online) {\n        return this.http.get(`/api/${url}`, this.httpOptions);\n      } else {\n        return of('offline');\n      }\n    }\n\n    post(url, body) {\n      if (this.online) {\n        return this.http.post(`/api/${url}`, body, this.httpOptions);\n      } else {\n        return of('offline');\n      }\n    } // funtions to specific endpoints\n\n\n    getCategoryAFarmers() {\n      return this.get('category-a-farmers');\n    } // getFaabsByUserId(user){\n    //   return this.get('faabs-groups').pipe(\n    //     filter( state => state.camp_id == user.camp)\n    //   )\n    // }\n    // getFaabsGroups(){\n    //     return this.store.pipe(select(Reducers.getUser))\n    //       .pipe(\n    //         switchMap(state => this.getFaabsByUserId(state.camp))\n    //       )\n    // }\n\n\n    getFaabsGroups() {\n      return this.get('faabs-groups');\n    }\n\n    getFaabsTopics() {\n      return this.get('faabs-topics');\n    } // Get the association table for faabs groups and topics\n\n\n    getFaabsTopicsEnrollments() {\n      return this.get('faabs-topics-enrollments');\n    }\n\n    getFaabsAttendanceRegister() {\n      return this.get('faabs-attendance-registers');\n    }\n\n    getError() {\n      return this.get('error');\n    }\n\n    postFaabsAttendance(item) {\n      console.log('Posting Item');\n      console.log(item);\n      return this.post('faabs-attendance-registers', item);\n    } // app specific functions\n    // GET /api/faabs-groups for a specific camp officer\n    // get get the camp office from the store\n\n\n    getFaabsCollection(camp_id) {\n      // get the faabs groups for the camp id\n      // and with the id get the farmers and filter by faabs group id\n      //     const FaabsGroups = this.getFaabsGroups().pipe(\n      //         // filter faabs groups by camp id\n      //         filter(state => state.camp_id == camp_id),\n      //         // get farmers for each faabs group\n      //         switchMap(state => {\n      //             const faabs_ids = state.faabs_ids;\n      //             const farmers = this.getCategoryAFarmers().pipe(\n      //                 // filter farmers by faabs group id\n      //                 filter(farmer => faabs_ids.includes(farmer.faabs_group_id)),\n      return '';\n    }\n\n  }\n\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.NzNotificationService), i0.ɵɵinject(i3.Store));\n  };\n\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module"}