{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\admin\\\\Documents\\\\work\\\\ESAPP\\\\esapp-mobile\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { __decorate } from 'tslib';\nimport { LEFT_ARROW, RIGHT_ARROW, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, ViewChild, Input, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i4 from 'ng-zorro-antd/core/wave';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i7 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nvar _c0 = [\"switchElement\"];\n\nfunction NzSwitchComponent_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 8);\n  }\n}\n\nfunction NzSwitchComponent_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.nzCheckedChildren);\n  }\n}\n\nfunction NzSwitchComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzSwitchComponent_ng_container_5_ng_container_1_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.nzCheckedChildren);\n  }\n}\n\nfunction NzSwitchComponent_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.nzUnCheckedChildren);\n  }\n}\n\nfunction NzSwitchComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzSwitchComponent_ng_template_6_ng_container_0_Template, 2, 1, \"ng-container\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r4.nzUnCheckedChildren);\n  }\n}\n\nvar NZ_CONFIG_MODULE_NAME = 'switch';\n\nvar NzSwitchComponent = /*#__PURE__*/function () {\n  function NzSwitchComponent(nzConfigService, host, ngZone, cdr, focusMonitor, directionality) {\n    _classCallCheck(this, NzSwitchComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.host = host;\n    this.ngZone = ngZone;\n    this.cdr = cdr;\n    this.focusMonitor = focusMonitor;\n    this.directionality = directionality;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.isChecked = false;\n\n    this.onChange = function () {};\n\n    this.onTouched = function () {};\n\n    this.nzLoading = false;\n    this.nzDisabled = false;\n    this.nzControl = false;\n    this.nzCheckedChildren = null;\n    this.nzUnCheckedChildren = null;\n    this.nzSize = 'default';\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n\n  _createClass(NzSwitchComponent, [{\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (this.isChecked !== value) {\n        this.isChecked = value;\n        this.onChange(this.isChecked);\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.focusMonitor.focusVia(this.switchElement.nativeElement, 'keyboard');\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.switchElement.nativeElement.blur();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe(function (direction) {\n        _this.dir = direction;\n\n        _this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n      this.ngZone.runOutsideAngular(function () {\n        fromEvent(_this.host.nativeElement, 'click').pipe(takeUntil(_this.destroy$)).subscribe(function (event) {\n          event.preventDefault();\n\n          if (_this.nzControl || _this.nzDisabled || _this.nzLoading) {\n            return;\n          }\n\n          _this.ngZone.run(function () {\n            _this.updateValue(!_this.isChecked);\n\n            _this.cdr.markForCheck();\n          });\n        });\n        fromEvent(_this.switchElement.nativeElement, 'keydown').pipe(takeUntil(_this.destroy$)).subscribe(function (event) {\n          if (_this.nzControl || _this.nzDisabled || _this.nzLoading) {\n            return;\n          }\n\n          var keyCode = event.keyCode;\n\n          if (keyCode !== LEFT_ARROW && keyCode !== RIGHT_ARROW && keyCode !== SPACE && keyCode !== ENTER) {\n            return;\n          }\n\n          event.preventDefault();\n\n          _this.ngZone.run(function () {\n            if (keyCode === LEFT_ARROW) {\n              _this.updateValue(false);\n            } else if (keyCode === RIGHT_ARROW) {\n              _this.updateValue(true);\n            } else if (keyCode === SPACE || keyCode === ENTER) {\n              _this.updateValue(!_this.isChecked);\n            }\n\n            _this.cdr.markForCheck();\n          });\n        });\n      });\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this2 = this;\n\n      this.focusMonitor.monitor(this.switchElement.nativeElement, true).pipe(takeUntil(this.destroy$)).subscribe(function (focusOrigin) {\n        if (!focusOrigin) {\n          /** https://github.com/angular/angular/issues/17793 **/\n          Promise.resolve().then(function () {\n            return _this2.onTouched();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.focusMonitor.stopMonitoring(this.switchElement.nativeElement);\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.isChecked = value;\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(disabled) {\n      this.nzDisabled = disabled;\n      this.cdr.markForCheck();\n    }\n  }]);\n\n  return NzSwitchComponent;\n}();\n\nNzSwitchComponent.ɵfac = function NzSwitchComponent_Factory(t) {\n  return new (t || NzSwitchComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i3.Directionality, 8));\n};\n\nNzSwitchComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSwitchComponent,\n  selectors: [[\"nz-switch\"]],\n  viewQuery: function NzSwitchComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.switchElement = _t.first);\n    }\n  },\n  inputs: {\n    nzLoading: \"nzLoading\",\n    nzDisabled: \"nzDisabled\",\n    nzControl: \"nzControl\",\n    nzCheckedChildren: \"nzCheckedChildren\",\n    nzUnCheckedChildren: \"nzUnCheckedChildren\",\n    nzSize: \"nzSize\"\n  },\n  exportAs: [\"nzSwitch\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NzSwitchComponent;\n    }),\n    multi: true\n  }])],\n  decls: 9,\n  vars: 15,\n  consts: [[\"nz-wave\", \"\", \"type\", \"button\", 1, \"ant-switch\", 3, \"disabled\", \"nzWaveExtraNode\"], [\"switchElement\", \"\"], [1, \"ant-switch-handle\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", \"class\", \"ant-switch-loading-icon\", 4, \"ngIf\"], [1, \"ant-switch-inner\"], [4, \"ngIf\", \"ngIfElse\"], [\"uncheckTemplate\", \"\"], [1, \"ant-click-animating-node\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 1, \"ant-switch-loading-icon\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzSwitchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0, 1)(2, \"span\", 2);\n      i0.ɵɵtemplate(3, NzSwitchComponent_i_3_Template, 1, 0, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"span\", 4);\n      i0.ɵɵtemplate(5, NzSwitchComponent_ng_container_5_Template, 2, 1, \"ng-container\", 5);\n      i0.ɵɵtemplate(6, NzSwitchComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"div\", 7);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      var _r3 = i0.ɵɵreference(7);\n\n      i0.ɵɵclassProp(\"ant-switch-checked\", ctx.isChecked)(\"ant-switch-loading\", ctx.nzLoading)(\"ant-switch-disabled\", ctx.nzDisabled)(\"ant-switch-small\", ctx.nzSize === \"small\")(\"ant-switch-rtl\", ctx.dir === \"rtl\");\n      i0.ɵɵproperty(\"disabled\", ctx.nzDisabled)(\"nzWaveExtraNode\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzLoading);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isChecked)(\"ngIfElse\", _r3);\n    }\n  },\n  directives: [i4.NzWaveDirective, i5.NgIf, i6.NzIconDirective, i7.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzSwitchComponent.prototype, \"nzLoading\", void 0);\n\n__decorate([InputBoolean()], NzSwitchComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean()], NzSwitchComponent.prototype, \"nzControl\", void 0);\n\n__decorate([WithConfig()], NzSwitchComponent.prototype, \"nzSize\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSwitchComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-switch',\n      exportAs: 'nzSwitch',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NzSwitchComponent;\n        }),\n        multi: true\n      }],\n      template: \"\\n    <button\\n      nz-wave\\n      type=\\\"button\\\"\\n      class=\\\"ant-switch\\\"\\n      #switchElement\\n      [disabled]=\\\"nzDisabled\\\"\\n      [class.ant-switch-checked]=\\\"isChecked\\\"\\n      [class.ant-switch-loading]=\\\"nzLoading\\\"\\n      [class.ant-switch-disabled]=\\\"nzDisabled\\\"\\n      [class.ant-switch-small]=\\\"nzSize === 'small'\\\"\\n      [class.ant-switch-rtl]=\\\"dir === 'rtl'\\\"\\n      [nzWaveExtraNode]=\\\"true\\\"\\n    >\\n      <span class=\\\"ant-switch-handle\\\">\\n        <i *ngIf=\\\"nzLoading\\\" nz-icon nzType=\\\"loading\\\" class=\\\"ant-switch-loading-icon\\\"></i>\\n      </span>\\n      <span class=\\\"ant-switch-inner\\\">\\n        <ng-container *ngIf=\\\"isChecked; else uncheckTemplate\\\">\\n          <ng-container *nzStringTemplateOutlet=\\\"nzCheckedChildren\\\">{{ nzCheckedChildren }}</ng-container>\\n        </ng-container>\\n        <ng-template #uncheckTemplate>\\n          <ng-container *nzStringTemplateOutlet=\\\"nzUnCheckedChildren\\\">{{ nzUnCheckedChildren }}</ng-container>\\n        </ng-template>\\n      </span>\\n      <div class=\\\"ant-click-animating-node\\\"></div>\\n    </button>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: i1.NzConfigService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.FocusMonitor\n    }, {\n      type: i3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    switchElement: [{\n      type: ViewChild,\n      args: ['switchElement', {\n        static: true\n      }]\n    }],\n    nzLoading: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzControl: [{\n      type: Input\n    }],\n    nzCheckedChildren: [{\n      type: Input\n    }],\n    nzUnCheckedChildren: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nvar NzSwitchModule = /*#__PURE__*/_createClass(function NzSwitchModule() {\n  _classCallCheck(this, NzSwitchModule);\n});\n\nNzSwitchModule.ɵfac = function NzSwitchModule_Factory(t) {\n  return new (t || NzSwitchModule)();\n};\n\nNzSwitchModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzSwitchModule,\n  declarations: [NzSwitchComponent],\n  imports: [BidiModule, CommonModule, NzWaveModule, NzIconModule, NzOutletModule],\n  exports: [NzSwitchComponent]\n});\nNzSwitchModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, NzWaveModule, NzIconModule, NzOutletModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSwitchModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzSwitchComponent],\n      declarations: [NzSwitchComponent],\n      imports: [BidiModule, CommonModule, NzWaveModule, NzIconModule, NzOutletModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzSwitchComponent, NzSwitchModule }; //# sourceMappingURL=ng-zorro-antd-switch.mjs.map","map":null,"metadata":{},"sourceType":"module"}