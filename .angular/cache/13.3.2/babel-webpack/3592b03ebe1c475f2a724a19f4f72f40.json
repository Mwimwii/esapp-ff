{"ast":null,"code":"import { Component, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FieldWrapper, FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NzFormModule } from 'ng-zorro-antd/form';\n/**\n * @fileoverview added by tsickle\n * Generated from: form-field.wrapper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/grid';\nimport * as ɵngcc2 from 'ng-zorro-antd/form';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@ngx-formly/core';\n\nfunction FormlyWrapperFormField_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"nz-form-label\", 4);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzRequired\", ctx_r0.to.required && ctx_r0.to.hideRequiredMarker !== true)(\"nzFor\", ctx_r0.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.to.label, \" \");\n  }\n}\n\nfunction FormlyWrapperFormField_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"formly-validation-message\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"field\", ctx_r3.field);\n  }\n}\n\nlet FormlyWrapperFormField = /*#__PURE__*/(() => {\n  class FormlyWrapperFormField extends FieldWrapper {\n    /**\n     * @return {?}\n     */\n    get errorState() {\n      return this.showError ? 'error' : '';\n    }\n\n  }\n\n  FormlyWrapperFormField.ɵfac = /*@__PURE__*/function () {\n    let ɵFormlyWrapperFormField_BaseFactory;\n    return function FormlyWrapperFormField_Factory(t) {\n      return (ɵFormlyWrapperFormField_BaseFactory || (ɵFormlyWrapperFormField_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FormlyWrapperFormField)))(t || FormlyWrapperFormField);\n    };\n  }();\n\n  FormlyWrapperFormField.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FormlyWrapperFormField,\n    selectors: [[\"formly-wrapper-nz-form-field\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 7,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [3, \"nzValidateStatus\", \"nzErrorTip\"], [\"fieldComponent\", \"\"], [\"errorTpl\", \"\"], [3, \"nzRequired\", \"nzFor\"], [3, \"field\"]],\n    template: function FormlyWrapperFormField_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"nz-form-item\");\n        ɵngcc0.ɵɵtemplate(1, FormlyWrapperFormField_ng_container_1_Template, 3, 3, \"ng-container\", 0);\n        ɵngcc0.ɵɵelementStart(2, \"nz-form-control\", 1);\n        ɵngcc0.ɵɵelementContainer(3, null, 2);\n        ɵngcc0.ɵɵtemplate(5, FormlyWrapperFormField_ng_template_5_Template, 1, 1, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r2 = ɵngcc0.ɵɵreference(6);\n\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.to.label && ctx.to.hideLabel !== true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"nzValidateStatus\", ctx.errorState)(\"nzErrorTip\", _r2);\n      }\n    },\n    directives: [ɵngcc1.NzRowDirective, ɵngcc2.NzFormItemComponent, ɵngcc3.NgIf, ɵngcc1.NzColDirective, ɵngcc2.NzFormLabelComponent, ɵngcc2.NzFormControlComponent, ɵngcc4.ɵc],\n    encapsulation: 2\n  });\n  return FormlyWrapperFormField;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: form-field.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FormlyNzFormFieldModule = /*#__PURE__*/(() => {\n  class FormlyNzFormFieldModule {}\n\n  FormlyNzFormFieldModule.ɵfac = function FormlyNzFormFieldModule_Factory(t) {\n    return new (t || FormlyNzFormFieldModule)();\n  };\n\n  FormlyNzFormFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FormlyNzFormFieldModule\n  });\n  FormlyNzFormFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ReactiveFormsModule, NzFormModule, FormlyModule.forChild({\n      wrappers: [{\n        name: 'form-field',\n        component: FormlyWrapperFormField\n      }]\n    })]]\n  });\n  return FormlyNzFormFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormlyNzFormFieldModule, {\n    declarations: function () {\n      return [FormlyWrapperFormField];\n    },\n    imports: function () {\n      return [CommonModule, ReactiveFormsModule, NzFormModule, ɵngcc4.FormlyModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-formly-ng-zorro-antd-form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { FormlyNzFormFieldModule, FormlyWrapperFormField as ɵa }; //# sourceMappingURL=ngx-formly-ng-zorro-antd-form-field.js.map","map":null,"metadata":{},"sourceType":"module"}