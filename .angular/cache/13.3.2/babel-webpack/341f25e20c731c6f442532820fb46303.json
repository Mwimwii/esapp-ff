{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment.dev';\nimport store from 'store';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let basicAuthService = /*#__PURE__*/(() => {\n  class basicAuthService {\n    constructor(http) {\n      this.http = http;\n      this.environment = environment;\n    }\n\n    login(email, password) {\n      const url = this.environment.apiUrl + '/auth-token';\n      const auth = btoa(email + ':' + password);\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Basic ' + auth\n        })\n      };\n      return this.http.get(url, httpOptions);\n    } // user name password\n\n\n    currentAccount() {\n      const url = this.environment.apiUrl + '/auth-token'; // const accessToken = 'Basic ' + btoa(store.get('email') + ':' + store.get('password'))\n\n      const accessToken = store.get('accessToken');\n      const params = accessToken ? {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': accessToken\n        }\n      } : {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Basic bluffToken'\n        }\n      };\n      return this.http.get(url, params);\n    }\n\n    logout() {\n      const url = this.environment.apiUrl + '/auth-token/logout';\n      return this.http.get(url);\n    }\n\n  }\n\n  basicAuthService.ɵfac = function basicAuthService_Factory(t) {\n    return new (t || basicAuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  basicAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: basicAuthService,\n    factory: basicAuthService.ɵfac\n  });\n  return basicAuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}