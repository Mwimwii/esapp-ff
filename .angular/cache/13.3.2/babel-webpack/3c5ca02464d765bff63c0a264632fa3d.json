{"ast":null,"code":"import { select, Store } from '@ngrx/store';\nimport * as Reducers from 'src/app/store/reducers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\n\nfunction ACLComponent_ng_content_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"authorized\"]);\n  }\n}\n\nconst _c0 = [\"*\"];\nexport let ACLComponent = /*#__PURE__*/(() => {\n  class ACLComponent {\n    constructor(store) {\n      this.store = store;\n      this.roles = [];\n      this.authorized = false;\n      this.store.pipe(select(Reducers.getUser)).subscribe(state => {\n        this.authorized = this.roles.includes(state.role);\n      });\n    }\n\n  }\n\n  ACLComponent.ɵfac = function ACLComponent_Factory(t) {\n    return new (t || ACLComponent)(i0.ɵɵdirectiveInject(i1.Store));\n  };\n\n  ACLComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ACLComponent,\n    selectors: [[\"vb-acl\"]],\n    inputs: {\n      roles: \"roles\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"]],\n    template: function ACLComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, ACLComponent_ng_content_0_Template, 1, 0, \"ng-content\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.authorized);\n      }\n    },\n    encapsulation: 2\n  });\n  return ACLComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}