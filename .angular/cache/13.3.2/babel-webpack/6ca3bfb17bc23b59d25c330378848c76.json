{"ast":null,"code":"import store from 'store';\nimport * as actions from './actions';\n\nconst STORED_SETTINGS = storedSettings => {\n  const settings = {};\n  Object.keys(storedSettings).forEach(key => {\n    const item = store.get(`app.settings.${key}`);\n    settings[key] = typeof item !== 'undefined' ? item : storedSettings[key];\n  });\n  return settings;\n};\n\nexport const initialState = Object.assign({}, STORED_SETTINGS({\n  // Read docs for available values: https://docs.visualbuilder.cloud\n  // VB:REPLACE-START:SETTINGS\n  authProvider: 'basic-auth',\n  logo: 'ESAPP',\n  version: 'air',\n  theme: 'default',\n  locale: 'en-US',\n  isSidebarOpen: false,\n  isSupportChatOpen: false,\n  isMobileView: false,\n  isMobileMenuOpen: false,\n  isMenuCollapsed: false,\n  isPreselectedOpen: false,\n  preselectedVariant: 'waves',\n  menuLayoutType: 'left',\n  routerAnimation: 'zoom-fadein',\n  menuColor: 'white',\n  authPagesColor: 'gray',\n  isAuthTopbar: true,\n  primaryColor: '#28a745',\n  leftMenuWidth: 256,\n  isMenuUnfixed: false,\n  isMenuShadow: true,\n  isTopbarFixed: false,\n  isTopbarSeparated: true,\n  isGrayTopbar: false,\n  isContentMaxWidth: true,\n  isAppMaxWidth: false,\n  isGrayBackground: false,\n  isCardShadow: true,\n  isSquaredBorders: false,\n  isBorderless: false,\n  layoutMenu: 'air',\n  layoutTopbar: 'v1',\n  layoutBreadcrumbs: 'v1',\n  layoutFooter: 'v1',\n  flyoutMenuType: 'flyout',\n  flyoutMenuColor: 'blue' // VB:REPLACE-END:SETTINGS\n\n}));\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_STATE:\n      const key = Object.keys(action.payload)[0];\n      store.set(`app.settings.${key}`, action.payload[key]);\n      return Object.assign(Object.assign({}, state), action.payload);\n\n    case actions.CHANGE_SETTING_BULK:\n      const settings = {};\n      Object.keys(action.payload).forEach(key => {\n        store.set(`app.settings.${key}`, action.payload[key]);\n        settings[key] = action.payload[key];\n      });\n      return Object.assign(Object.assign({}, state), action.payload);\n\n    default:\n      return state;\n  }\n}\nexport const getSettings = state => state;","map":null,"metadata":{},"sourceType":"module"}